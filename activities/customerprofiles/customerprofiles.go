// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package customerprofiles

import (
	"context"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/customerprofiles"
	"github.com/aws/aws-sdk-go/service/customerprofiles/customerprofilesiface"

	"github.com/banzaicloud/cadence-aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

// SessionFactory returns an aws.Session based on the activity context.
type SessionFactory interface {
	Session(ctx context.Context) (*session.Session, error)
}

type Activities struct {
	client customerprofilesiface.CustomerProfilesAPI

	sessionFactory SessionFactory
}

func NewActivities(sess *session.Session, config ...*aws.Config) *Activities {
	client := customerprofiles.New(sess, config...)
	return &Activities{client: client}
}

func NewActivitiesWithSessionFactory(sessionFactory SessionFactory) *Activities {
	return &Activities{sessionFactory: sessionFactory}
}

func (a *Activities) getClient(ctx context.Context) (customerprofilesiface.CustomerProfilesAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}

	return customerprofiles.New(sess), nil
}

func (a *Activities) AddProfileKey(ctx context.Context, input *customerprofiles.AddProfileKeyInput) (*customerprofiles.AddProfileKeyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AddProfileKeyWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateDomain(ctx context.Context, input *customerprofiles.CreateDomainInput) (*customerprofiles.CreateDomainOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateDomainWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateProfile(ctx context.Context, input *customerprofiles.CreateProfileInput) (*customerprofiles.CreateProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteDomain(ctx context.Context, input *customerprofiles.DeleteDomainInput) (*customerprofiles.DeleteDomainOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteDomainWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteIntegration(ctx context.Context, input *customerprofiles.DeleteIntegrationInput) (*customerprofiles.DeleteIntegrationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteIntegrationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteProfile(ctx context.Context, input *customerprofiles.DeleteProfileInput) (*customerprofiles.DeleteProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteProfileKey(ctx context.Context, input *customerprofiles.DeleteProfileKeyInput) (*customerprofiles.DeleteProfileKeyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteProfileKeyWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteProfileObject(ctx context.Context, input *customerprofiles.DeleteProfileObjectInput) (*customerprofiles.DeleteProfileObjectOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteProfileObjectWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteProfileObjectType(ctx context.Context, input *customerprofiles.DeleteProfileObjectTypeInput) (*customerprofiles.DeleteProfileObjectTypeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteProfileObjectTypeWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDomain(ctx context.Context, input *customerprofiles.GetDomainInput) (*customerprofiles.GetDomainOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDomainWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetIntegration(ctx context.Context, input *customerprofiles.GetIntegrationInput) (*customerprofiles.GetIntegrationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetIntegrationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetProfileObjectType(ctx context.Context, input *customerprofiles.GetProfileObjectTypeInput) (*customerprofiles.GetProfileObjectTypeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetProfileObjectTypeWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetProfileObjectTypeTemplate(ctx context.Context, input *customerprofiles.GetProfileObjectTypeTemplateInput) (*customerprofiles.GetProfileObjectTypeTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetProfileObjectTypeTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListAccountIntegrations(ctx context.Context, input *customerprofiles.ListAccountIntegrationsInput) (*customerprofiles.ListAccountIntegrationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListAccountIntegrationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListDomains(ctx context.Context, input *customerprofiles.ListDomainsInput) (*customerprofiles.ListDomainsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListDomainsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListIntegrations(ctx context.Context, input *customerprofiles.ListIntegrationsInput) (*customerprofiles.ListIntegrationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListIntegrationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListProfileObjectTypeTemplates(ctx context.Context, input *customerprofiles.ListProfileObjectTypeTemplatesInput) (*customerprofiles.ListProfileObjectTypeTemplatesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListProfileObjectTypeTemplatesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListProfileObjectTypes(ctx context.Context, input *customerprofiles.ListProfileObjectTypesInput) (*customerprofiles.ListProfileObjectTypesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListProfileObjectTypesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListProfileObjects(ctx context.Context, input *customerprofiles.ListProfileObjectsInput) (*customerprofiles.ListProfileObjectsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListProfileObjectsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListTagsForResource(ctx context.Context, input *customerprofiles.ListTagsForResourceInput) (*customerprofiles.ListTagsForResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListTagsForResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutIntegration(ctx context.Context, input *customerprofiles.PutIntegrationInput) (*customerprofiles.PutIntegrationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutIntegrationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutProfileObject(ctx context.Context, input *customerprofiles.PutProfileObjectInput) (*customerprofiles.PutProfileObjectOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutProfileObjectWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutProfileObjectType(ctx context.Context, input *customerprofiles.PutProfileObjectTypeInput) (*customerprofiles.PutProfileObjectTypeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutProfileObjectTypeWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) SearchProfiles(ctx context.Context, input *customerprofiles.SearchProfilesInput) (*customerprofiles.SearchProfilesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.SearchProfilesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) TagResource(ctx context.Context, input *customerprofiles.TagResourceInput) (*customerprofiles.TagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.TagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UntagResource(ctx context.Context, input *customerprofiles.UntagResourceInput) (*customerprofiles.UntagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UntagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateDomain(ctx context.Context, input *customerprofiles.UpdateDomainInput) (*customerprofiles.UpdateDomainOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateDomainWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateProfile(ctx context.Context, input *customerprofiles.UpdateProfileInput) (*customerprofiles.UpdateProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}
