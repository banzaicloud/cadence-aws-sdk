// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package devopsguru

import (
	"context"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/devopsguru"
	"github.com/aws/aws-sdk-go/service/devopsguru/devopsguruiface"

	"github.com/banzaicloud/cadence-aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

// SessionFactory returns an aws.Session based on the activity context.
type SessionFactory interface {
	Session(ctx context.Context) (*session.Session, error)
}

type Activities struct {
	client devopsguruiface.DevOpsGuruAPI

	sessionFactory SessionFactory
}

func NewActivities(sess *session.Session, config ...*aws.Config) *Activities {
	client := devopsguru.New(sess, config...)
	return &Activities{client: client}
}

func NewActivitiesWithSessionFactory(sessionFactory SessionFactory) *Activities {
	return &Activities{sessionFactory: sessionFactory}
}

func (a *Activities) getClient(ctx context.Context) (devopsguruiface.DevOpsGuruAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}

	return devopsguru.New(sess), nil
}

func (a *Activities) AddNotificationChannel(ctx context.Context, input *devopsguru.AddNotificationChannelInput) (*devopsguru.AddNotificationChannelOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AddNotificationChannelWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeAccountHealth(ctx context.Context, input *devopsguru.DescribeAccountHealthInput) (*devopsguru.DescribeAccountHealthOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeAccountHealthWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeAccountOverview(ctx context.Context, input *devopsguru.DescribeAccountOverviewInput) (*devopsguru.DescribeAccountOverviewOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeAccountOverviewWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeAnomaly(ctx context.Context, input *devopsguru.DescribeAnomalyInput) (*devopsguru.DescribeAnomalyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeAnomalyWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeInsight(ctx context.Context, input *devopsguru.DescribeInsightInput) (*devopsguru.DescribeInsightOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeInsightWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeResourceCollectionHealth(ctx context.Context, input *devopsguru.DescribeResourceCollectionHealthInput) (*devopsguru.DescribeResourceCollectionHealthOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeResourceCollectionHealthWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeServiceIntegration(ctx context.Context, input *devopsguru.DescribeServiceIntegrationInput) (*devopsguru.DescribeServiceIntegrationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeServiceIntegrationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetResourceCollection(ctx context.Context, input *devopsguru.GetResourceCollectionInput) (*devopsguru.GetResourceCollectionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetResourceCollectionWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListAnomaliesForInsight(ctx context.Context, input *devopsguru.ListAnomaliesForInsightInput) (*devopsguru.ListAnomaliesForInsightOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListAnomaliesForInsightWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListEvents(ctx context.Context, input *devopsguru.ListEventsInput) (*devopsguru.ListEventsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListEventsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListInsights(ctx context.Context, input *devopsguru.ListInsightsInput) (*devopsguru.ListInsightsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListInsightsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListNotificationChannels(ctx context.Context, input *devopsguru.ListNotificationChannelsInput) (*devopsguru.ListNotificationChannelsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListNotificationChannelsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListRecommendations(ctx context.Context, input *devopsguru.ListRecommendationsInput) (*devopsguru.ListRecommendationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListRecommendationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutFeedback(ctx context.Context, input *devopsguru.PutFeedbackInput) (*devopsguru.PutFeedbackOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutFeedbackWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) RemoveNotificationChannel(ctx context.Context, input *devopsguru.RemoveNotificationChannelInput) (*devopsguru.RemoveNotificationChannelOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.RemoveNotificationChannelWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) SearchInsights(ctx context.Context, input *devopsguru.SearchInsightsInput) (*devopsguru.SearchInsightsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.SearchInsightsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateResourceCollection(ctx context.Context, input *devopsguru.UpdateResourceCollectionInput) (*devopsguru.UpdateResourceCollectionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateResourceCollectionWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateServiceIntegration(ctx context.Context, input *devopsguru.UpdateServiceIntegrationInput) (*devopsguru.UpdateServiceIntegrationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateServiceIntegrationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}
