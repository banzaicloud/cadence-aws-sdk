// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package securityhub

import (
	"context"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/securityhub"
	"github.com/aws/aws-sdk-go/service/securityhub/securityhubiface"

	"github.com/banzaicloud/cadence-aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

// SessionFactory returns an aws.Session based on the activity context.
type SessionFactory interface {
	Session(ctx context.Context) (*session.Session, error)
}

type Activities struct {
	client securityhubiface.SecurityHubAPI

	sessionFactory SessionFactory
}

func NewActivities(sess *session.Session, config ...*aws.Config) *Activities {
	client := securityhub.New(sess, config...)
	return &Activities{client: client}
}

func NewActivitiesWithSessionFactory(sessionFactory SessionFactory) *Activities {
	return &Activities{sessionFactory: sessionFactory}
}

func (a *Activities) getClient(ctx context.Context) (securityhubiface.SecurityHubAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}

	return securityhub.New(sess), nil
}

func (a *Activities) AcceptInvitation(ctx context.Context, input *securityhub.AcceptInvitationInput) (*securityhub.AcceptInvitationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AcceptInvitationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) BatchDisableStandards(ctx context.Context, input *securityhub.BatchDisableStandardsInput) (*securityhub.BatchDisableStandardsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.BatchDisableStandardsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) BatchEnableStandards(ctx context.Context, input *securityhub.BatchEnableStandardsInput) (*securityhub.BatchEnableStandardsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.BatchEnableStandardsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) BatchImportFindings(ctx context.Context, input *securityhub.BatchImportFindingsInput) (*securityhub.BatchImportFindingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.BatchImportFindingsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) BatchUpdateFindings(ctx context.Context, input *securityhub.BatchUpdateFindingsInput) (*securityhub.BatchUpdateFindingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.BatchUpdateFindingsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateActionTarget(ctx context.Context, input *securityhub.CreateActionTargetInput) (*securityhub.CreateActionTargetOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateActionTargetWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateInsight(ctx context.Context, input *securityhub.CreateInsightInput) (*securityhub.CreateInsightOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateInsightWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateMembers(ctx context.Context, input *securityhub.CreateMembersInput) (*securityhub.CreateMembersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateMembersWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeclineInvitations(ctx context.Context, input *securityhub.DeclineInvitationsInput) (*securityhub.DeclineInvitationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeclineInvitationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteActionTarget(ctx context.Context, input *securityhub.DeleteActionTargetInput) (*securityhub.DeleteActionTargetOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteActionTargetWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteInsight(ctx context.Context, input *securityhub.DeleteInsightInput) (*securityhub.DeleteInsightOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteInsightWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteInvitations(ctx context.Context, input *securityhub.DeleteInvitationsInput) (*securityhub.DeleteInvitationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteInvitationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteMembers(ctx context.Context, input *securityhub.DeleteMembersInput) (*securityhub.DeleteMembersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteMembersWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeActionTargets(ctx context.Context, input *securityhub.DescribeActionTargetsInput) (*securityhub.DescribeActionTargetsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeActionTargetsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeHub(ctx context.Context, input *securityhub.DescribeHubInput) (*securityhub.DescribeHubOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeHubWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeOrganizationConfiguration(ctx context.Context, input *securityhub.DescribeOrganizationConfigurationInput) (*securityhub.DescribeOrganizationConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeOrganizationConfigurationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeProducts(ctx context.Context, input *securityhub.DescribeProductsInput) (*securityhub.DescribeProductsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeProductsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeStandards(ctx context.Context, input *securityhub.DescribeStandardsInput) (*securityhub.DescribeStandardsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeStandardsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DescribeStandardsControls(ctx context.Context, input *securityhub.DescribeStandardsControlsInput) (*securityhub.DescribeStandardsControlsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DescribeStandardsControlsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisableImportFindingsForProduct(ctx context.Context, input *securityhub.DisableImportFindingsForProductInput) (*securityhub.DisableImportFindingsForProductOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisableImportFindingsForProductWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisableOrganizationAdminAccount(ctx context.Context, input *securityhub.DisableOrganizationAdminAccountInput) (*securityhub.DisableOrganizationAdminAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisableOrganizationAdminAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisableSecurityHub(ctx context.Context, input *securityhub.DisableSecurityHubInput) (*securityhub.DisableSecurityHubOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisableSecurityHubWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateFromMasterAccount(ctx context.Context, input *securityhub.DisassociateFromMasterAccountInput) (*securityhub.DisassociateFromMasterAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateFromMasterAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateMembers(ctx context.Context, input *securityhub.DisassociateMembersInput) (*securityhub.DisassociateMembersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateMembersWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) EnableImportFindingsForProduct(ctx context.Context, input *securityhub.EnableImportFindingsForProductInput) (*securityhub.EnableImportFindingsForProductOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.EnableImportFindingsForProductWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) EnableOrganizationAdminAccount(ctx context.Context, input *securityhub.EnableOrganizationAdminAccountInput) (*securityhub.EnableOrganizationAdminAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.EnableOrganizationAdminAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) EnableSecurityHub(ctx context.Context, input *securityhub.EnableSecurityHubInput) (*securityhub.EnableSecurityHubOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.EnableSecurityHubWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetEnabledStandards(ctx context.Context, input *securityhub.GetEnabledStandardsInput) (*securityhub.GetEnabledStandardsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetEnabledStandardsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetFindings(ctx context.Context, input *securityhub.GetFindingsInput) (*securityhub.GetFindingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetFindingsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetInsightResults(ctx context.Context, input *securityhub.GetInsightResultsInput) (*securityhub.GetInsightResultsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetInsightResultsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetInsights(ctx context.Context, input *securityhub.GetInsightsInput) (*securityhub.GetInsightsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetInsightsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetInvitationsCount(ctx context.Context, input *securityhub.GetInvitationsCountInput) (*securityhub.GetInvitationsCountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetInvitationsCountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetMasterAccount(ctx context.Context, input *securityhub.GetMasterAccountInput) (*securityhub.GetMasterAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetMasterAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetMembers(ctx context.Context, input *securityhub.GetMembersInput) (*securityhub.GetMembersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetMembersWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) InviteMembers(ctx context.Context, input *securityhub.InviteMembersInput) (*securityhub.InviteMembersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.InviteMembersWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListEnabledProductsForImport(ctx context.Context, input *securityhub.ListEnabledProductsForImportInput) (*securityhub.ListEnabledProductsForImportOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListEnabledProductsForImportWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListInvitations(ctx context.Context, input *securityhub.ListInvitationsInput) (*securityhub.ListInvitationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListInvitationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListMembers(ctx context.Context, input *securityhub.ListMembersInput) (*securityhub.ListMembersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListMembersWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListOrganizationAdminAccounts(ctx context.Context, input *securityhub.ListOrganizationAdminAccountsInput) (*securityhub.ListOrganizationAdminAccountsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListOrganizationAdminAccountsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListTagsForResource(ctx context.Context, input *securityhub.ListTagsForResourceInput) (*securityhub.ListTagsForResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListTagsForResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) TagResource(ctx context.Context, input *securityhub.TagResourceInput) (*securityhub.TagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.TagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UntagResource(ctx context.Context, input *securityhub.UntagResourceInput) (*securityhub.UntagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UntagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateActionTarget(ctx context.Context, input *securityhub.UpdateActionTargetInput) (*securityhub.UpdateActionTargetOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateActionTargetWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateFindings(ctx context.Context, input *securityhub.UpdateFindingsInput) (*securityhub.UpdateFindingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateFindingsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateInsight(ctx context.Context, input *securityhub.UpdateInsightInput) (*securityhub.UpdateInsightOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateInsightWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateOrganizationConfiguration(ctx context.Context, input *securityhub.UpdateOrganizationConfigurationInput) (*securityhub.UpdateOrganizationConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateOrganizationConfigurationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateSecurityHubConfiguration(ctx context.Context, input *securityhub.UpdateSecurityHubConfigurationInput) (*securityhub.UpdateSecurityHubConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateSecurityHubConfigurationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateStandardsControl(ctx context.Context, input *securityhub.UpdateStandardsControlInput) (*securityhub.UpdateStandardsControlOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateStandardsControlWithContext(ctx, input)

	return output, internal.EncodeError(err)
}
