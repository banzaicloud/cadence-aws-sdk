// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package sesv2

import (
	"context"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/sesv2"
	"github.com/aws/aws-sdk-go/service/sesv2/sesv2iface"

	"github.com/banzaicloud/cadence-aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

// SessionFactory returns an aws.Session based on the activity context.
type SessionFactory interface {
	Session(ctx context.Context) (*session.Session, error)
}

type Activities struct {
	client sesv2iface.SESV2API

	sessionFactory SessionFactory
}

func NewActivities(sess *session.Session, config ...*aws.Config) *Activities {
	client := sesv2.New(sess, config...)
	return &Activities{client: client}
}

func NewActivitiesWithSessionFactory(sessionFactory SessionFactory) *Activities {
	return &Activities{sessionFactory: sessionFactory}
}

func (a *Activities) getClient(ctx context.Context) (sesv2iface.SESV2API, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}

	return sesv2.New(sess), nil
}

func (a *Activities) CreateConfigurationSet(ctx context.Context, input *sesv2.CreateConfigurationSetInput) (*sesv2.CreateConfigurationSetOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateConfigurationSetWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateConfigurationSetEventDestination(ctx context.Context, input *sesv2.CreateConfigurationSetEventDestinationInput) (*sesv2.CreateConfigurationSetEventDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateConfigurationSetEventDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateContact(ctx context.Context, input *sesv2.CreateContactInput) (*sesv2.CreateContactOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateContactWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateContactList(ctx context.Context, input *sesv2.CreateContactListInput) (*sesv2.CreateContactListOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateContactListWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateCustomVerificationEmailTemplate(ctx context.Context, input *sesv2.CreateCustomVerificationEmailTemplateInput) (*sesv2.CreateCustomVerificationEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateCustomVerificationEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateDedicatedIpPool(ctx context.Context, input *sesv2.CreateDedicatedIpPoolInput) (*sesv2.CreateDedicatedIpPoolOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateDedicatedIpPoolWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateDeliverabilityTestReport(ctx context.Context, input *sesv2.CreateDeliverabilityTestReportInput) (*sesv2.CreateDeliverabilityTestReportOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateDeliverabilityTestReportWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateEmailIdentity(ctx context.Context, input *sesv2.CreateEmailIdentityInput) (*sesv2.CreateEmailIdentityOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateEmailIdentityWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateEmailIdentityPolicy(ctx context.Context, input *sesv2.CreateEmailIdentityPolicyInput) (*sesv2.CreateEmailIdentityPolicyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateEmailIdentityPolicyWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateEmailTemplate(ctx context.Context, input *sesv2.CreateEmailTemplateInput) (*sesv2.CreateEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateImportJob(ctx context.Context, input *sesv2.CreateImportJobInput) (*sesv2.CreateImportJobOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateImportJobWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteConfigurationSet(ctx context.Context, input *sesv2.DeleteConfigurationSetInput) (*sesv2.DeleteConfigurationSetOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteConfigurationSetWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteConfigurationSetEventDestination(ctx context.Context, input *sesv2.DeleteConfigurationSetEventDestinationInput) (*sesv2.DeleteConfigurationSetEventDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteConfigurationSetEventDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteContact(ctx context.Context, input *sesv2.DeleteContactInput) (*sesv2.DeleteContactOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteContactWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteContactList(ctx context.Context, input *sesv2.DeleteContactListInput) (*sesv2.DeleteContactListOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteContactListWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteCustomVerificationEmailTemplate(ctx context.Context, input *sesv2.DeleteCustomVerificationEmailTemplateInput) (*sesv2.DeleteCustomVerificationEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteCustomVerificationEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteDedicatedIpPool(ctx context.Context, input *sesv2.DeleteDedicatedIpPoolInput) (*sesv2.DeleteDedicatedIpPoolOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteDedicatedIpPoolWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteEmailIdentity(ctx context.Context, input *sesv2.DeleteEmailIdentityInput) (*sesv2.DeleteEmailIdentityOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteEmailIdentityWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteEmailIdentityPolicy(ctx context.Context, input *sesv2.DeleteEmailIdentityPolicyInput) (*sesv2.DeleteEmailIdentityPolicyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteEmailIdentityPolicyWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteEmailTemplate(ctx context.Context, input *sesv2.DeleteEmailTemplateInput) (*sesv2.DeleteEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteSuppressedDestination(ctx context.Context, input *sesv2.DeleteSuppressedDestinationInput) (*sesv2.DeleteSuppressedDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteSuppressedDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetAccount(ctx context.Context, input *sesv2.GetAccountInput) (*sesv2.GetAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetBlacklistReports(ctx context.Context, input *sesv2.GetBlacklistReportsInput) (*sesv2.GetBlacklistReportsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetBlacklistReportsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetConfigurationSet(ctx context.Context, input *sesv2.GetConfigurationSetInput) (*sesv2.GetConfigurationSetOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetConfigurationSetWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetConfigurationSetEventDestinations(ctx context.Context, input *sesv2.GetConfigurationSetEventDestinationsInput) (*sesv2.GetConfigurationSetEventDestinationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetConfigurationSetEventDestinationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetContact(ctx context.Context, input *sesv2.GetContactInput) (*sesv2.GetContactOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetContactWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetContactList(ctx context.Context, input *sesv2.GetContactListInput) (*sesv2.GetContactListOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetContactListWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetCustomVerificationEmailTemplate(ctx context.Context, input *sesv2.GetCustomVerificationEmailTemplateInput) (*sesv2.GetCustomVerificationEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetCustomVerificationEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDedicatedIp(ctx context.Context, input *sesv2.GetDedicatedIpInput) (*sesv2.GetDedicatedIpOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDedicatedIpWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDedicatedIps(ctx context.Context, input *sesv2.GetDedicatedIpsInput) (*sesv2.GetDedicatedIpsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDedicatedIpsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDeliverabilityDashboardOptions(ctx context.Context, input *sesv2.GetDeliverabilityDashboardOptionsInput) (*sesv2.GetDeliverabilityDashboardOptionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDeliverabilityDashboardOptionsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDeliverabilityTestReport(ctx context.Context, input *sesv2.GetDeliverabilityTestReportInput) (*sesv2.GetDeliverabilityTestReportOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDeliverabilityTestReportWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDomainDeliverabilityCampaign(ctx context.Context, input *sesv2.GetDomainDeliverabilityCampaignInput) (*sesv2.GetDomainDeliverabilityCampaignOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDomainDeliverabilityCampaignWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDomainStatisticsReport(ctx context.Context, input *sesv2.GetDomainStatisticsReportInput) (*sesv2.GetDomainStatisticsReportOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDomainStatisticsReportWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetEmailIdentity(ctx context.Context, input *sesv2.GetEmailIdentityInput) (*sesv2.GetEmailIdentityOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetEmailIdentityWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetEmailIdentityPolicies(ctx context.Context, input *sesv2.GetEmailIdentityPoliciesInput) (*sesv2.GetEmailIdentityPoliciesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetEmailIdentityPoliciesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetEmailTemplate(ctx context.Context, input *sesv2.GetEmailTemplateInput) (*sesv2.GetEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetImportJob(ctx context.Context, input *sesv2.GetImportJobInput) (*sesv2.GetImportJobOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetImportJobWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetSuppressedDestination(ctx context.Context, input *sesv2.GetSuppressedDestinationInput) (*sesv2.GetSuppressedDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetSuppressedDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListConfigurationSets(ctx context.Context, input *sesv2.ListConfigurationSetsInput) (*sesv2.ListConfigurationSetsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListConfigurationSetsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListContactLists(ctx context.Context, input *sesv2.ListContactListsInput) (*sesv2.ListContactListsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListContactListsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListContacts(ctx context.Context, input *sesv2.ListContactsInput) (*sesv2.ListContactsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListContactsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListCustomVerificationEmailTemplates(ctx context.Context, input *sesv2.ListCustomVerificationEmailTemplatesInput) (*sesv2.ListCustomVerificationEmailTemplatesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListCustomVerificationEmailTemplatesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListDedicatedIpPools(ctx context.Context, input *sesv2.ListDedicatedIpPoolsInput) (*sesv2.ListDedicatedIpPoolsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListDedicatedIpPoolsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListDeliverabilityTestReports(ctx context.Context, input *sesv2.ListDeliverabilityTestReportsInput) (*sesv2.ListDeliverabilityTestReportsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListDeliverabilityTestReportsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListDomainDeliverabilityCampaigns(ctx context.Context, input *sesv2.ListDomainDeliverabilityCampaignsInput) (*sesv2.ListDomainDeliverabilityCampaignsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListDomainDeliverabilityCampaignsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListEmailIdentities(ctx context.Context, input *sesv2.ListEmailIdentitiesInput) (*sesv2.ListEmailIdentitiesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListEmailIdentitiesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListEmailTemplates(ctx context.Context, input *sesv2.ListEmailTemplatesInput) (*sesv2.ListEmailTemplatesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListEmailTemplatesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListImportJobs(ctx context.Context, input *sesv2.ListImportJobsInput) (*sesv2.ListImportJobsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListImportJobsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListSuppressedDestinations(ctx context.Context, input *sesv2.ListSuppressedDestinationsInput) (*sesv2.ListSuppressedDestinationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListSuppressedDestinationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListTagsForResource(ctx context.Context, input *sesv2.ListTagsForResourceInput) (*sesv2.ListTagsForResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListTagsForResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutAccountDedicatedIpWarmupAttributes(ctx context.Context, input *sesv2.PutAccountDedicatedIpWarmupAttributesInput) (*sesv2.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutAccountDedicatedIpWarmupAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutAccountDetails(ctx context.Context, input *sesv2.PutAccountDetailsInput) (*sesv2.PutAccountDetailsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutAccountDetailsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutAccountSendingAttributes(ctx context.Context, input *sesv2.PutAccountSendingAttributesInput) (*sesv2.PutAccountSendingAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutAccountSendingAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutAccountSuppressionAttributes(ctx context.Context, input *sesv2.PutAccountSuppressionAttributesInput) (*sesv2.PutAccountSuppressionAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutAccountSuppressionAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutConfigurationSetDeliveryOptions(ctx context.Context, input *sesv2.PutConfigurationSetDeliveryOptionsInput) (*sesv2.PutConfigurationSetDeliveryOptionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutConfigurationSetDeliveryOptionsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutConfigurationSetReputationOptions(ctx context.Context, input *sesv2.PutConfigurationSetReputationOptionsInput) (*sesv2.PutConfigurationSetReputationOptionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutConfigurationSetReputationOptionsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutConfigurationSetSendingOptions(ctx context.Context, input *sesv2.PutConfigurationSetSendingOptionsInput) (*sesv2.PutConfigurationSetSendingOptionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutConfigurationSetSendingOptionsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutConfigurationSetSuppressionOptions(ctx context.Context, input *sesv2.PutConfigurationSetSuppressionOptionsInput) (*sesv2.PutConfigurationSetSuppressionOptionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutConfigurationSetSuppressionOptionsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutConfigurationSetTrackingOptions(ctx context.Context, input *sesv2.PutConfigurationSetTrackingOptionsInput) (*sesv2.PutConfigurationSetTrackingOptionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutConfigurationSetTrackingOptionsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutDedicatedIpInPool(ctx context.Context, input *sesv2.PutDedicatedIpInPoolInput) (*sesv2.PutDedicatedIpInPoolOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutDedicatedIpInPoolWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutDedicatedIpWarmupAttributes(ctx context.Context, input *sesv2.PutDedicatedIpWarmupAttributesInput) (*sesv2.PutDedicatedIpWarmupAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutDedicatedIpWarmupAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutDeliverabilityDashboardOption(ctx context.Context, input *sesv2.PutDeliverabilityDashboardOptionInput) (*sesv2.PutDeliverabilityDashboardOptionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutDeliverabilityDashboardOptionWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutEmailIdentityConfigurationSetAttributes(ctx context.Context, input *sesv2.PutEmailIdentityConfigurationSetAttributesInput) (*sesv2.PutEmailIdentityConfigurationSetAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutEmailIdentityConfigurationSetAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutEmailIdentityDkimAttributes(ctx context.Context, input *sesv2.PutEmailIdentityDkimAttributesInput) (*sesv2.PutEmailIdentityDkimAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutEmailIdentityDkimAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutEmailIdentityDkimSigningAttributes(ctx context.Context, input *sesv2.PutEmailIdentityDkimSigningAttributesInput) (*sesv2.PutEmailIdentityDkimSigningAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutEmailIdentityDkimSigningAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutEmailIdentityFeedbackAttributes(ctx context.Context, input *sesv2.PutEmailIdentityFeedbackAttributesInput) (*sesv2.PutEmailIdentityFeedbackAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutEmailIdentityFeedbackAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutEmailIdentityMailFromAttributes(ctx context.Context, input *sesv2.PutEmailIdentityMailFromAttributesInput) (*sesv2.PutEmailIdentityMailFromAttributesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutEmailIdentityMailFromAttributesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) PutSuppressedDestination(ctx context.Context, input *sesv2.PutSuppressedDestinationInput) (*sesv2.PutSuppressedDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.PutSuppressedDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) SendBulkEmail(ctx context.Context, input *sesv2.SendBulkEmailInput) (*sesv2.SendBulkEmailOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.SendBulkEmailWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) SendCustomVerificationEmail(ctx context.Context, input *sesv2.SendCustomVerificationEmailInput) (*sesv2.SendCustomVerificationEmailOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.SendCustomVerificationEmailWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) SendEmail(ctx context.Context, input *sesv2.SendEmailInput) (*sesv2.SendEmailOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.SendEmailWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) TagResource(ctx context.Context, input *sesv2.TagResourceInput) (*sesv2.TagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.TagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) TestRenderEmailTemplate(ctx context.Context, input *sesv2.TestRenderEmailTemplateInput) (*sesv2.TestRenderEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.TestRenderEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UntagResource(ctx context.Context, input *sesv2.UntagResourceInput) (*sesv2.UntagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UntagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateConfigurationSetEventDestination(ctx context.Context, input *sesv2.UpdateConfigurationSetEventDestinationInput) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateConfigurationSetEventDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateContact(ctx context.Context, input *sesv2.UpdateContactInput) (*sesv2.UpdateContactOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateContactWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateContactList(ctx context.Context, input *sesv2.UpdateContactListInput) (*sesv2.UpdateContactListOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateContactListWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateCustomVerificationEmailTemplate(ctx context.Context, input *sesv2.UpdateCustomVerificationEmailTemplateInput) (*sesv2.UpdateCustomVerificationEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateCustomVerificationEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateEmailIdentityPolicy(ctx context.Context, input *sesv2.UpdateEmailIdentityPolicyInput) (*sesv2.UpdateEmailIdentityPolicyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateEmailIdentityPolicyWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateEmailTemplate(ctx context.Context, input *sesv2.UpdateEmailTemplateInput) (*sesv2.UpdateEmailTemplateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateEmailTemplateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}
