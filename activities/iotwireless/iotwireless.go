// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package iotwireless

import (
	"context"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/iotwireless"
	"github.com/aws/aws-sdk-go/service/iotwireless/iotwirelessiface"

	"github.com/banzaicloud/cadence-aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

// SessionFactory returns an aws.Session based on the activity context.
type SessionFactory interface {
	Session(ctx context.Context) (*session.Session, error)
}

type Activities struct {
	client iotwirelessiface.IoTWirelessAPI

	sessionFactory SessionFactory
}

func NewActivities(sess *session.Session, config ...*aws.Config) *Activities {
	client := iotwireless.New(sess, config...)
	return &Activities{client: client}
}

func NewActivitiesWithSessionFactory(sessionFactory SessionFactory) *Activities {
	return &Activities{sessionFactory: sessionFactory}
}

func (a *Activities) getClient(ctx context.Context) (iotwirelessiface.IoTWirelessAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}

	return iotwireless.New(sess), nil
}

func (a *Activities) AssociateAwsAccountWithPartnerAccount(ctx context.Context, input *iotwireless.AssociateAwsAccountWithPartnerAccountInput) (*iotwireless.AssociateAwsAccountWithPartnerAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AssociateAwsAccountWithPartnerAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) AssociateWirelessDeviceWithThing(ctx context.Context, input *iotwireless.AssociateWirelessDeviceWithThingInput) (*iotwireless.AssociateWirelessDeviceWithThingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AssociateWirelessDeviceWithThingWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) AssociateWirelessGatewayWithCertificate(ctx context.Context, input *iotwireless.AssociateWirelessGatewayWithCertificateInput) (*iotwireless.AssociateWirelessGatewayWithCertificateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AssociateWirelessGatewayWithCertificateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) AssociateWirelessGatewayWithThing(ctx context.Context, input *iotwireless.AssociateWirelessGatewayWithThingInput) (*iotwireless.AssociateWirelessGatewayWithThingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AssociateWirelessGatewayWithThingWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateDestination(ctx context.Context, input *iotwireless.CreateDestinationInput) (*iotwireless.CreateDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateDeviceProfile(ctx context.Context, input *iotwireless.CreateDeviceProfileInput) (*iotwireless.CreateDeviceProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateDeviceProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateServiceProfile(ctx context.Context, input *iotwireless.CreateServiceProfileInput) (*iotwireless.CreateServiceProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateServiceProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateWirelessDevice(ctx context.Context, input *iotwireless.CreateWirelessDeviceInput) (*iotwireless.CreateWirelessDeviceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateWirelessDeviceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateWirelessGateway(ctx context.Context, input *iotwireless.CreateWirelessGatewayInput) (*iotwireless.CreateWirelessGatewayOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateWirelessGatewayWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateWirelessGatewayTask(ctx context.Context, input *iotwireless.CreateWirelessGatewayTaskInput) (*iotwireless.CreateWirelessGatewayTaskOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateWirelessGatewayTaskWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateWirelessGatewayTaskDefinition(ctx context.Context, input *iotwireless.CreateWirelessGatewayTaskDefinitionInput) (*iotwireless.CreateWirelessGatewayTaskDefinitionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.CreateWirelessGatewayTaskDefinitionWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteDestination(ctx context.Context, input *iotwireless.DeleteDestinationInput) (*iotwireless.DeleteDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteDeviceProfile(ctx context.Context, input *iotwireless.DeleteDeviceProfileInput) (*iotwireless.DeleteDeviceProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteDeviceProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteServiceProfile(ctx context.Context, input *iotwireless.DeleteServiceProfileInput) (*iotwireless.DeleteServiceProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteServiceProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteWirelessDevice(ctx context.Context, input *iotwireless.DeleteWirelessDeviceInput) (*iotwireless.DeleteWirelessDeviceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteWirelessDeviceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteWirelessGateway(ctx context.Context, input *iotwireless.DeleteWirelessGatewayInput) (*iotwireless.DeleteWirelessGatewayOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteWirelessGatewayWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteWirelessGatewayTask(ctx context.Context, input *iotwireless.DeleteWirelessGatewayTaskInput) (*iotwireless.DeleteWirelessGatewayTaskOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteWirelessGatewayTaskWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteWirelessGatewayTaskDefinition(ctx context.Context, input *iotwireless.DeleteWirelessGatewayTaskDefinitionInput) (*iotwireless.DeleteWirelessGatewayTaskDefinitionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteWirelessGatewayTaskDefinitionWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateAwsAccountFromPartnerAccount(ctx context.Context, input *iotwireless.DisassociateAwsAccountFromPartnerAccountInput) (*iotwireless.DisassociateAwsAccountFromPartnerAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateAwsAccountFromPartnerAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateWirelessDeviceFromThing(ctx context.Context, input *iotwireless.DisassociateWirelessDeviceFromThingInput) (*iotwireless.DisassociateWirelessDeviceFromThingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateWirelessDeviceFromThingWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateWirelessGatewayFromCertificate(ctx context.Context, input *iotwireless.DisassociateWirelessGatewayFromCertificateInput) (*iotwireless.DisassociateWirelessGatewayFromCertificateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateWirelessGatewayFromCertificateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateWirelessGatewayFromThing(ctx context.Context, input *iotwireless.DisassociateWirelessGatewayFromThingInput) (*iotwireless.DisassociateWirelessGatewayFromThingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateWirelessGatewayFromThingWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDestination(ctx context.Context, input *iotwireless.GetDestinationInput) (*iotwireless.GetDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetDeviceProfile(ctx context.Context, input *iotwireless.GetDeviceProfileInput) (*iotwireless.GetDeviceProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetDeviceProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetPartnerAccount(ctx context.Context, input *iotwireless.GetPartnerAccountInput) (*iotwireless.GetPartnerAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetPartnerAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetServiceEndpoint(ctx context.Context, input *iotwireless.GetServiceEndpointInput) (*iotwireless.GetServiceEndpointOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetServiceEndpointWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetServiceProfile(ctx context.Context, input *iotwireless.GetServiceProfileInput) (*iotwireless.GetServiceProfileOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetServiceProfileWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessDevice(ctx context.Context, input *iotwireless.GetWirelessDeviceInput) (*iotwireless.GetWirelessDeviceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessDeviceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessDeviceStatistics(ctx context.Context, input *iotwireless.GetWirelessDeviceStatisticsInput) (*iotwireless.GetWirelessDeviceStatisticsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessDeviceStatisticsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessGateway(ctx context.Context, input *iotwireless.GetWirelessGatewayInput) (*iotwireless.GetWirelessGatewayOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessGatewayWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessGatewayCertificate(ctx context.Context, input *iotwireless.GetWirelessGatewayCertificateInput) (*iotwireless.GetWirelessGatewayCertificateOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessGatewayCertificateWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessGatewayFirmwareInformation(ctx context.Context, input *iotwireless.GetWirelessGatewayFirmwareInformationInput) (*iotwireless.GetWirelessGatewayFirmwareInformationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessGatewayFirmwareInformationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessGatewayStatistics(ctx context.Context, input *iotwireless.GetWirelessGatewayStatisticsInput) (*iotwireless.GetWirelessGatewayStatisticsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessGatewayStatisticsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessGatewayTask(ctx context.Context, input *iotwireless.GetWirelessGatewayTaskInput) (*iotwireless.GetWirelessGatewayTaskOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessGatewayTaskWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetWirelessGatewayTaskDefinition(ctx context.Context, input *iotwireless.GetWirelessGatewayTaskDefinitionInput) (*iotwireless.GetWirelessGatewayTaskDefinitionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetWirelessGatewayTaskDefinitionWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListDestinations(ctx context.Context, input *iotwireless.ListDestinationsInput) (*iotwireless.ListDestinationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListDestinationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListDeviceProfiles(ctx context.Context, input *iotwireless.ListDeviceProfilesInput) (*iotwireless.ListDeviceProfilesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListDeviceProfilesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListPartnerAccounts(ctx context.Context, input *iotwireless.ListPartnerAccountsInput) (*iotwireless.ListPartnerAccountsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListPartnerAccountsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListServiceProfiles(ctx context.Context, input *iotwireless.ListServiceProfilesInput) (*iotwireless.ListServiceProfilesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListServiceProfilesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListTagsForResource(ctx context.Context, input *iotwireless.ListTagsForResourceInput) (*iotwireless.ListTagsForResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListTagsForResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListWirelessDevices(ctx context.Context, input *iotwireless.ListWirelessDevicesInput) (*iotwireless.ListWirelessDevicesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListWirelessDevicesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListWirelessGatewayTaskDefinitions(ctx context.Context, input *iotwireless.ListWirelessGatewayTaskDefinitionsInput) (*iotwireless.ListWirelessGatewayTaskDefinitionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListWirelessGatewayTaskDefinitionsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListWirelessGateways(ctx context.Context, input *iotwireless.ListWirelessGatewaysInput) (*iotwireless.ListWirelessGatewaysOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListWirelessGatewaysWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) SendDataToWirelessDevice(ctx context.Context, input *iotwireless.SendDataToWirelessDeviceInput) (*iotwireless.SendDataToWirelessDeviceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.SendDataToWirelessDeviceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) TagResource(ctx context.Context, input *iotwireless.TagResourceInput) (*iotwireless.TagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.TagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) TestWirelessDevice(ctx context.Context, input *iotwireless.TestWirelessDeviceInput) (*iotwireless.TestWirelessDeviceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.TestWirelessDeviceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UntagResource(ctx context.Context, input *iotwireless.UntagResourceInput) (*iotwireless.UntagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UntagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateDestination(ctx context.Context, input *iotwireless.UpdateDestinationInput) (*iotwireless.UpdateDestinationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateDestinationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdatePartnerAccount(ctx context.Context, input *iotwireless.UpdatePartnerAccountInput) (*iotwireless.UpdatePartnerAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdatePartnerAccountWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateWirelessDevice(ctx context.Context, input *iotwireless.UpdateWirelessDeviceInput) (*iotwireless.UpdateWirelessDeviceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateWirelessDeviceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateWirelessGateway(ctx context.Context, input *iotwireless.UpdateWirelessGatewayInput) (*iotwireless.UpdateWirelessGatewayOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateWirelessGatewayWithContext(ctx, input)

	return output, internal.EncodeError(err)
}
