// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package appregistry

import (
	"context"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/appregistry"
	"github.com/aws/aws-sdk-go/service/appregistry/appregistryiface"

	"github.com/banzaicloud/cadence-aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

// SessionFactory returns an aws.Session based on the activity context.
type SessionFactory interface {
	Session(ctx context.Context) (*session.Session, error)
}

type Activities struct {
	client appregistryiface.AppRegistryAPI

	sessionFactory SessionFactory
}

func NewActivities(sess *session.Session, config ...*aws.Config) *Activities {
	client := appregistry.New(sess, config...)
	return &Activities{client: client}
}

func NewActivitiesWithSessionFactory(sessionFactory SessionFactory) *Activities {
	return &Activities{sessionFactory: sessionFactory}
}

func (a *Activities) getClient(ctx context.Context) (appregistryiface.AppRegistryAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}

	return appregistry.New(sess), nil
}

func (a *Activities) AssociateAttributeGroup(ctx context.Context, input *appregistry.AssociateAttributeGroupInput) (*appregistry.AssociateAttributeGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AssociateAttributeGroupWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) AssociateResource(ctx context.Context, input *appregistry.AssociateResourceInput) (*appregistry.AssociateResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.AssociateResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateApplication(ctx context.Context, input *appregistry.CreateApplicationInput) (*appregistry.CreateApplicationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	internal.SetClientToken(ctx, &input.ClientToken)
	output, err := client.CreateApplicationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) CreateAttributeGroup(ctx context.Context, input *appregistry.CreateAttributeGroupInput) (*appregistry.CreateAttributeGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	internal.SetClientToken(ctx, &input.ClientToken)
	output, err := client.CreateAttributeGroupWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteApplication(ctx context.Context, input *appregistry.DeleteApplicationInput) (*appregistry.DeleteApplicationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteApplicationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DeleteAttributeGroup(ctx context.Context, input *appregistry.DeleteAttributeGroupInput) (*appregistry.DeleteAttributeGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DeleteAttributeGroupWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateAttributeGroup(ctx context.Context, input *appregistry.DisassociateAttributeGroupInput) (*appregistry.DisassociateAttributeGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateAttributeGroupWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) DisassociateResource(ctx context.Context, input *appregistry.DisassociateResourceInput) (*appregistry.DisassociateResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.DisassociateResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetApplication(ctx context.Context, input *appregistry.GetApplicationInput) (*appregistry.GetApplicationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetApplicationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) GetAttributeGroup(ctx context.Context, input *appregistry.GetAttributeGroupInput) (*appregistry.GetAttributeGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.GetAttributeGroupWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListApplications(ctx context.Context, input *appregistry.ListApplicationsInput) (*appregistry.ListApplicationsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListApplicationsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListAssociatedAttributeGroups(ctx context.Context, input *appregistry.ListAssociatedAttributeGroupsInput) (*appregistry.ListAssociatedAttributeGroupsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListAssociatedAttributeGroupsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListAssociatedResources(ctx context.Context, input *appregistry.ListAssociatedResourcesInput) (*appregistry.ListAssociatedResourcesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListAssociatedResourcesWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListAttributeGroups(ctx context.Context, input *appregistry.ListAttributeGroupsInput) (*appregistry.ListAttributeGroupsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListAttributeGroupsWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) ListTagsForResource(ctx context.Context, input *appregistry.ListTagsForResourceInput) (*appregistry.ListTagsForResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.ListTagsForResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) SyncResource(ctx context.Context, input *appregistry.SyncResourceInput) (*appregistry.SyncResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.SyncResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) TagResource(ctx context.Context, input *appregistry.TagResourceInput) (*appregistry.TagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.TagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UntagResource(ctx context.Context, input *appregistry.UntagResourceInput) (*appregistry.UntagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UntagResourceWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateApplication(ctx context.Context, input *appregistry.UpdateApplicationInput) (*appregistry.UpdateApplicationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateApplicationWithContext(ctx, input)

	return output, internal.EncodeError(err)
}

func (a *Activities) UpdateAttributeGroup(ctx context.Context, input *appregistry.UpdateAttributeGroupInput) (*appregistry.UpdateAttributeGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, internal.EncodeError(err)
	}
	output, err := client.UpdateAttributeGroupWithContext(ctx, input)

	return output, internal.EncodeError(err)
}
