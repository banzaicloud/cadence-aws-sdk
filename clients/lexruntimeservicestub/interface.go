// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package lexruntimeservicestub

import (
	"github.com/aws/aws-sdk-go/service/lexruntimeservice"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	DeleteSession(ctx workflow.Context, input *lexruntimeservice.DeleteSessionInput) (*lexruntimeservice.DeleteSessionOutput, error)
	DeleteSessionAsync(ctx workflow.Context, input *lexruntimeservice.DeleteSessionInput) *LexRuntimeServiceDeleteSessionFuture

	GetSession(ctx workflow.Context, input *lexruntimeservice.GetSessionInput) (*lexruntimeservice.GetSessionOutput, error)
	GetSessionAsync(ctx workflow.Context, input *lexruntimeservice.GetSessionInput) *LexRuntimeServiceGetSessionFuture

	PostContent(ctx workflow.Context, input *lexruntimeservice.PostContentInput) (*lexruntimeservice.PostContentOutput, error)
	PostContentAsync(ctx workflow.Context, input *lexruntimeservice.PostContentInput) *LexRuntimeServicePostContentFuture

	PostText(ctx workflow.Context, input *lexruntimeservice.PostTextInput) (*lexruntimeservice.PostTextOutput, error)
	PostTextAsync(ctx workflow.Context, input *lexruntimeservice.PostTextInput) *LexRuntimeServicePostTextFuture

	PutSession(ctx workflow.Context, input *lexruntimeservice.PutSessionInput) (*lexruntimeservice.PutSessionOutput, error)
	PutSessionAsync(ctx workflow.Context, input *lexruntimeservice.PutSessionInput) *LexRuntimeServicePutSessionFuture
}

func NewClient() Client {
	return &stub{}
}
