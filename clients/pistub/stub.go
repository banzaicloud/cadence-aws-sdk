// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package pistub

import (
	"github.com/aws/aws-sdk-go/service/pi"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type DescribeDimensionKeysFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeDimensionKeysFuture) Get(ctx workflow.Context) (*pi.DescribeDimensionKeysOutput, error) {
	var output pi.DescribeDimensionKeysOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetResourceMetricsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetResourceMetricsFuture) Get(ctx workflow.Context) (*pi.GetResourceMetricsOutput, error) {
	var output pi.GetResourceMetricsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeDimensionKeys(ctx workflow.Context, input *pi.DescribeDimensionKeysInput) (*pi.DescribeDimensionKeysOutput, error) {
	var output pi.DescribeDimensionKeysOutput
	err := workflow.ExecuteActivity(ctx, "aws-pi-DescribeDimensionKeys", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeDimensionKeysAsync(ctx workflow.Context, input *pi.DescribeDimensionKeysInput) *DescribeDimensionKeysFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pi-DescribeDimensionKeys", input)
	return &DescribeDimensionKeysFuture{Future: future}
}

func (a *stub) GetResourceMetrics(ctx workflow.Context, input *pi.GetResourceMetricsInput) (*pi.GetResourceMetricsOutput, error) {
	var output pi.GetResourceMetricsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pi-GetResourceMetrics", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetResourceMetricsAsync(ctx workflow.Context, input *pi.GetResourceMetricsInput) *GetResourceMetricsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pi-GetResourceMetrics", input)
	return &GetResourceMetricsFuture{Future: future}
}
