// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package cloudhsmv2stub

import (
	"github.com/aws/aws-sdk-go/service/cloudhsmv2"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	CopyBackupToRegion(ctx workflow.Context, input *cloudhsmv2.CopyBackupToRegionInput) (*cloudhsmv2.CopyBackupToRegionOutput, error)
	CopyBackupToRegionAsync(ctx workflow.Context, input *cloudhsmv2.CopyBackupToRegionInput) *CopyBackupToRegionFuture

	CreateCluster(ctx workflow.Context, input *cloudhsmv2.CreateClusterInput) (*cloudhsmv2.CreateClusterOutput, error)
	CreateClusterAsync(ctx workflow.Context, input *cloudhsmv2.CreateClusterInput) *CreateClusterFuture

	CreateHsm(ctx workflow.Context, input *cloudhsmv2.CreateHsmInput) (*cloudhsmv2.CreateHsmOutput, error)
	CreateHsmAsync(ctx workflow.Context, input *cloudhsmv2.CreateHsmInput) *CreateHsmFuture

	DeleteBackup(ctx workflow.Context, input *cloudhsmv2.DeleteBackupInput) (*cloudhsmv2.DeleteBackupOutput, error)
	DeleteBackupAsync(ctx workflow.Context, input *cloudhsmv2.DeleteBackupInput) *DeleteBackupFuture

	DeleteCluster(ctx workflow.Context, input *cloudhsmv2.DeleteClusterInput) (*cloudhsmv2.DeleteClusterOutput, error)
	DeleteClusterAsync(ctx workflow.Context, input *cloudhsmv2.DeleteClusterInput) *DeleteClusterFuture

	DeleteHsm(ctx workflow.Context, input *cloudhsmv2.DeleteHsmInput) (*cloudhsmv2.DeleteHsmOutput, error)
	DeleteHsmAsync(ctx workflow.Context, input *cloudhsmv2.DeleteHsmInput) *DeleteHsmFuture

	DescribeBackups(ctx workflow.Context, input *cloudhsmv2.DescribeBackupsInput) (*cloudhsmv2.DescribeBackupsOutput, error)
	DescribeBackupsAsync(ctx workflow.Context, input *cloudhsmv2.DescribeBackupsInput) *DescribeBackupsFuture

	DescribeClusters(ctx workflow.Context, input *cloudhsmv2.DescribeClustersInput) (*cloudhsmv2.DescribeClustersOutput, error)
	DescribeClustersAsync(ctx workflow.Context, input *cloudhsmv2.DescribeClustersInput) *DescribeClustersFuture

	InitializeCluster(ctx workflow.Context, input *cloudhsmv2.InitializeClusterInput) (*cloudhsmv2.InitializeClusterOutput, error)
	InitializeClusterAsync(ctx workflow.Context, input *cloudhsmv2.InitializeClusterInput) *InitializeClusterFuture

	ListTags(ctx workflow.Context, input *cloudhsmv2.ListTagsInput) (*cloudhsmv2.ListTagsOutput, error)
	ListTagsAsync(ctx workflow.Context, input *cloudhsmv2.ListTagsInput) *ListTagsFuture

	ModifyBackupAttributes(ctx workflow.Context, input *cloudhsmv2.ModifyBackupAttributesInput) (*cloudhsmv2.ModifyBackupAttributesOutput, error)
	ModifyBackupAttributesAsync(ctx workflow.Context, input *cloudhsmv2.ModifyBackupAttributesInput) *ModifyBackupAttributesFuture

	ModifyCluster(ctx workflow.Context, input *cloudhsmv2.ModifyClusterInput) (*cloudhsmv2.ModifyClusterOutput, error)
	ModifyClusterAsync(ctx workflow.Context, input *cloudhsmv2.ModifyClusterInput) *ModifyClusterFuture

	RestoreBackup(ctx workflow.Context, input *cloudhsmv2.RestoreBackupInput) (*cloudhsmv2.RestoreBackupOutput, error)
	RestoreBackupAsync(ctx workflow.Context, input *cloudhsmv2.RestoreBackupInput) *RestoreBackupFuture

	TagResource(ctx workflow.Context, input *cloudhsmv2.TagResourceInput) (*cloudhsmv2.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *cloudhsmv2.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *cloudhsmv2.UntagResourceInput) (*cloudhsmv2.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *cloudhsmv2.UntagResourceInput) *UntagResourceFuture
}

func NewClient() Client {
	return &stub{}
}
