// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package kendrastub

import (
	"github.com/aws/aws-sdk-go/service/kendra"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	BatchDeleteDocument(ctx workflow.Context, input *kendra.BatchDeleteDocumentInput) (*kendra.BatchDeleteDocumentOutput, error)
	BatchDeleteDocumentAsync(ctx workflow.Context, input *kendra.BatchDeleteDocumentInput) *BatchDeleteDocumentFuture

	BatchPutDocument(ctx workflow.Context, input *kendra.BatchPutDocumentInput) (*kendra.BatchPutDocumentOutput, error)
	BatchPutDocumentAsync(ctx workflow.Context, input *kendra.BatchPutDocumentInput) *BatchPutDocumentFuture

	CreateDataSource(ctx workflow.Context, input *kendra.CreateDataSourceInput) (*kendra.CreateDataSourceOutput, error)
	CreateDataSourceAsync(ctx workflow.Context, input *kendra.CreateDataSourceInput) *CreateDataSourceFuture

	CreateFaq(ctx workflow.Context, input *kendra.CreateFaqInput) (*kendra.CreateFaqOutput, error)
	CreateFaqAsync(ctx workflow.Context, input *kendra.CreateFaqInput) *CreateFaqFuture

	CreateIndex(ctx workflow.Context, input *kendra.CreateIndexInput) (*kendra.CreateIndexOutput, error)
	CreateIndexAsync(ctx workflow.Context, input *kendra.CreateIndexInput) *CreateIndexFuture

	CreateThesaurus(ctx workflow.Context, input *kendra.CreateThesaurusInput) (*kendra.CreateThesaurusOutput, error)
	CreateThesaurusAsync(ctx workflow.Context, input *kendra.CreateThesaurusInput) *CreateThesaurusFuture

	DeleteDataSource(ctx workflow.Context, input *kendra.DeleteDataSourceInput) (*kendra.DeleteDataSourceOutput, error)
	DeleteDataSourceAsync(ctx workflow.Context, input *kendra.DeleteDataSourceInput) *DeleteDataSourceFuture

	DeleteFaq(ctx workflow.Context, input *kendra.DeleteFaqInput) (*kendra.DeleteFaqOutput, error)
	DeleteFaqAsync(ctx workflow.Context, input *kendra.DeleteFaqInput) *DeleteFaqFuture

	DeleteIndex(ctx workflow.Context, input *kendra.DeleteIndexInput) (*kendra.DeleteIndexOutput, error)
	DeleteIndexAsync(ctx workflow.Context, input *kendra.DeleteIndexInput) *DeleteIndexFuture

	DeleteThesaurus(ctx workflow.Context, input *kendra.DeleteThesaurusInput) (*kendra.DeleteThesaurusOutput, error)
	DeleteThesaurusAsync(ctx workflow.Context, input *kendra.DeleteThesaurusInput) *DeleteThesaurusFuture

	DescribeDataSource(ctx workflow.Context, input *kendra.DescribeDataSourceInput) (*kendra.DescribeDataSourceOutput, error)
	DescribeDataSourceAsync(ctx workflow.Context, input *kendra.DescribeDataSourceInput) *DescribeDataSourceFuture

	DescribeFaq(ctx workflow.Context, input *kendra.DescribeFaqInput) (*kendra.DescribeFaqOutput, error)
	DescribeFaqAsync(ctx workflow.Context, input *kendra.DescribeFaqInput) *DescribeFaqFuture

	DescribeIndex(ctx workflow.Context, input *kendra.DescribeIndexInput) (*kendra.DescribeIndexOutput, error)
	DescribeIndexAsync(ctx workflow.Context, input *kendra.DescribeIndexInput) *DescribeIndexFuture

	DescribeThesaurus(ctx workflow.Context, input *kendra.DescribeThesaurusInput) (*kendra.DescribeThesaurusOutput, error)
	DescribeThesaurusAsync(ctx workflow.Context, input *kendra.DescribeThesaurusInput) *DescribeThesaurusFuture

	ListDataSourceSyncJobs(ctx workflow.Context, input *kendra.ListDataSourceSyncJobsInput) (*kendra.ListDataSourceSyncJobsOutput, error)
	ListDataSourceSyncJobsAsync(ctx workflow.Context, input *kendra.ListDataSourceSyncJobsInput) *ListDataSourceSyncJobsFuture

	ListDataSources(ctx workflow.Context, input *kendra.ListDataSourcesInput) (*kendra.ListDataSourcesOutput, error)
	ListDataSourcesAsync(ctx workflow.Context, input *kendra.ListDataSourcesInput) *ListDataSourcesFuture

	ListFaqs(ctx workflow.Context, input *kendra.ListFaqsInput) (*kendra.ListFaqsOutput, error)
	ListFaqsAsync(ctx workflow.Context, input *kendra.ListFaqsInput) *ListFaqsFuture

	ListIndices(ctx workflow.Context, input *kendra.ListIndicesInput) (*kendra.ListIndicesOutput, error)
	ListIndicesAsync(ctx workflow.Context, input *kendra.ListIndicesInput) *ListIndicesFuture

	ListTagsForResource(ctx workflow.Context, input *kendra.ListTagsForResourceInput) (*kendra.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *kendra.ListTagsForResourceInput) *ListTagsForResourceFuture

	ListThesauri(ctx workflow.Context, input *kendra.ListThesauriInput) (*kendra.ListThesauriOutput, error)
	ListThesauriAsync(ctx workflow.Context, input *kendra.ListThesauriInput) *ListThesauriFuture

	Query(ctx workflow.Context, input *kendra.QueryInput) (*kendra.QueryOutput, error)
	QueryAsync(ctx workflow.Context, input *kendra.QueryInput) *QueryFuture

	StartDataSourceSyncJob(ctx workflow.Context, input *kendra.StartDataSourceSyncJobInput) (*kendra.StartDataSourceSyncJobOutput, error)
	StartDataSourceSyncJobAsync(ctx workflow.Context, input *kendra.StartDataSourceSyncJobInput) *StartDataSourceSyncJobFuture

	StopDataSourceSyncJob(ctx workflow.Context, input *kendra.StopDataSourceSyncJobInput) (*kendra.StopDataSourceSyncJobOutput, error)
	StopDataSourceSyncJobAsync(ctx workflow.Context, input *kendra.StopDataSourceSyncJobInput) *StopDataSourceSyncJobFuture

	SubmitFeedback(ctx workflow.Context, input *kendra.SubmitFeedbackInput) (*kendra.SubmitFeedbackOutput, error)
	SubmitFeedbackAsync(ctx workflow.Context, input *kendra.SubmitFeedbackInput) *SubmitFeedbackFuture

	TagResource(ctx workflow.Context, input *kendra.TagResourceInput) (*kendra.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *kendra.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *kendra.UntagResourceInput) (*kendra.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *kendra.UntagResourceInput) *UntagResourceFuture

	UpdateDataSource(ctx workflow.Context, input *kendra.UpdateDataSourceInput) (*kendra.UpdateDataSourceOutput, error)
	UpdateDataSourceAsync(ctx workflow.Context, input *kendra.UpdateDataSourceInput) *UpdateDataSourceFuture

	UpdateIndex(ctx workflow.Context, input *kendra.UpdateIndexInput) (*kendra.UpdateIndexOutput, error)
	UpdateIndexAsync(ctx workflow.Context, input *kendra.UpdateIndexInput) *UpdateIndexFuture

	UpdateThesaurus(ctx workflow.Context, input *kendra.UpdateThesaurusInput) (*kendra.UpdateThesaurusOutput, error)
	UpdateThesaurusAsync(ctx workflow.Context, input *kendra.UpdateThesaurusInput) *UpdateThesaurusFuture
}

func NewClient() Client {
	return &stub{}
}
