// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package servicequotasstub

import (
	"github.com/aws/aws-sdk-go/service/servicequotas"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type AssociateServiceQuotaTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *AssociateServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.AssociateServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteServiceQuotaIncreaseRequestFromTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteServiceQuotaIncreaseRequestFromTemplateFuture) Get(ctx workflow.Context) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisassociateServiceQuotaTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisassociateServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.DisassociateServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetAWSDefaultServiceQuotaFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetAWSDefaultServiceQuotaFuture) Get(ctx workflow.Context) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	var output servicequotas.GetAWSDefaultServiceQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetAssociationForServiceQuotaTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetAssociationForServiceQuotaTemplateFuture) Get(ctx workflow.Context) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	var output servicequotas.GetAssociationForServiceQuotaTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetRequestedServiceQuotaChangeFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetRequestedServiceQuotaChangeFuture) Get(ctx workflow.Context) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	var output servicequotas.GetRequestedServiceQuotaChangeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetServiceQuotaFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetServiceQuotaFuture) Get(ctx workflow.Context) (*servicequotas.GetServiceQuotaOutput, error) {
	var output servicequotas.GetServiceQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetServiceQuotaIncreaseRequestFromTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetServiceQuotaIncreaseRequestFromTemplateFuture) Get(ctx workflow.Context) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListAWSDefaultServiceQuotasFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListAWSDefaultServiceQuotasFuture) Get(ctx workflow.Context) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	var output servicequotas.ListAWSDefaultServiceQuotasOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListRequestedServiceQuotaChangeHistoryFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListRequestedServiceQuotaChangeHistoryFuture) Get(ctx workflow.Context) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListRequestedServiceQuotaChangeHistoryByQuotaFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListRequestedServiceQuotaChangeHistoryByQuotaFuture) Get(ctx workflow.Context) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListServiceQuotaIncreaseRequestsInTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListServiceQuotaIncreaseRequestsInTemplateFuture) Get(ctx workflow.Context) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	var output servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListServiceQuotasFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListServiceQuotasFuture) Get(ctx workflow.Context) (*servicequotas.ListServiceQuotasOutput, error) {
	var output servicequotas.ListServiceQuotasOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListServicesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListServicesFuture) Get(ctx workflow.Context) (*servicequotas.ListServicesOutput, error) {
	var output servicequotas.ListServicesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTagsForResourceFuture) Get(ctx workflow.Context) (*servicequotas.ListTagsForResourceOutput, error) {
	var output servicequotas.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutServiceQuotaIncreaseRequestIntoTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutServiceQuotaIncreaseRequestIntoTemplateFuture) Get(ctx workflow.Context) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	var output servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type RequestServiceQuotaIncreaseFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *RequestServiceQuotaIncreaseFuture) Get(ctx workflow.Context) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	var output servicequotas.RequestServiceQuotaIncreaseOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type TagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *TagResourceFuture) Get(ctx workflow.Context) (*servicequotas.TagResourceOutput, error) {
	var output servicequotas.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UntagResourceFuture) Get(ctx workflow.Context) (*servicequotas.UntagResourceOutput, error) {
	var output servicequotas.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) AssociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.AssociateServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-AssociateServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) AssociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.AssociateServiceQuotaTemplateInput) *AssociateServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-AssociateServiceQuotaTemplate", input)
	return &AssociateServiceQuotaTemplateFuture{Future: future}
}

func (a *stub) DeleteServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-DeleteServiceQuotaIncreaseRequestFromTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) *DeleteServiceQuotaIncreaseRequestFromTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-DeleteServiceQuotaIncreaseRequestFromTemplate", input)
	return &DeleteServiceQuotaIncreaseRequestFromTemplateFuture{Future: future}
}

func (a *stub) DisassociateServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	var output servicequotas.DisassociateServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-DisassociateServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisassociateServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.DisassociateServiceQuotaTemplateInput) *DisassociateServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-DisassociateServiceQuotaTemplate", input)
	return &DisassociateServiceQuotaTemplateFuture{Future: future}
}

func (a *stub) GetAWSDefaultServiceQuota(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	var output servicequotas.GetAWSDefaultServiceQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetAWSDefaultServiceQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetAWSDefaultServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetAWSDefaultServiceQuotaInput) *GetAWSDefaultServiceQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetAWSDefaultServiceQuota", input)
	return &GetAWSDefaultServiceQuotaFuture{Future: future}
}

func (a *stub) GetAssociationForServiceQuotaTemplate(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	var output servicequotas.GetAssociationForServiceQuotaTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetAssociationForServiceQuotaTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetAssociationForServiceQuotaTemplateAsync(ctx workflow.Context, input *servicequotas.GetAssociationForServiceQuotaTemplateInput) *GetAssociationForServiceQuotaTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetAssociationForServiceQuotaTemplate", input)
	return &GetAssociationForServiceQuotaTemplateFuture{Future: future}
}

func (a *stub) GetRequestedServiceQuotaChange(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	var output servicequotas.GetRequestedServiceQuotaChangeOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetRequestedServiceQuotaChange", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetRequestedServiceQuotaChangeAsync(ctx workflow.Context, input *servicequotas.GetRequestedServiceQuotaChangeInput) *GetRequestedServiceQuotaChangeFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetRequestedServiceQuotaChange", input)
	return &GetRequestedServiceQuotaChangeFuture{Future: future}
}

func (a *stub) GetServiceQuota(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) (*servicequotas.GetServiceQuotaOutput, error) {
	var output servicequotas.GetServiceQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetServiceQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetServiceQuotaAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaInput) *GetServiceQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetServiceQuota", input)
	return &GetServiceQuotaFuture{Future: future}
}

func (a *stub) GetServiceQuotaIncreaseRequestFromTemplate(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	var output servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetServiceQuotaIncreaseRequestFromTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetServiceQuotaIncreaseRequestFromTemplateAsync(ctx workflow.Context, input *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) *GetServiceQuotaIncreaseRequestFromTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-GetServiceQuotaIncreaseRequestFromTemplate", input)
	return &GetServiceQuotaIncreaseRequestFromTemplateFuture{Future: future}
}

func (a *stub) ListAWSDefaultServiceQuotas(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	var output servicequotas.ListAWSDefaultServiceQuotasOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListAWSDefaultServiceQuotas", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListAWSDefaultServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListAWSDefaultServiceQuotasInput) *ListAWSDefaultServiceQuotasFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListAWSDefaultServiceQuotas", input)
	return &ListAWSDefaultServiceQuotasFuture{Future: future}
}

func (a *stub) ListRequestedServiceQuotaChangeHistory(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListRequestedServiceQuotaChangeHistory", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListRequestedServiceQuotaChangeHistoryAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) *ListRequestedServiceQuotaChangeHistoryFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListRequestedServiceQuotaChangeHistory", input)
	return &ListRequestedServiceQuotaChangeHistoryFuture{Future: future}
}

func (a *stub) ListRequestedServiceQuotaChangeHistoryByQuota(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	var output servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListRequestedServiceQuotaChangeHistoryByQuota", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListRequestedServiceQuotaChangeHistoryByQuotaAsync(ctx workflow.Context, input *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) *ListRequestedServiceQuotaChangeHistoryByQuotaFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListRequestedServiceQuotaChangeHistoryByQuota", input)
	return &ListRequestedServiceQuotaChangeHistoryByQuotaFuture{Future: future}
}

func (a *stub) ListServiceQuotaIncreaseRequestsInTemplate(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	var output servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListServiceQuotaIncreaseRequestsInTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListServiceQuotaIncreaseRequestsInTemplateAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) *ListServiceQuotaIncreaseRequestsInTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListServiceQuotaIncreaseRequestsInTemplate", input)
	return &ListServiceQuotaIncreaseRequestsInTemplateFuture{Future: future}
}

func (a *stub) ListServiceQuotas(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) (*servicequotas.ListServiceQuotasOutput, error) {
	var output servicequotas.ListServiceQuotasOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListServiceQuotas", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListServiceQuotasAsync(ctx workflow.Context, input *servicequotas.ListServiceQuotasInput) *ListServiceQuotasFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListServiceQuotas", input)
	return &ListServiceQuotasFuture{Future: future}
}

func (a *stub) ListServices(ctx workflow.Context, input *servicequotas.ListServicesInput) (*servicequotas.ListServicesOutput, error) {
	var output servicequotas.ListServicesOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListServices", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListServicesAsync(ctx workflow.Context, input *servicequotas.ListServicesInput) *ListServicesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListServices", input)
	return &ListServicesFuture{Future: future}
}

func (a *stub) ListTagsForResource(ctx workflow.Context, input *servicequotas.ListTagsForResourceInput) (*servicequotas.ListTagsForResourceOutput, error) {
	var output servicequotas.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTagsForResourceAsync(ctx workflow.Context, input *servicequotas.ListTagsForResourceInput) *ListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-ListTagsForResource", input)
	return &ListTagsForResourceFuture{Future: future}
}

func (a *stub) PutServiceQuotaIncreaseRequestIntoTemplate(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	var output servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-PutServiceQuotaIncreaseRequestIntoTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutServiceQuotaIncreaseRequestIntoTemplateAsync(ctx workflow.Context, input *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) *PutServiceQuotaIncreaseRequestIntoTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-PutServiceQuotaIncreaseRequestIntoTemplate", input)
	return &PutServiceQuotaIncreaseRequestIntoTemplateFuture{Future: future}
}

func (a *stub) RequestServiceQuotaIncrease(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	var output servicequotas.RequestServiceQuotaIncreaseOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-RequestServiceQuotaIncrease", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) RequestServiceQuotaIncreaseAsync(ctx workflow.Context, input *servicequotas.RequestServiceQuotaIncreaseInput) *RequestServiceQuotaIncreaseFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-RequestServiceQuotaIncrease", input)
	return &RequestServiceQuotaIncreaseFuture{Future: future}
}

func (a *stub) TagResource(ctx workflow.Context, input *servicequotas.TagResourceInput) (*servicequotas.TagResourceOutput, error) {
	var output servicequotas.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) TagResourceAsync(ctx workflow.Context, input *servicequotas.TagResourceInput) *TagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-TagResource", input)
	return &TagResourceFuture{Future: future}
}

func (a *stub) UntagResource(ctx workflow.Context, input *servicequotas.UntagResourceInput) (*servicequotas.UntagResourceOutput, error) {
	var output servicequotas.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-servicequotas-UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UntagResourceAsync(ctx workflow.Context, input *servicequotas.UntagResourceInput) *UntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-servicequotas-UntagResource", input)
	return &UntagResourceFuture{Future: future}
}
