// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package lexmodelsv2stub

import (
	"github.com/aws/aws-sdk-go/service/lexmodelsv2"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	BuildBotLocale(ctx workflow.Context, input *lexmodelsv2.BuildBotLocaleInput) (*lexmodelsv2.BuildBotLocaleOutput, error)
	BuildBotLocaleAsync(ctx workflow.Context, input *lexmodelsv2.BuildBotLocaleInput) *BuildBotLocaleFuture

	CreateBot(ctx workflow.Context, input *lexmodelsv2.CreateBotInput) (*lexmodelsv2.CreateBotOutput, error)
	CreateBotAsync(ctx workflow.Context, input *lexmodelsv2.CreateBotInput) *CreateBotFuture

	CreateBotAlias(ctx workflow.Context, input *lexmodelsv2.CreateBotAliasInput) (*lexmodelsv2.CreateBotAliasOutput, error)
	CreateBotAliasAsync(ctx workflow.Context, input *lexmodelsv2.CreateBotAliasInput) *CreateBotAliasFuture

	CreateBotLocale(ctx workflow.Context, input *lexmodelsv2.CreateBotLocaleInput) (*lexmodelsv2.CreateBotLocaleOutput, error)
	CreateBotLocaleAsync(ctx workflow.Context, input *lexmodelsv2.CreateBotLocaleInput) *CreateBotLocaleFuture

	CreateBotVersion(ctx workflow.Context, input *lexmodelsv2.CreateBotVersionInput) (*lexmodelsv2.CreateBotVersionOutput, error)
	CreateBotVersionAsync(ctx workflow.Context, input *lexmodelsv2.CreateBotVersionInput) *CreateBotVersionFuture

	CreateIntent(ctx workflow.Context, input *lexmodelsv2.CreateIntentInput) (*lexmodelsv2.CreateIntentOutput, error)
	CreateIntentAsync(ctx workflow.Context, input *lexmodelsv2.CreateIntentInput) *CreateIntentFuture

	CreateSlot(ctx workflow.Context, input *lexmodelsv2.CreateSlotInput) (*lexmodelsv2.CreateSlotOutput, error)
	CreateSlotAsync(ctx workflow.Context, input *lexmodelsv2.CreateSlotInput) *CreateSlotFuture

	CreateSlotType(ctx workflow.Context, input *lexmodelsv2.CreateSlotTypeInput) (*lexmodelsv2.CreateSlotTypeOutput, error)
	CreateSlotTypeAsync(ctx workflow.Context, input *lexmodelsv2.CreateSlotTypeInput) *CreateSlotTypeFuture

	DeleteBot(ctx workflow.Context, input *lexmodelsv2.DeleteBotInput) (*lexmodelsv2.DeleteBotOutput, error)
	DeleteBotAsync(ctx workflow.Context, input *lexmodelsv2.DeleteBotInput) *DeleteBotFuture

	DeleteBotAlias(ctx workflow.Context, input *lexmodelsv2.DeleteBotAliasInput) (*lexmodelsv2.DeleteBotAliasOutput, error)
	DeleteBotAliasAsync(ctx workflow.Context, input *lexmodelsv2.DeleteBotAliasInput) *DeleteBotAliasFuture

	DeleteBotLocale(ctx workflow.Context, input *lexmodelsv2.DeleteBotLocaleInput) (*lexmodelsv2.DeleteBotLocaleOutput, error)
	DeleteBotLocaleAsync(ctx workflow.Context, input *lexmodelsv2.DeleteBotLocaleInput) *DeleteBotLocaleFuture

	DeleteBotVersion(ctx workflow.Context, input *lexmodelsv2.DeleteBotVersionInput) (*lexmodelsv2.DeleteBotVersionOutput, error)
	DeleteBotVersionAsync(ctx workflow.Context, input *lexmodelsv2.DeleteBotVersionInput) *DeleteBotVersionFuture

	DeleteIntent(ctx workflow.Context, input *lexmodelsv2.DeleteIntentInput) (*lexmodelsv2.DeleteIntentOutput, error)
	DeleteIntentAsync(ctx workflow.Context, input *lexmodelsv2.DeleteIntentInput) *DeleteIntentFuture

	DeleteSlot(ctx workflow.Context, input *lexmodelsv2.DeleteSlotInput) (*lexmodelsv2.DeleteSlotOutput, error)
	DeleteSlotAsync(ctx workflow.Context, input *lexmodelsv2.DeleteSlotInput) *DeleteSlotFuture

	DeleteSlotType(ctx workflow.Context, input *lexmodelsv2.DeleteSlotTypeInput) (*lexmodelsv2.DeleteSlotTypeOutput, error)
	DeleteSlotTypeAsync(ctx workflow.Context, input *lexmodelsv2.DeleteSlotTypeInput) *DeleteSlotTypeFuture

	DescribeBot(ctx workflow.Context, input *lexmodelsv2.DescribeBotInput) (*lexmodelsv2.DescribeBotOutput, error)
	DescribeBotAsync(ctx workflow.Context, input *lexmodelsv2.DescribeBotInput) *DescribeBotFuture

	DescribeBotAlias(ctx workflow.Context, input *lexmodelsv2.DescribeBotAliasInput) (*lexmodelsv2.DescribeBotAliasOutput, error)
	DescribeBotAliasAsync(ctx workflow.Context, input *lexmodelsv2.DescribeBotAliasInput) *DescribeBotAliasFuture

	DescribeBotLocale(ctx workflow.Context, input *lexmodelsv2.DescribeBotLocaleInput) (*lexmodelsv2.DescribeBotLocaleOutput, error)
	DescribeBotLocaleAsync(ctx workflow.Context, input *lexmodelsv2.DescribeBotLocaleInput) *DescribeBotLocaleFuture

	DescribeBotVersion(ctx workflow.Context, input *lexmodelsv2.DescribeBotVersionInput) (*lexmodelsv2.DescribeBotVersionOutput, error)
	DescribeBotVersionAsync(ctx workflow.Context, input *lexmodelsv2.DescribeBotVersionInput) *DescribeBotVersionFuture

	DescribeIntent(ctx workflow.Context, input *lexmodelsv2.DescribeIntentInput) (*lexmodelsv2.DescribeIntentOutput, error)
	DescribeIntentAsync(ctx workflow.Context, input *lexmodelsv2.DescribeIntentInput) *DescribeIntentFuture

	DescribeSlot(ctx workflow.Context, input *lexmodelsv2.DescribeSlotInput) (*lexmodelsv2.DescribeSlotOutput, error)
	DescribeSlotAsync(ctx workflow.Context, input *lexmodelsv2.DescribeSlotInput) *DescribeSlotFuture

	DescribeSlotType(ctx workflow.Context, input *lexmodelsv2.DescribeSlotTypeInput) (*lexmodelsv2.DescribeSlotTypeOutput, error)
	DescribeSlotTypeAsync(ctx workflow.Context, input *lexmodelsv2.DescribeSlotTypeInput) *DescribeSlotTypeFuture

	ListBotAliases(ctx workflow.Context, input *lexmodelsv2.ListBotAliasesInput) (*lexmodelsv2.ListBotAliasesOutput, error)
	ListBotAliasesAsync(ctx workflow.Context, input *lexmodelsv2.ListBotAliasesInput) *ListBotAliasesFuture

	ListBotLocales(ctx workflow.Context, input *lexmodelsv2.ListBotLocalesInput) (*lexmodelsv2.ListBotLocalesOutput, error)
	ListBotLocalesAsync(ctx workflow.Context, input *lexmodelsv2.ListBotLocalesInput) *ListBotLocalesFuture

	ListBotVersions(ctx workflow.Context, input *lexmodelsv2.ListBotVersionsInput) (*lexmodelsv2.ListBotVersionsOutput, error)
	ListBotVersionsAsync(ctx workflow.Context, input *lexmodelsv2.ListBotVersionsInput) *ListBotVersionsFuture

	ListBots(ctx workflow.Context, input *lexmodelsv2.ListBotsInput) (*lexmodelsv2.ListBotsOutput, error)
	ListBotsAsync(ctx workflow.Context, input *lexmodelsv2.ListBotsInput) *ListBotsFuture

	ListBuiltInIntents(ctx workflow.Context, input *lexmodelsv2.ListBuiltInIntentsInput) (*lexmodelsv2.ListBuiltInIntentsOutput, error)
	ListBuiltInIntentsAsync(ctx workflow.Context, input *lexmodelsv2.ListBuiltInIntentsInput) *ListBuiltInIntentsFuture

	ListBuiltInSlotTypes(ctx workflow.Context, input *lexmodelsv2.ListBuiltInSlotTypesInput) (*lexmodelsv2.ListBuiltInSlotTypesOutput, error)
	ListBuiltInSlotTypesAsync(ctx workflow.Context, input *lexmodelsv2.ListBuiltInSlotTypesInput) *ListBuiltInSlotTypesFuture

	ListIntents(ctx workflow.Context, input *lexmodelsv2.ListIntentsInput) (*lexmodelsv2.ListIntentsOutput, error)
	ListIntentsAsync(ctx workflow.Context, input *lexmodelsv2.ListIntentsInput) *ListIntentsFuture

	ListSlotTypes(ctx workflow.Context, input *lexmodelsv2.ListSlotTypesInput) (*lexmodelsv2.ListSlotTypesOutput, error)
	ListSlotTypesAsync(ctx workflow.Context, input *lexmodelsv2.ListSlotTypesInput) *ListSlotTypesFuture

	ListSlots(ctx workflow.Context, input *lexmodelsv2.ListSlotsInput) (*lexmodelsv2.ListSlotsOutput, error)
	ListSlotsAsync(ctx workflow.Context, input *lexmodelsv2.ListSlotsInput) *ListSlotsFuture

	ListTagsForResource(ctx workflow.Context, input *lexmodelsv2.ListTagsForResourceInput) (*lexmodelsv2.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *lexmodelsv2.ListTagsForResourceInput) *ListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *lexmodelsv2.TagResourceInput) (*lexmodelsv2.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *lexmodelsv2.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *lexmodelsv2.UntagResourceInput) (*lexmodelsv2.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *lexmodelsv2.UntagResourceInput) *UntagResourceFuture

	UpdateBot(ctx workflow.Context, input *lexmodelsv2.UpdateBotInput) (*lexmodelsv2.UpdateBotOutput, error)
	UpdateBotAsync(ctx workflow.Context, input *lexmodelsv2.UpdateBotInput) *UpdateBotFuture

	UpdateBotAlias(ctx workflow.Context, input *lexmodelsv2.UpdateBotAliasInput) (*lexmodelsv2.UpdateBotAliasOutput, error)
	UpdateBotAliasAsync(ctx workflow.Context, input *lexmodelsv2.UpdateBotAliasInput) *UpdateBotAliasFuture

	UpdateBotLocale(ctx workflow.Context, input *lexmodelsv2.UpdateBotLocaleInput) (*lexmodelsv2.UpdateBotLocaleOutput, error)
	UpdateBotLocaleAsync(ctx workflow.Context, input *lexmodelsv2.UpdateBotLocaleInput) *UpdateBotLocaleFuture

	UpdateIntent(ctx workflow.Context, input *lexmodelsv2.UpdateIntentInput) (*lexmodelsv2.UpdateIntentOutput, error)
	UpdateIntentAsync(ctx workflow.Context, input *lexmodelsv2.UpdateIntentInput) *UpdateIntentFuture

	UpdateSlot(ctx workflow.Context, input *lexmodelsv2.UpdateSlotInput) (*lexmodelsv2.UpdateSlotOutput, error)
	UpdateSlotAsync(ctx workflow.Context, input *lexmodelsv2.UpdateSlotInput) *UpdateSlotFuture

	UpdateSlotType(ctx workflow.Context, input *lexmodelsv2.UpdateSlotTypeInput) (*lexmodelsv2.UpdateSlotTypeOutput, error)
	UpdateSlotTypeAsync(ctx workflow.Context, input *lexmodelsv2.UpdateSlotTypeInput) *UpdateSlotTypeFuture
}

func NewClient() Client {
	return &stub{}
}
