// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package gluedatabrewstub

import (
	"github.com/aws/aws-sdk-go/service/gluedatabrew"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	BatchDeleteRecipeVersion(ctx workflow.Context, input *gluedatabrew.BatchDeleteRecipeVersionInput) (*gluedatabrew.BatchDeleteRecipeVersionOutput, error)
	BatchDeleteRecipeVersionAsync(ctx workflow.Context, input *gluedatabrew.BatchDeleteRecipeVersionInput) *BatchDeleteRecipeVersionFuture

	CreateDataset(ctx workflow.Context, input *gluedatabrew.CreateDatasetInput) (*gluedatabrew.CreateDatasetOutput, error)
	CreateDatasetAsync(ctx workflow.Context, input *gluedatabrew.CreateDatasetInput) *CreateDatasetFuture

	CreateProfileJob(ctx workflow.Context, input *gluedatabrew.CreateProfileJobInput) (*gluedatabrew.CreateProfileJobOutput, error)
	CreateProfileJobAsync(ctx workflow.Context, input *gluedatabrew.CreateProfileJobInput) *CreateProfileJobFuture

	CreateProject(ctx workflow.Context, input *gluedatabrew.CreateProjectInput) (*gluedatabrew.CreateProjectOutput, error)
	CreateProjectAsync(ctx workflow.Context, input *gluedatabrew.CreateProjectInput) *CreateProjectFuture

	CreateRecipe(ctx workflow.Context, input *gluedatabrew.CreateRecipeInput) (*gluedatabrew.CreateRecipeOutput, error)
	CreateRecipeAsync(ctx workflow.Context, input *gluedatabrew.CreateRecipeInput) *CreateRecipeFuture

	CreateRecipeJob(ctx workflow.Context, input *gluedatabrew.CreateRecipeJobInput) (*gluedatabrew.CreateRecipeJobOutput, error)
	CreateRecipeJobAsync(ctx workflow.Context, input *gluedatabrew.CreateRecipeJobInput) *CreateRecipeJobFuture

	CreateSchedule(ctx workflow.Context, input *gluedatabrew.CreateScheduleInput) (*gluedatabrew.CreateScheduleOutput, error)
	CreateScheduleAsync(ctx workflow.Context, input *gluedatabrew.CreateScheduleInput) *CreateScheduleFuture

	DeleteDataset(ctx workflow.Context, input *gluedatabrew.DeleteDatasetInput) (*gluedatabrew.DeleteDatasetOutput, error)
	DeleteDatasetAsync(ctx workflow.Context, input *gluedatabrew.DeleteDatasetInput) *DeleteDatasetFuture

	DeleteJob(ctx workflow.Context, input *gluedatabrew.DeleteJobInput) (*gluedatabrew.DeleteJobOutput, error)
	DeleteJobAsync(ctx workflow.Context, input *gluedatabrew.DeleteJobInput) *DeleteJobFuture

	DeleteProject(ctx workflow.Context, input *gluedatabrew.DeleteProjectInput) (*gluedatabrew.DeleteProjectOutput, error)
	DeleteProjectAsync(ctx workflow.Context, input *gluedatabrew.DeleteProjectInput) *DeleteProjectFuture

	DeleteRecipeVersion(ctx workflow.Context, input *gluedatabrew.DeleteRecipeVersionInput) (*gluedatabrew.DeleteRecipeVersionOutput, error)
	DeleteRecipeVersionAsync(ctx workflow.Context, input *gluedatabrew.DeleteRecipeVersionInput) *DeleteRecipeVersionFuture

	DeleteSchedule(ctx workflow.Context, input *gluedatabrew.DeleteScheduleInput) (*gluedatabrew.DeleteScheduleOutput, error)
	DeleteScheduleAsync(ctx workflow.Context, input *gluedatabrew.DeleteScheduleInput) *DeleteScheduleFuture

	DescribeDataset(ctx workflow.Context, input *gluedatabrew.DescribeDatasetInput) (*gluedatabrew.DescribeDatasetOutput, error)
	DescribeDatasetAsync(ctx workflow.Context, input *gluedatabrew.DescribeDatasetInput) *DescribeDatasetFuture

	DescribeJob(ctx workflow.Context, input *gluedatabrew.DescribeJobInput) (*gluedatabrew.DescribeJobOutput, error)
	DescribeJobAsync(ctx workflow.Context, input *gluedatabrew.DescribeJobInput) *DescribeJobFuture

	DescribeProject(ctx workflow.Context, input *gluedatabrew.DescribeProjectInput) (*gluedatabrew.DescribeProjectOutput, error)
	DescribeProjectAsync(ctx workflow.Context, input *gluedatabrew.DescribeProjectInput) *DescribeProjectFuture

	DescribeRecipe(ctx workflow.Context, input *gluedatabrew.DescribeRecipeInput) (*gluedatabrew.DescribeRecipeOutput, error)
	DescribeRecipeAsync(ctx workflow.Context, input *gluedatabrew.DescribeRecipeInput) *DescribeRecipeFuture

	DescribeSchedule(ctx workflow.Context, input *gluedatabrew.DescribeScheduleInput) (*gluedatabrew.DescribeScheduleOutput, error)
	DescribeScheduleAsync(ctx workflow.Context, input *gluedatabrew.DescribeScheduleInput) *DescribeScheduleFuture

	ListDatasets(ctx workflow.Context, input *gluedatabrew.ListDatasetsInput) (*gluedatabrew.ListDatasetsOutput, error)
	ListDatasetsAsync(ctx workflow.Context, input *gluedatabrew.ListDatasetsInput) *ListDatasetsFuture

	ListJobRuns(ctx workflow.Context, input *gluedatabrew.ListJobRunsInput) (*gluedatabrew.ListJobRunsOutput, error)
	ListJobRunsAsync(ctx workflow.Context, input *gluedatabrew.ListJobRunsInput) *ListJobRunsFuture

	ListJobs(ctx workflow.Context, input *gluedatabrew.ListJobsInput) (*gluedatabrew.ListJobsOutput, error)
	ListJobsAsync(ctx workflow.Context, input *gluedatabrew.ListJobsInput) *ListJobsFuture

	ListProjects(ctx workflow.Context, input *gluedatabrew.ListProjectsInput) (*gluedatabrew.ListProjectsOutput, error)
	ListProjectsAsync(ctx workflow.Context, input *gluedatabrew.ListProjectsInput) *ListProjectsFuture

	ListRecipeVersions(ctx workflow.Context, input *gluedatabrew.ListRecipeVersionsInput) (*gluedatabrew.ListRecipeVersionsOutput, error)
	ListRecipeVersionsAsync(ctx workflow.Context, input *gluedatabrew.ListRecipeVersionsInput) *ListRecipeVersionsFuture

	ListRecipes(ctx workflow.Context, input *gluedatabrew.ListRecipesInput) (*gluedatabrew.ListRecipesOutput, error)
	ListRecipesAsync(ctx workflow.Context, input *gluedatabrew.ListRecipesInput) *ListRecipesFuture

	ListSchedules(ctx workflow.Context, input *gluedatabrew.ListSchedulesInput) (*gluedatabrew.ListSchedulesOutput, error)
	ListSchedulesAsync(ctx workflow.Context, input *gluedatabrew.ListSchedulesInput) *ListSchedulesFuture

	ListTagsForResource(ctx workflow.Context, input *gluedatabrew.ListTagsForResourceInput) (*gluedatabrew.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *gluedatabrew.ListTagsForResourceInput) *ListTagsForResourceFuture

	PublishRecipe(ctx workflow.Context, input *gluedatabrew.PublishRecipeInput) (*gluedatabrew.PublishRecipeOutput, error)
	PublishRecipeAsync(ctx workflow.Context, input *gluedatabrew.PublishRecipeInput) *PublishRecipeFuture

	SendProjectSessionAction(ctx workflow.Context, input *gluedatabrew.SendProjectSessionActionInput) (*gluedatabrew.SendProjectSessionActionOutput, error)
	SendProjectSessionActionAsync(ctx workflow.Context, input *gluedatabrew.SendProjectSessionActionInput) *SendProjectSessionActionFuture

	StartJobRun(ctx workflow.Context, input *gluedatabrew.StartJobRunInput) (*gluedatabrew.StartJobRunOutput, error)
	StartJobRunAsync(ctx workflow.Context, input *gluedatabrew.StartJobRunInput) *StartJobRunFuture

	StartProjectSession(ctx workflow.Context, input *gluedatabrew.StartProjectSessionInput) (*gluedatabrew.StartProjectSessionOutput, error)
	StartProjectSessionAsync(ctx workflow.Context, input *gluedatabrew.StartProjectSessionInput) *StartProjectSessionFuture

	StopJobRun(ctx workflow.Context, input *gluedatabrew.StopJobRunInput) (*gluedatabrew.StopJobRunOutput, error)
	StopJobRunAsync(ctx workflow.Context, input *gluedatabrew.StopJobRunInput) *StopJobRunFuture

	TagResource(ctx workflow.Context, input *gluedatabrew.TagResourceInput) (*gluedatabrew.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *gluedatabrew.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *gluedatabrew.UntagResourceInput) (*gluedatabrew.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *gluedatabrew.UntagResourceInput) *UntagResourceFuture

	UpdateDataset(ctx workflow.Context, input *gluedatabrew.UpdateDatasetInput) (*gluedatabrew.UpdateDatasetOutput, error)
	UpdateDatasetAsync(ctx workflow.Context, input *gluedatabrew.UpdateDatasetInput) *UpdateDatasetFuture

	UpdateProfileJob(ctx workflow.Context, input *gluedatabrew.UpdateProfileJobInput) (*gluedatabrew.UpdateProfileJobOutput, error)
	UpdateProfileJobAsync(ctx workflow.Context, input *gluedatabrew.UpdateProfileJobInput) *UpdateProfileJobFuture

	UpdateProject(ctx workflow.Context, input *gluedatabrew.UpdateProjectInput) (*gluedatabrew.UpdateProjectOutput, error)
	UpdateProjectAsync(ctx workflow.Context, input *gluedatabrew.UpdateProjectInput) *UpdateProjectFuture

	UpdateRecipe(ctx workflow.Context, input *gluedatabrew.UpdateRecipeInput) (*gluedatabrew.UpdateRecipeOutput, error)
	UpdateRecipeAsync(ctx workflow.Context, input *gluedatabrew.UpdateRecipeInput) *UpdateRecipeFuture

	UpdateRecipeJob(ctx workflow.Context, input *gluedatabrew.UpdateRecipeJobInput) (*gluedatabrew.UpdateRecipeJobOutput, error)
	UpdateRecipeJobAsync(ctx workflow.Context, input *gluedatabrew.UpdateRecipeJobInput) *UpdateRecipeJobFuture

	UpdateSchedule(ctx workflow.Context, input *gluedatabrew.UpdateScheduleInput) (*gluedatabrew.UpdateScheduleOutput, error)
	UpdateScheduleAsync(ctx workflow.Context, input *gluedatabrew.UpdateScheduleInput) *UpdateScheduleFuture
}

func NewClient() Client {
	return &stub{}
}
