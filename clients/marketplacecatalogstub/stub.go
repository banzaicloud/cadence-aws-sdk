// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package marketplacecatalogstub

import (
	"github.com/aws/aws-sdk-go/service/marketplacecatalog"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type CancelChangeSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CancelChangeSetFuture) Get(ctx workflow.Context) (*marketplacecatalog.CancelChangeSetOutput, error) {
	var output marketplacecatalog.CancelChangeSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeChangeSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeChangeSetFuture) Get(ctx workflow.Context) (*marketplacecatalog.DescribeChangeSetOutput, error) {
	var output marketplacecatalog.DescribeChangeSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeEntityFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeEntityFuture) Get(ctx workflow.Context) (*marketplacecatalog.DescribeEntityOutput, error) {
	var output marketplacecatalog.DescribeEntityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListChangeSetsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListChangeSetsFuture) Get(ctx workflow.Context) (*marketplacecatalog.ListChangeSetsOutput, error) {
	var output marketplacecatalog.ListChangeSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListEntitiesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListEntitiesFuture) Get(ctx workflow.Context) (*marketplacecatalog.ListEntitiesOutput, error) {
	var output marketplacecatalog.ListEntitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type StartChangeSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *StartChangeSetFuture) Get(ctx workflow.Context) (*marketplacecatalog.StartChangeSetOutput, error) {
	var output marketplacecatalog.StartChangeSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) CancelChangeSet(ctx workflow.Context, input *marketplacecatalog.CancelChangeSetInput) (*marketplacecatalog.CancelChangeSetOutput, error) {
	var output marketplacecatalog.CancelChangeSetOutput
	err := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-CancelChangeSet", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CancelChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.CancelChangeSetInput) *CancelChangeSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-CancelChangeSet", input)
	return &CancelChangeSetFuture{Future: future}
}

func (a *stub) DescribeChangeSet(ctx workflow.Context, input *marketplacecatalog.DescribeChangeSetInput) (*marketplacecatalog.DescribeChangeSetOutput, error) {
	var output marketplacecatalog.DescribeChangeSetOutput
	err := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-DescribeChangeSet", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.DescribeChangeSetInput) *DescribeChangeSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-DescribeChangeSet", input)
	return &DescribeChangeSetFuture{Future: future}
}

func (a *stub) DescribeEntity(ctx workflow.Context, input *marketplacecatalog.DescribeEntityInput) (*marketplacecatalog.DescribeEntityOutput, error) {
	var output marketplacecatalog.DescribeEntityOutput
	err := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-DescribeEntity", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeEntityAsync(ctx workflow.Context, input *marketplacecatalog.DescribeEntityInput) *DescribeEntityFuture {
	future := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-DescribeEntity", input)
	return &DescribeEntityFuture{Future: future}
}

func (a *stub) ListChangeSets(ctx workflow.Context, input *marketplacecatalog.ListChangeSetsInput) (*marketplacecatalog.ListChangeSetsOutput, error) {
	var output marketplacecatalog.ListChangeSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-ListChangeSets", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListChangeSetsAsync(ctx workflow.Context, input *marketplacecatalog.ListChangeSetsInput) *ListChangeSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-ListChangeSets", input)
	return &ListChangeSetsFuture{Future: future}
}

func (a *stub) ListEntities(ctx workflow.Context, input *marketplacecatalog.ListEntitiesInput) (*marketplacecatalog.ListEntitiesOutput, error) {
	var output marketplacecatalog.ListEntitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-ListEntities", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListEntitiesAsync(ctx workflow.Context, input *marketplacecatalog.ListEntitiesInput) *ListEntitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-ListEntities", input)
	return &ListEntitiesFuture{Future: future}
}

func (a *stub) StartChangeSet(ctx workflow.Context, input *marketplacecatalog.StartChangeSetInput) (*marketplacecatalog.StartChangeSetOutput, error) {
	var output marketplacecatalog.StartChangeSetOutput
	err := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-StartChangeSet", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) StartChangeSetAsync(ctx workflow.Context, input *marketplacecatalog.StartChangeSetInput) *StartChangeSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws-marketplacecatalog-StartChangeSet", input)
	return &StartChangeSetFuture{Future: future}
}
