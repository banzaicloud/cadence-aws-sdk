// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package globalacceleratorstub

import (
	"github.com/aws/aws-sdk-go/service/globalaccelerator"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	AddCustomRoutingEndpoints(ctx workflow.Context, input *globalaccelerator.AddCustomRoutingEndpointsInput) (*globalaccelerator.AddCustomRoutingEndpointsOutput, error)
	AddCustomRoutingEndpointsAsync(ctx workflow.Context, input *globalaccelerator.AddCustomRoutingEndpointsInput) *AddCustomRoutingEndpointsFuture

	AdvertiseByoipCidr(ctx workflow.Context, input *globalaccelerator.AdvertiseByoipCidrInput) (*globalaccelerator.AdvertiseByoipCidrOutput, error)
	AdvertiseByoipCidrAsync(ctx workflow.Context, input *globalaccelerator.AdvertiseByoipCidrInput) *AdvertiseByoipCidrFuture

	AllowCustomRoutingTraffic(ctx workflow.Context, input *globalaccelerator.AllowCustomRoutingTrafficInput) (*globalaccelerator.AllowCustomRoutingTrafficOutput, error)
	AllowCustomRoutingTrafficAsync(ctx workflow.Context, input *globalaccelerator.AllowCustomRoutingTrafficInput) *AllowCustomRoutingTrafficFuture

	CreateAccelerator(ctx workflow.Context, input *globalaccelerator.CreateAcceleratorInput) (*globalaccelerator.CreateAcceleratorOutput, error)
	CreateAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.CreateAcceleratorInput) *CreateAcceleratorFuture

	CreateCustomRoutingAccelerator(ctx workflow.Context, input *globalaccelerator.CreateCustomRoutingAcceleratorInput) (*globalaccelerator.CreateCustomRoutingAcceleratorOutput, error)
	CreateCustomRoutingAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.CreateCustomRoutingAcceleratorInput) *CreateCustomRoutingAcceleratorFuture

	CreateCustomRoutingEndpointGroup(ctx workflow.Context, input *globalaccelerator.CreateCustomRoutingEndpointGroupInput) (*globalaccelerator.CreateCustomRoutingEndpointGroupOutput, error)
	CreateCustomRoutingEndpointGroupAsync(ctx workflow.Context, input *globalaccelerator.CreateCustomRoutingEndpointGroupInput) *CreateCustomRoutingEndpointGroupFuture

	CreateCustomRoutingListener(ctx workflow.Context, input *globalaccelerator.CreateCustomRoutingListenerInput) (*globalaccelerator.CreateCustomRoutingListenerOutput, error)
	CreateCustomRoutingListenerAsync(ctx workflow.Context, input *globalaccelerator.CreateCustomRoutingListenerInput) *CreateCustomRoutingListenerFuture

	CreateEndpointGroup(ctx workflow.Context, input *globalaccelerator.CreateEndpointGroupInput) (*globalaccelerator.CreateEndpointGroupOutput, error)
	CreateEndpointGroupAsync(ctx workflow.Context, input *globalaccelerator.CreateEndpointGroupInput) *CreateEndpointGroupFuture

	CreateListener(ctx workflow.Context, input *globalaccelerator.CreateListenerInput) (*globalaccelerator.CreateListenerOutput, error)
	CreateListenerAsync(ctx workflow.Context, input *globalaccelerator.CreateListenerInput) *CreateListenerFuture

	DeleteAccelerator(ctx workflow.Context, input *globalaccelerator.DeleteAcceleratorInput) (*globalaccelerator.DeleteAcceleratorOutput, error)
	DeleteAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.DeleteAcceleratorInput) *DeleteAcceleratorFuture

	DeleteCustomRoutingAccelerator(ctx workflow.Context, input *globalaccelerator.DeleteCustomRoutingAcceleratorInput) (*globalaccelerator.DeleteCustomRoutingAcceleratorOutput, error)
	DeleteCustomRoutingAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.DeleteCustomRoutingAcceleratorInput) *DeleteCustomRoutingAcceleratorFuture

	DeleteCustomRoutingEndpointGroup(ctx workflow.Context, input *globalaccelerator.DeleteCustomRoutingEndpointGroupInput) (*globalaccelerator.DeleteCustomRoutingEndpointGroupOutput, error)
	DeleteCustomRoutingEndpointGroupAsync(ctx workflow.Context, input *globalaccelerator.DeleteCustomRoutingEndpointGroupInput) *DeleteCustomRoutingEndpointGroupFuture

	DeleteCustomRoutingListener(ctx workflow.Context, input *globalaccelerator.DeleteCustomRoutingListenerInput) (*globalaccelerator.DeleteCustomRoutingListenerOutput, error)
	DeleteCustomRoutingListenerAsync(ctx workflow.Context, input *globalaccelerator.DeleteCustomRoutingListenerInput) *DeleteCustomRoutingListenerFuture

	DeleteEndpointGroup(ctx workflow.Context, input *globalaccelerator.DeleteEndpointGroupInput) (*globalaccelerator.DeleteEndpointGroupOutput, error)
	DeleteEndpointGroupAsync(ctx workflow.Context, input *globalaccelerator.DeleteEndpointGroupInput) *DeleteEndpointGroupFuture

	DeleteListener(ctx workflow.Context, input *globalaccelerator.DeleteListenerInput) (*globalaccelerator.DeleteListenerOutput, error)
	DeleteListenerAsync(ctx workflow.Context, input *globalaccelerator.DeleteListenerInput) *DeleteListenerFuture

	DenyCustomRoutingTraffic(ctx workflow.Context, input *globalaccelerator.DenyCustomRoutingTrafficInput) (*globalaccelerator.DenyCustomRoutingTrafficOutput, error)
	DenyCustomRoutingTrafficAsync(ctx workflow.Context, input *globalaccelerator.DenyCustomRoutingTrafficInput) *DenyCustomRoutingTrafficFuture

	DeprovisionByoipCidr(ctx workflow.Context, input *globalaccelerator.DeprovisionByoipCidrInput) (*globalaccelerator.DeprovisionByoipCidrOutput, error)
	DeprovisionByoipCidrAsync(ctx workflow.Context, input *globalaccelerator.DeprovisionByoipCidrInput) *DeprovisionByoipCidrFuture

	DescribeAccelerator(ctx workflow.Context, input *globalaccelerator.DescribeAcceleratorInput) (*globalaccelerator.DescribeAcceleratorOutput, error)
	DescribeAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.DescribeAcceleratorInput) *DescribeAcceleratorFuture

	DescribeAcceleratorAttributes(ctx workflow.Context, input *globalaccelerator.DescribeAcceleratorAttributesInput) (*globalaccelerator.DescribeAcceleratorAttributesOutput, error)
	DescribeAcceleratorAttributesAsync(ctx workflow.Context, input *globalaccelerator.DescribeAcceleratorAttributesInput) *DescribeAcceleratorAttributesFuture

	DescribeCustomRoutingAccelerator(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingAcceleratorInput) (*globalaccelerator.DescribeCustomRoutingAcceleratorOutput, error)
	DescribeCustomRoutingAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingAcceleratorInput) *DescribeCustomRoutingAcceleratorFuture

	DescribeCustomRoutingAcceleratorAttributes(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingAcceleratorAttributesInput) (*globalaccelerator.DescribeCustomRoutingAcceleratorAttributesOutput, error)
	DescribeCustomRoutingAcceleratorAttributesAsync(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingAcceleratorAttributesInput) *DescribeCustomRoutingAcceleratorAttributesFuture

	DescribeCustomRoutingEndpointGroup(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingEndpointGroupInput) (*globalaccelerator.DescribeCustomRoutingEndpointGroupOutput, error)
	DescribeCustomRoutingEndpointGroupAsync(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingEndpointGroupInput) *DescribeCustomRoutingEndpointGroupFuture

	DescribeCustomRoutingListener(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingListenerInput) (*globalaccelerator.DescribeCustomRoutingListenerOutput, error)
	DescribeCustomRoutingListenerAsync(ctx workflow.Context, input *globalaccelerator.DescribeCustomRoutingListenerInput) *DescribeCustomRoutingListenerFuture

	DescribeEndpointGroup(ctx workflow.Context, input *globalaccelerator.DescribeEndpointGroupInput) (*globalaccelerator.DescribeEndpointGroupOutput, error)
	DescribeEndpointGroupAsync(ctx workflow.Context, input *globalaccelerator.DescribeEndpointGroupInput) *DescribeEndpointGroupFuture

	DescribeListener(ctx workflow.Context, input *globalaccelerator.DescribeListenerInput) (*globalaccelerator.DescribeListenerOutput, error)
	DescribeListenerAsync(ctx workflow.Context, input *globalaccelerator.DescribeListenerInput) *DescribeListenerFuture

	ListAccelerators(ctx workflow.Context, input *globalaccelerator.ListAcceleratorsInput) (*globalaccelerator.ListAcceleratorsOutput, error)
	ListAcceleratorsAsync(ctx workflow.Context, input *globalaccelerator.ListAcceleratorsInput) *ListAcceleratorsFuture

	ListByoipCidrs(ctx workflow.Context, input *globalaccelerator.ListByoipCidrsInput) (*globalaccelerator.ListByoipCidrsOutput, error)
	ListByoipCidrsAsync(ctx workflow.Context, input *globalaccelerator.ListByoipCidrsInput) *ListByoipCidrsFuture

	ListCustomRoutingAccelerators(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingAcceleratorsInput) (*globalaccelerator.ListCustomRoutingAcceleratorsOutput, error)
	ListCustomRoutingAcceleratorsAsync(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingAcceleratorsInput) *ListCustomRoutingAcceleratorsFuture

	ListCustomRoutingEndpointGroups(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingEndpointGroupsInput) (*globalaccelerator.ListCustomRoutingEndpointGroupsOutput, error)
	ListCustomRoutingEndpointGroupsAsync(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingEndpointGroupsInput) *ListCustomRoutingEndpointGroupsFuture

	ListCustomRoutingListeners(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingListenersInput) (*globalaccelerator.ListCustomRoutingListenersOutput, error)
	ListCustomRoutingListenersAsync(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingListenersInput) *ListCustomRoutingListenersFuture

	ListCustomRoutingPortMappings(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingPortMappingsInput) (*globalaccelerator.ListCustomRoutingPortMappingsOutput, error)
	ListCustomRoutingPortMappingsAsync(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingPortMappingsInput) *ListCustomRoutingPortMappingsFuture

	ListCustomRoutingPortMappingsByDestination(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingPortMappingsByDestinationInput) (*globalaccelerator.ListCustomRoutingPortMappingsByDestinationOutput, error)
	ListCustomRoutingPortMappingsByDestinationAsync(ctx workflow.Context, input *globalaccelerator.ListCustomRoutingPortMappingsByDestinationInput) *ListCustomRoutingPortMappingsByDestinationFuture

	ListEndpointGroups(ctx workflow.Context, input *globalaccelerator.ListEndpointGroupsInput) (*globalaccelerator.ListEndpointGroupsOutput, error)
	ListEndpointGroupsAsync(ctx workflow.Context, input *globalaccelerator.ListEndpointGroupsInput) *ListEndpointGroupsFuture

	ListListeners(ctx workflow.Context, input *globalaccelerator.ListListenersInput) (*globalaccelerator.ListListenersOutput, error)
	ListListenersAsync(ctx workflow.Context, input *globalaccelerator.ListListenersInput) *ListListenersFuture

	ListTagsForResource(ctx workflow.Context, input *globalaccelerator.ListTagsForResourceInput) (*globalaccelerator.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *globalaccelerator.ListTagsForResourceInput) *ListTagsForResourceFuture

	ProvisionByoipCidr(ctx workflow.Context, input *globalaccelerator.ProvisionByoipCidrInput) (*globalaccelerator.ProvisionByoipCidrOutput, error)
	ProvisionByoipCidrAsync(ctx workflow.Context, input *globalaccelerator.ProvisionByoipCidrInput) *ProvisionByoipCidrFuture

	RemoveCustomRoutingEndpoints(ctx workflow.Context, input *globalaccelerator.RemoveCustomRoutingEndpointsInput) (*globalaccelerator.RemoveCustomRoutingEndpointsOutput, error)
	RemoveCustomRoutingEndpointsAsync(ctx workflow.Context, input *globalaccelerator.RemoveCustomRoutingEndpointsInput) *RemoveCustomRoutingEndpointsFuture

	TagResource(ctx workflow.Context, input *globalaccelerator.TagResourceInput) (*globalaccelerator.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *globalaccelerator.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *globalaccelerator.UntagResourceInput) (*globalaccelerator.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *globalaccelerator.UntagResourceInput) *UntagResourceFuture

	UpdateAccelerator(ctx workflow.Context, input *globalaccelerator.UpdateAcceleratorInput) (*globalaccelerator.UpdateAcceleratorOutput, error)
	UpdateAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.UpdateAcceleratorInput) *UpdateAcceleratorFuture

	UpdateAcceleratorAttributes(ctx workflow.Context, input *globalaccelerator.UpdateAcceleratorAttributesInput) (*globalaccelerator.UpdateAcceleratorAttributesOutput, error)
	UpdateAcceleratorAttributesAsync(ctx workflow.Context, input *globalaccelerator.UpdateAcceleratorAttributesInput) *UpdateAcceleratorAttributesFuture

	UpdateCustomRoutingAccelerator(ctx workflow.Context, input *globalaccelerator.UpdateCustomRoutingAcceleratorInput) (*globalaccelerator.UpdateCustomRoutingAcceleratorOutput, error)
	UpdateCustomRoutingAcceleratorAsync(ctx workflow.Context, input *globalaccelerator.UpdateCustomRoutingAcceleratorInput) *UpdateCustomRoutingAcceleratorFuture

	UpdateCustomRoutingAcceleratorAttributes(ctx workflow.Context, input *globalaccelerator.UpdateCustomRoutingAcceleratorAttributesInput) (*globalaccelerator.UpdateCustomRoutingAcceleratorAttributesOutput, error)
	UpdateCustomRoutingAcceleratorAttributesAsync(ctx workflow.Context, input *globalaccelerator.UpdateCustomRoutingAcceleratorAttributesInput) *UpdateCustomRoutingAcceleratorAttributesFuture

	UpdateCustomRoutingListener(ctx workflow.Context, input *globalaccelerator.UpdateCustomRoutingListenerInput) (*globalaccelerator.UpdateCustomRoutingListenerOutput, error)
	UpdateCustomRoutingListenerAsync(ctx workflow.Context, input *globalaccelerator.UpdateCustomRoutingListenerInput) *UpdateCustomRoutingListenerFuture

	UpdateEndpointGroup(ctx workflow.Context, input *globalaccelerator.UpdateEndpointGroupInput) (*globalaccelerator.UpdateEndpointGroupOutput, error)
	UpdateEndpointGroupAsync(ctx workflow.Context, input *globalaccelerator.UpdateEndpointGroupInput) *UpdateEndpointGroupFuture

	UpdateListener(ctx workflow.Context, input *globalaccelerator.UpdateListenerInput) (*globalaccelerator.UpdateListenerOutput, error)
	UpdateListenerAsync(ctx workflow.Context, input *globalaccelerator.UpdateListenerInput) *UpdateListenerFuture

	WithdrawByoipCidr(ctx workflow.Context, input *globalaccelerator.WithdrawByoipCidrInput) (*globalaccelerator.WithdrawByoipCidrOutput, error)
	WithdrawByoipCidrAsync(ctx workflow.Context, input *globalaccelerator.WithdrawByoipCidrInput) *WithdrawByoipCidrFuture
}

func NewClient() Client {
	return &stub{}
}
