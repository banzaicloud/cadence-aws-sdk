// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package migrationhubstub

import (
	"github.com/aws/aws-sdk-go/service/migrationhub"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type AssociateCreatedArtifactFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *AssociateCreatedArtifactFuture) Get(ctx workflow.Context) (*migrationhub.AssociateCreatedArtifactOutput, error) {
	var output migrationhub.AssociateCreatedArtifactOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type AssociateDiscoveredResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *AssociateDiscoveredResourceFuture) Get(ctx workflow.Context) (*migrationhub.AssociateDiscoveredResourceOutput, error) {
	var output migrationhub.AssociateDiscoveredResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateProgressUpdateStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateProgressUpdateStreamFuture) Get(ctx workflow.Context) (*migrationhub.CreateProgressUpdateStreamOutput, error) {
	var output migrationhub.CreateProgressUpdateStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteProgressUpdateStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteProgressUpdateStreamFuture) Get(ctx workflow.Context) (*migrationhub.DeleteProgressUpdateStreamOutput, error) {
	var output migrationhub.DeleteProgressUpdateStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeApplicationStateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeApplicationStateFuture) Get(ctx workflow.Context) (*migrationhub.DescribeApplicationStateOutput, error) {
	var output migrationhub.DescribeApplicationStateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeMigrationTaskFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeMigrationTaskFuture) Get(ctx workflow.Context) (*migrationhub.DescribeMigrationTaskOutput, error) {
	var output migrationhub.DescribeMigrationTaskOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisassociateCreatedArtifactFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisassociateCreatedArtifactFuture) Get(ctx workflow.Context) (*migrationhub.DisassociateCreatedArtifactOutput, error) {
	var output migrationhub.DisassociateCreatedArtifactOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisassociateDiscoveredResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisassociateDiscoveredResourceFuture) Get(ctx workflow.Context) (*migrationhub.DisassociateDiscoveredResourceOutput, error) {
	var output migrationhub.DisassociateDiscoveredResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ImportMigrationTaskFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ImportMigrationTaskFuture) Get(ctx workflow.Context) (*migrationhub.ImportMigrationTaskOutput, error) {
	var output migrationhub.ImportMigrationTaskOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListApplicationStatesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListApplicationStatesFuture) Get(ctx workflow.Context) (*migrationhub.ListApplicationStatesOutput, error) {
	var output migrationhub.ListApplicationStatesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListCreatedArtifactsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListCreatedArtifactsFuture) Get(ctx workflow.Context) (*migrationhub.ListCreatedArtifactsOutput, error) {
	var output migrationhub.ListCreatedArtifactsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListDiscoveredResourcesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListDiscoveredResourcesFuture) Get(ctx workflow.Context) (*migrationhub.ListDiscoveredResourcesOutput, error) {
	var output migrationhub.ListDiscoveredResourcesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListMigrationTasksFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListMigrationTasksFuture) Get(ctx workflow.Context) (*migrationhub.ListMigrationTasksOutput, error) {
	var output migrationhub.ListMigrationTasksOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListProgressUpdateStreamsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListProgressUpdateStreamsFuture) Get(ctx workflow.Context) (*migrationhub.ListProgressUpdateStreamsOutput, error) {
	var output migrationhub.ListProgressUpdateStreamsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type NotifyApplicationStateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *NotifyApplicationStateFuture) Get(ctx workflow.Context) (*migrationhub.NotifyApplicationStateOutput, error) {
	var output migrationhub.NotifyApplicationStateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type NotifyMigrationTaskStateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *NotifyMigrationTaskStateFuture) Get(ctx workflow.Context) (*migrationhub.NotifyMigrationTaskStateOutput, error) {
	var output migrationhub.NotifyMigrationTaskStateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutResourceAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutResourceAttributesFuture) Get(ctx workflow.Context) (*migrationhub.PutResourceAttributesOutput, error) {
	var output migrationhub.PutResourceAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) AssociateCreatedArtifact(ctx workflow.Context, input *migrationhub.AssociateCreatedArtifactInput) (*migrationhub.AssociateCreatedArtifactOutput, error) {
	var output migrationhub.AssociateCreatedArtifactOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-AssociateCreatedArtifact", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) AssociateCreatedArtifactAsync(ctx workflow.Context, input *migrationhub.AssociateCreatedArtifactInput) *AssociateCreatedArtifactFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-AssociateCreatedArtifact", input)
	return &AssociateCreatedArtifactFuture{Future: future}
}

func (a *stub) AssociateDiscoveredResource(ctx workflow.Context, input *migrationhub.AssociateDiscoveredResourceInput) (*migrationhub.AssociateDiscoveredResourceOutput, error) {
	var output migrationhub.AssociateDiscoveredResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-AssociateDiscoveredResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) AssociateDiscoveredResourceAsync(ctx workflow.Context, input *migrationhub.AssociateDiscoveredResourceInput) *AssociateDiscoveredResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-AssociateDiscoveredResource", input)
	return &AssociateDiscoveredResourceFuture{Future: future}
}

func (a *stub) CreateProgressUpdateStream(ctx workflow.Context, input *migrationhub.CreateProgressUpdateStreamInput) (*migrationhub.CreateProgressUpdateStreamOutput, error) {
	var output migrationhub.CreateProgressUpdateStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-CreateProgressUpdateStream", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateProgressUpdateStreamAsync(ctx workflow.Context, input *migrationhub.CreateProgressUpdateStreamInput) *CreateProgressUpdateStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-CreateProgressUpdateStream", input)
	return &CreateProgressUpdateStreamFuture{Future: future}
}

func (a *stub) DeleteProgressUpdateStream(ctx workflow.Context, input *migrationhub.DeleteProgressUpdateStreamInput) (*migrationhub.DeleteProgressUpdateStreamOutput, error) {
	var output migrationhub.DeleteProgressUpdateStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-DeleteProgressUpdateStream", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteProgressUpdateStreamAsync(ctx workflow.Context, input *migrationhub.DeleteProgressUpdateStreamInput) *DeleteProgressUpdateStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-DeleteProgressUpdateStream", input)
	return &DeleteProgressUpdateStreamFuture{Future: future}
}

func (a *stub) DescribeApplicationState(ctx workflow.Context, input *migrationhub.DescribeApplicationStateInput) (*migrationhub.DescribeApplicationStateOutput, error) {
	var output migrationhub.DescribeApplicationStateOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-DescribeApplicationState", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeApplicationStateAsync(ctx workflow.Context, input *migrationhub.DescribeApplicationStateInput) *DescribeApplicationStateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-DescribeApplicationState", input)
	return &DescribeApplicationStateFuture{Future: future}
}

func (a *stub) DescribeMigrationTask(ctx workflow.Context, input *migrationhub.DescribeMigrationTaskInput) (*migrationhub.DescribeMigrationTaskOutput, error) {
	var output migrationhub.DescribeMigrationTaskOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-DescribeMigrationTask", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeMigrationTaskAsync(ctx workflow.Context, input *migrationhub.DescribeMigrationTaskInput) *DescribeMigrationTaskFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-DescribeMigrationTask", input)
	return &DescribeMigrationTaskFuture{Future: future}
}

func (a *stub) DisassociateCreatedArtifact(ctx workflow.Context, input *migrationhub.DisassociateCreatedArtifactInput) (*migrationhub.DisassociateCreatedArtifactOutput, error) {
	var output migrationhub.DisassociateCreatedArtifactOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-DisassociateCreatedArtifact", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisassociateCreatedArtifactAsync(ctx workflow.Context, input *migrationhub.DisassociateCreatedArtifactInput) *DisassociateCreatedArtifactFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-DisassociateCreatedArtifact", input)
	return &DisassociateCreatedArtifactFuture{Future: future}
}

func (a *stub) DisassociateDiscoveredResource(ctx workflow.Context, input *migrationhub.DisassociateDiscoveredResourceInput) (*migrationhub.DisassociateDiscoveredResourceOutput, error) {
	var output migrationhub.DisassociateDiscoveredResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-DisassociateDiscoveredResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisassociateDiscoveredResourceAsync(ctx workflow.Context, input *migrationhub.DisassociateDiscoveredResourceInput) *DisassociateDiscoveredResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-DisassociateDiscoveredResource", input)
	return &DisassociateDiscoveredResourceFuture{Future: future}
}

func (a *stub) ImportMigrationTask(ctx workflow.Context, input *migrationhub.ImportMigrationTaskInput) (*migrationhub.ImportMigrationTaskOutput, error) {
	var output migrationhub.ImportMigrationTaskOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-ImportMigrationTask", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ImportMigrationTaskAsync(ctx workflow.Context, input *migrationhub.ImportMigrationTaskInput) *ImportMigrationTaskFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-ImportMigrationTask", input)
	return &ImportMigrationTaskFuture{Future: future}
}

func (a *stub) ListApplicationStates(ctx workflow.Context, input *migrationhub.ListApplicationStatesInput) (*migrationhub.ListApplicationStatesOutput, error) {
	var output migrationhub.ListApplicationStatesOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListApplicationStates", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListApplicationStatesAsync(ctx workflow.Context, input *migrationhub.ListApplicationStatesInput) *ListApplicationStatesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListApplicationStates", input)
	return &ListApplicationStatesFuture{Future: future}
}

func (a *stub) ListCreatedArtifacts(ctx workflow.Context, input *migrationhub.ListCreatedArtifactsInput) (*migrationhub.ListCreatedArtifactsOutput, error) {
	var output migrationhub.ListCreatedArtifactsOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListCreatedArtifacts", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListCreatedArtifactsAsync(ctx workflow.Context, input *migrationhub.ListCreatedArtifactsInput) *ListCreatedArtifactsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListCreatedArtifacts", input)
	return &ListCreatedArtifactsFuture{Future: future}
}

func (a *stub) ListDiscoveredResources(ctx workflow.Context, input *migrationhub.ListDiscoveredResourcesInput) (*migrationhub.ListDiscoveredResourcesOutput, error) {
	var output migrationhub.ListDiscoveredResourcesOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListDiscoveredResources", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListDiscoveredResourcesAsync(ctx workflow.Context, input *migrationhub.ListDiscoveredResourcesInput) *ListDiscoveredResourcesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListDiscoveredResources", input)
	return &ListDiscoveredResourcesFuture{Future: future}
}

func (a *stub) ListMigrationTasks(ctx workflow.Context, input *migrationhub.ListMigrationTasksInput) (*migrationhub.ListMigrationTasksOutput, error) {
	var output migrationhub.ListMigrationTasksOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListMigrationTasks", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListMigrationTasksAsync(ctx workflow.Context, input *migrationhub.ListMigrationTasksInput) *ListMigrationTasksFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListMigrationTasks", input)
	return &ListMigrationTasksFuture{Future: future}
}

func (a *stub) ListProgressUpdateStreams(ctx workflow.Context, input *migrationhub.ListProgressUpdateStreamsInput) (*migrationhub.ListProgressUpdateStreamsOutput, error) {
	var output migrationhub.ListProgressUpdateStreamsOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListProgressUpdateStreams", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListProgressUpdateStreamsAsync(ctx workflow.Context, input *migrationhub.ListProgressUpdateStreamsInput) *ListProgressUpdateStreamsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-ListProgressUpdateStreams", input)
	return &ListProgressUpdateStreamsFuture{Future: future}
}

func (a *stub) NotifyApplicationState(ctx workflow.Context, input *migrationhub.NotifyApplicationStateInput) (*migrationhub.NotifyApplicationStateOutput, error) {
	var output migrationhub.NotifyApplicationStateOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-NotifyApplicationState", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) NotifyApplicationStateAsync(ctx workflow.Context, input *migrationhub.NotifyApplicationStateInput) *NotifyApplicationStateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-NotifyApplicationState", input)
	return &NotifyApplicationStateFuture{Future: future}
}

func (a *stub) NotifyMigrationTaskState(ctx workflow.Context, input *migrationhub.NotifyMigrationTaskStateInput) (*migrationhub.NotifyMigrationTaskStateOutput, error) {
	var output migrationhub.NotifyMigrationTaskStateOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-NotifyMigrationTaskState", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) NotifyMigrationTaskStateAsync(ctx workflow.Context, input *migrationhub.NotifyMigrationTaskStateInput) *NotifyMigrationTaskStateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-NotifyMigrationTaskState", input)
	return &NotifyMigrationTaskStateFuture{Future: future}
}

func (a *stub) PutResourceAttributes(ctx workflow.Context, input *migrationhub.PutResourceAttributesInput) (*migrationhub.PutResourceAttributesOutput, error) {
	var output migrationhub.PutResourceAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-migrationhub-PutResourceAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutResourceAttributesAsync(ctx workflow.Context, input *migrationhub.PutResourceAttributesInput) *PutResourceAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-migrationhub-PutResourceAttributes", input)
	return &PutResourceAttributesFuture{Future: future}
}
