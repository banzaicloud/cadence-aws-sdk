// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
// Copyright (c) 2020 Banzai Cloud All rights reserved.

package iot1clickprojectsstub

import (
	"github.com/aws/aws-sdk-go/service/iot1clickprojects"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	AssociateDeviceWithPlacement(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) (*iot1clickprojects.AssociateDeviceWithPlacementOutput, error)
	AssociateDeviceWithPlacementAsync(ctx workflow.Context, input *iot1clickprojects.AssociateDeviceWithPlacementInput) *IoT1ClickProjectsAssociateDeviceWithPlacementFuture

	CreatePlacement(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) (*iot1clickprojects.CreatePlacementOutput, error)
	CreatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.CreatePlacementInput) *IoT1ClickProjectsCreatePlacementFuture

	CreateProject(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) (*iot1clickprojects.CreateProjectOutput, error)
	CreateProjectAsync(ctx workflow.Context, input *iot1clickprojects.CreateProjectInput) *IoT1ClickProjectsCreateProjectFuture

	DeletePlacement(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) (*iot1clickprojects.DeletePlacementOutput, error)
	DeletePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DeletePlacementInput) *IoT1ClickProjectsDeletePlacementFuture

	DeleteProject(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) (*iot1clickprojects.DeleteProjectOutput, error)
	DeleteProjectAsync(ctx workflow.Context, input *iot1clickprojects.DeleteProjectInput) *IoT1ClickProjectsDeleteProjectFuture

	DescribePlacement(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) (*iot1clickprojects.DescribePlacementOutput, error)
	DescribePlacementAsync(ctx workflow.Context, input *iot1clickprojects.DescribePlacementInput) *IoT1ClickProjectsDescribePlacementFuture

	DescribeProject(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) (*iot1clickprojects.DescribeProjectOutput, error)
	DescribeProjectAsync(ctx workflow.Context, input *iot1clickprojects.DescribeProjectInput) *IoT1ClickProjectsDescribeProjectFuture

	DisassociateDeviceFromPlacement(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) (*iot1clickprojects.DisassociateDeviceFromPlacementOutput, error)
	DisassociateDeviceFromPlacementAsync(ctx workflow.Context, input *iot1clickprojects.DisassociateDeviceFromPlacementInput) *IoT1ClickProjectsDisassociateDeviceFromPlacementFuture

	GetDevicesInPlacement(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) (*iot1clickprojects.GetDevicesInPlacementOutput, error)
	GetDevicesInPlacementAsync(ctx workflow.Context, input *iot1clickprojects.GetDevicesInPlacementInput) *IoT1ClickProjectsGetDevicesInPlacementFuture

	ListPlacements(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) (*iot1clickprojects.ListPlacementsOutput, error)
	ListPlacementsAsync(ctx workflow.Context, input *iot1clickprojects.ListPlacementsInput) *IoT1ClickProjectsListPlacementsFuture

	ListProjects(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) (*iot1clickprojects.ListProjectsOutput, error)
	ListProjectsAsync(ctx workflow.Context, input *iot1clickprojects.ListProjectsInput) *IoT1ClickProjectsListProjectsFuture

	ListTagsForResource(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) (*iot1clickprojects.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *iot1clickprojects.ListTagsForResourceInput) *IoT1ClickProjectsListTagsForResourceFuture

	TagResource(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) (*iot1clickprojects.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *iot1clickprojects.TagResourceInput) *IoT1ClickProjectsTagResourceFuture

	UntagResource(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) (*iot1clickprojects.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *iot1clickprojects.UntagResourceInput) *IoT1ClickProjectsUntagResourceFuture

	UpdatePlacement(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) (*iot1clickprojects.UpdatePlacementOutput, error)
	UpdatePlacementAsync(ctx workflow.Context, input *iot1clickprojects.UpdatePlacementInput) *IoT1ClickProjectsUpdatePlacementFuture

	UpdateProject(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) (*iot1clickprojects.UpdateProjectOutput, error)
	UpdateProjectAsync(ctx workflow.Context, input *iot1clickprojects.UpdateProjectInput) *IoT1ClickProjectsUpdateProjectFuture
}

func NewClient() Client {
	return &stub{}
}
