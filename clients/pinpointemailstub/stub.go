// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package pinpointemailstub

import (
	"github.com/aws/aws-sdk-go/service/pinpointemail"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type CreateConfigurationSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.CreateConfigurationSetOutput, error) {
	var output pinpointemail.CreateConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateConfigurationSetEventDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.CreateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateDedicatedIpPoolFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateDedicatedIpPoolFuture) Get(ctx workflow.Context) (*pinpointemail.CreateDedicatedIpPoolOutput, error) {
	var output pinpointemail.CreateDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateDeliverabilityTestReportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*pinpointemail.CreateDeliverabilityTestReportOutput, error) {
	var output pinpointemail.CreateDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateEmailIdentityFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.CreateEmailIdentityOutput, error) {
	var output pinpointemail.CreateEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteConfigurationSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteConfigurationSetOutput, error) {
	var output pinpointemail.DeleteConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteConfigurationSetEventDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.DeleteConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteDedicatedIpPoolFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteDedicatedIpPoolFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteDedicatedIpPoolOutput, error) {
	var output pinpointemail.DeleteDedicatedIpPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEmailIdentityFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.DeleteEmailIdentityOutput, error) {
	var output pinpointemail.DeleteEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetAccountFuture) Get(ctx workflow.Context) (*pinpointemail.GetAccountOutput, error) {
	var output pinpointemail.GetAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetBlacklistReportsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetBlacklistReportsFuture) Get(ctx workflow.Context) (*pinpointemail.GetBlacklistReportsOutput, error) {
	var output pinpointemail.GetBlacklistReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetConfigurationSetFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetConfigurationSetFuture) Get(ctx workflow.Context) (*pinpointemail.GetConfigurationSetOutput, error) {
	var output pinpointemail.GetConfigurationSetOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetConfigurationSetEventDestinationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetConfigurationSetEventDestinationsFuture) Get(ctx workflow.Context) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error) {
	var output pinpointemail.GetConfigurationSetEventDestinationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDedicatedIpFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDedicatedIpFuture) Get(ctx workflow.Context) (*pinpointemail.GetDedicatedIpOutput, error) {
	var output pinpointemail.GetDedicatedIpOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDedicatedIpsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDedicatedIpsFuture) Get(ctx workflow.Context) (*pinpointemail.GetDedicatedIpsOutput, error) {
	var output pinpointemail.GetDedicatedIpsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDeliverabilityDashboardOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDeliverabilityDashboardOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error) {
	var output pinpointemail.GetDeliverabilityDashboardOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDeliverabilityTestReportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDeliverabilityTestReportFuture) Get(ctx workflow.Context) (*pinpointemail.GetDeliverabilityTestReportOutput, error) {
	var output pinpointemail.GetDeliverabilityTestReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDomainDeliverabilityCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDomainDeliverabilityCampaignFuture) Get(ctx workflow.Context) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error) {
	var output pinpointemail.GetDomainDeliverabilityCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDomainStatisticsReportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDomainStatisticsReportFuture) Get(ctx workflow.Context) (*pinpointemail.GetDomainStatisticsReportOutput, error) {
	var output pinpointemail.GetDomainStatisticsReportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEmailIdentityFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEmailIdentityFuture) Get(ctx workflow.Context) (*pinpointemail.GetEmailIdentityOutput, error) {
	var output pinpointemail.GetEmailIdentityOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListConfigurationSetsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListConfigurationSetsFuture) Get(ctx workflow.Context) (*pinpointemail.ListConfigurationSetsOutput, error) {
	var output pinpointemail.ListConfigurationSetsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListDedicatedIpPoolsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListDedicatedIpPoolsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDedicatedIpPoolsOutput, error) {
	var output pinpointemail.ListDedicatedIpPoolsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListDeliverabilityTestReportsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListDeliverabilityTestReportsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDeliverabilityTestReportsOutput, error) {
	var output pinpointemail.ListDeliverabilityTestReportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListDomainDeliverabilityCampaignsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListDomainDeliverabilityCampaignsFuture) Get(ctx workflow.Context) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error) {
	var output pinpointemail.ListDomainDeliverabilityCampaignsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListEmailIdentitiesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListEmailIdentitiesFuture) Get(ctx workflow.Context) (*pinpointemail.ListEmailIdentitiesOutput, error) {
	var output pinpointemail.ListEmailIdentitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTagsForResourceFuture) Get(ctx workflow.Context) (*pinpointemail.ListTagsForResourceOutput, error) {
	var output pinpointemail.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutAccountDedicatedIpWarmupAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutAccountDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutAccountSendingAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutAccountSendingAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutAccountSendingAttributesOutput, error) {
	var output pinpointemail.PutAccountSendingAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutConfigurationSetDeliveryOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutConfigurationSetDeliveryOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetDeliveryOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutConfigurationSetReputationOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutConfigurationSetReputationOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetReputationOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutConfigurationSetSendingOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutConfigurationSetSendingOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetSendingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutConfigurationSetTrackingOptionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutConfigurationSetTrackingOptionsFuture) Get(ctx workflow.Context) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetTrackingOptionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutDedicatedIpInPoolFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutDedicatedIpInPoolFuture) Get(ctx workflow.Context) (*pinpointemail.PutDedicatedIpInPoolOutput, error) {
	var output pinpointemail.PutDedicatedIpInPoolOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutDedicatedIpWarmupAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutDedicatedIpWarmupAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutDedicatedIpWarmupAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutDeliverabilityDashboardOptionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutDeliverabilityDashboardOptionFuture) Get(ctx workflow.Context) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error) {
	var output pinpointemail.PutDeliverabilityDashboardOptionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutEmailIdentityDkimAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutEmailIdentityDkimAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityDkimAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutEmailIdentityFeedbackAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutEmailIdentityFeedbackAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityFeedbackAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutEmailIdentityMailFromAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutEmailIdentityMailFromAttributesFuture) Get(ctx workflow.Context) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityMailFromAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SendEmailFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *SendEmailFuture) Get(ctx workflow.Context) (*pinpointemail.SendEmailOutput, error) {
	var output pinpointemail.SendEmailOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type TagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *TagResourceFuture) Get(ctx workflow.Context) (*pinpointemail.TagResourceOutput, error) {
	var output pinpointemail.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UntagResourceFuture) Get(ctx workflow.Context) (*pinpointemail.UntagResourceOutput, error) {
	var output pinpointemail.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateConfigurationSetEventDestinationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateConfigurationSetEventDestinationFuture) Get(ctx workflow.Context) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.UpdateConfigurationSetEventDestinationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateConfigurationSet(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) (*pinpointemail.CreateConfigurationSetOutput, error) {
	var output pinpointemail.CreateConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetInput) *CreateConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateConfigurationSet", input)
	return &CreateConfigurationSetFuture{Future: future}
}

func (a *stub) CreateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.CreateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.CreateConfigurationSetEventDestinationInput) *CreateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateConfigurationSetEventDestination", input)
	return &CreateConfigurationSetEventDestinationFuture{Future: future}
}

func (a *stub) CreateDedicatedIpPool(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) (*pinpointemail.CreateDedicatedIpPoolOutput, error) {
	var output pinpointemail.CreateDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.CreateDedicatedIpPoolInput) *CreateDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateDedicatedIpPool", input)
	return &CreateDedicatedIpPoolFuture{Future: future}
}

func (a *stub) CreateDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) (*pinpointemail.CreateDeliverabilityTestReportOutput, error) {
	var output pinpointemail.CreateDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.CreateDeliverabilityTestReportInput) *CreateDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateDeliverabilityTestReport", input)
	return &CreateDeliverabilityTestReportFuture{Future: future}
}

func (a *stub) CreateEmailIdentity(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) (*pinpointemail.CreateEmailIdentityOutput, error) {
	var output pinpointemail.CreateEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.CreateEmailIdentityInput) *CreateEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-CreateEmailIdentity", input)
	return &CreateEmailIdentityFuture{Future: future}
}

func (a *stub) DeleteConfigurationSet(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) (*pinpointemail.DeleteConfigurationSetOutput, error) {
	var output pinpointemail.DeleteConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetInput) *DeleteConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteConfigurationSet", input)
	return &DeleteConfigurationSetFuture{Future: future}
}

func (a *stub) DeleteConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.DeleteConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.DeleteConfigurationSetEventDestinationInput) *DeleteConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteConfigurationSetEventDestination", input)
	return &DeleteConfigurationSetEventDestinationFuture{Future: future}
}

func (a *stub) DeleteDedicatedIpPool(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) (*pinpointemail.DeleteDedicatedIpPoolOutput, error) {
	var output pinpointemail.DeleteDedicatedIpPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteDedicatedIpPool", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteDedicatedIpPoolAsync(ctx workflow.Context, input *pinpointemail.DeleteDedicatedIpPoolInput) *DeleteDedicatedIpPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteDedicatedIpPool", input)
	return &DeleteDedicatedIpPoolFuture{Future: future}
}

func (a *stub) DeleteEmailIdentity(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) (*pinpointemail.DeleteEmailIdentityOutput, error) {
	var output pinpointemail.DeleteEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.DeleteEmailIdentityInput) *DeleteEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-DeleteEmailIdentity", input)
	return &DeleteEmailIdentityFuture{Future: future}
}

func (a *stub) GetAccount(ctx workflow.Context, input *pinpointemail.GetAccountInput) (*pinpointemail.GetAccountOutput, error) {
	var output pinpointemail.GetAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetAccountAsync(ctx workflow.Context, input *pinpointemail.GetAccountInput) *GetAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetAccount", input)
	return &GetAccountFuture{Future: future}
}

func (a *stub) GetBlacklistReports(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) (*pinpointemail.GetBlacklistReportsOutput, error) {
	var output pinpointemail.GetBlacklistReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetBlacklistReports", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetBlacklistReportsAsync(ctx workflow.Context, input *pinpointemail.GetBlacklistReportsInput) *GetBlacklistReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetBlacklistReports", input)
	return &GetBlacklistReportsFuture{Future: future}
}

func (a *stub) GetConfigurationSet(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) (*pinpointemail.GetConfigurationSetOutput, error) {
	var output pinpointemail.GetConfigurationSetOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetConfigurationSet", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetConfigurationSetAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetInput) *GetConfigurationSetFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetConfigurationSet", input)
	return &GetConfigurationSetFuture{Future: future}
}

func (a *stub) GetConfigurationSetEventDestinations(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error) {
	var output pinpointemail.GetConfigurationSetEventDestinationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetConfigurationSetEventDestinations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetConfigurationSetEventDestinationsAsync(ctx workflow.Context, input *pinpointemail.GetConfigurationSetEventDestinationsInput) *GetConfigurationSetEventDestinationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetConfigurationSetEventDestinations", input)
	return &GetConfigurationSetEventDestinationsFuture{Future: future}
}

func (a *stub) GetDedicatedIp(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) (*pinpointemail.GetDedicatedIpOutput, error) {
	var output pinpointemail.GetDedicatedIpOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDedicatedIp", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDedicatedIpAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpInput) *GetDedicatedIpFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDedicatedIp", input)
	return &GetDedicatedIpFuture{Future: future}
}

func (a *stub) GetDedicatedIps(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) (*pinpointemail.GetDedicatedIpsOutput, error) {
	var output pinpointemail.GetDedicatedIpsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDedicatedIps", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDedicatedIpsAsync(ctx workflow.Context, input *pinpointemail.GetDedicatedIpsInput) *GetDedicatedIpsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDedicatedIps", input)
	return &GetDedicatedIpsFuture{Future: future}
}

func (a *stub) GetDeliverabilityDashboardOptions(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error) {
	var output pinpointemail.GetDeliverabilityDashboardOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDeliverabilityDashboardOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDeliverabilityDashboardOptionsAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityDashboardOptionsInput) *GetDeliverabilityDashboardOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDeliverabilityDashboardOptions", input)
	return &GetDeliverabilityDashboardOptionsFuture{Future: future}
}

func (a *stub) GetDeliverabilityTestReport(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) (*pinpointemail.GetDeliverabilityTestReportOutput, error) {
	var output pinpointemail.GetDeliverabilityTestReportOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDeliverabilityTestReport", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDeliverabilityTestReportAsync(ctx workflow.Context, input *pinpointemail.GetDeliverabilityTestReportInput) *GetDeliverabilityTestReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDeliverabilityTestReport", input)
	return &GetDeliverabilityTestReportFuture{Future: future}
}

func (a *stub) GetDomainDeliverabilityCampaign(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error) {
	var output pinpointemail.GetDomainDeliverabilityCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDomainDeliverabilityCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDomainDeliverabilityCampaignAsync(ctx workflow.Context, input *pinpointemail.GetDomainDeliverabilityCampaignInput) *GetDomainDeliverabilityCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDomainDeliverabilityCampaign", input)
	return &GetDomainDeliverabilityCampaignFuture{Future: future}
}

func (a *stub) GetDomainStatisticsReport(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) (*pinpointemail.GetDomainStatisticsReportOutput, error) {
	var output pinpointemail.GetDomainStatisticsReportOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDomainStatisticsReport", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDomainStatisticsReportAsync(ctx workflow.Context, input *pinpointemail.GetDomainStatisticsReportInput) *GetDomainStatisticsReportFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetDomainStatisticsReport", input)
	return &GetDomainStatisticsReportFuture{Future: future}
}

func (a *stub) GetEmailIdentity(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) (*pinpointemail.GetEmailIdentityOutput, error) {
	var output pinpointemail.GetEmailIdentityOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetEmailIdentity", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEmailIdentityAsync(ctx workflow.Context, input *pinpointemail.GetEmailIdentityInput) *GetEmailIdentityFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-GetEmailIdentity", input)
	return &GetEmailIdentityFuture{Future: future}
}

func (a *stub) ListConfigurationSets(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) (*pinpointemail.ListConfigurationSetsOutput, error) {
	var output pinpointemail.ListConfigurationSetsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListConfigurationSets", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListConfigurationSetsAsync(ctx workflow.Context, input *pinpointemail.ListConfigurationSetsInput) *ListConfigurationSetsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListConfigurationSets", input)
	return &ListConfigurationSetsFuture{Future: future}
}

func (a *stub) ListDedicatedIpPools(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) (*pinpointemail.ListDedicatedIpPoolsOutput, error) {
	var output pinpointemail.ListDedicatedIpPoolsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListDedicatedIpPools", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListDedicatedIpPoolsAsync(ctx workflow.Context, input *pinpointemail.ListDedicatedIpPoolsInput) *ListDedicatedIpPoolsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListDedicatedIpPools", input)
	return &ListDedicatedIpPoolsFuture{Future: future}
}

func (a *stub) ListDeliverabilityTestReports(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) (*pinpointemail.ListDeliverabilityTestReportsOutput, error) {
	var output pinpointemail.ListDeliverabilityTestReportsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListDeliverabilityTestReports", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListDeliverabilityTestReportsAsync(ctx workflow.Context, input *pinpointemail.ListDeliverabilityTestReportsInput) *ListDeliverabilityTestReportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListDeliverabilityTestReports", input)
	return &ListDeliverabilityTestReportsFuture{Future: future}
}

func (a *stub) ListDomainDeliverabilityCampaigns(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error) {
	var output pinpointemail.ListDomainDeliverabilityCampaignsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListDomainDeliverabilityCampaigns", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListDomainDeliverabilityCampaignsAsync(ctx workflow.Context, input *pinpointemail.ListDomainDeliverabilityCampaignsInput) *ListDomainDeliverabilityCampaignsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListDomainDeliverabilityCampaigns", input)
	return &ListDomainDeliverabilityCampaignsFuture{Future: future}
}

func (a *stub) ListEmailIdentities(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) (*pinpointemail.ListEmailIdentitiesOutput, error) {
	var output pinpointemail.ListEmailIdentitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListEmailIdentities", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListEmailIdentitiesAsync(ctx workflow.Context, input *pinpointemail.ListEmailIdentitiesInput) *ListEmailIdentitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListEmailIdentities", input)
	return &ListEmailIdentitiesFuture{Future: future}
}

func (a *stub) ListTagsForResource(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) (*pinpointemail.ListTagsForResourceOutput, error) {
	var output pinpointemail.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTagsForResourceAsync(ctx workflow.Context, input *pinpointemail.ListTagsForResourceInput) *ListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-ListTagsForResource", input)
	return &ListTagsForResourceFuture{Future: future}
}

func (a *stub) PutAccountDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutAccountDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutAccountDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) *PutAccountDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutAccountDedicatedIpWarmupAttributes", input)
	return &PutAccountDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *stub) PutAccountSendingAttributes(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) (*pinpointemail.PutAccountSendingAttributesOutput, error) {
	var output pinpointemail.PutAccountSendingAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutAccountSendingAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutAccountSendingAttributesAsync(ctx workflow.Context, input *pinpointemail.PutAccountSendingAttributesInput) *PutAccountSendingAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutAccountSendingAttributes", input)
	return &PutAccountSendingAttributesFuture{Future: future}
}

func (a *stub) PutConfigurationSetDeliveryOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetDeliveryOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetDeliveryOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutConfigurationSetDeliveryOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetDeliveryOptionsInput) *PutConfigurationSetDeliveryOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetDeliveryOptions", input)
	return &PutConfigurationSetDeliveryOptionsFuture{Future: future}
}

func (a *stub) PutConfigurationSetReputationOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetReputationOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetReputationOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutConfigurationSetReputationOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetReputationOptionsInput) *PutConfigurationSetReputationOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetReputationOptions", input)
	return &PutConfigurationSetReputationOptionsFuture{Future: future}
}

func (a *stub) PutConfigurationSetSendingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetSendingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetSendingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutConfigurationSetSendingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetSendingOptionsInput) *PutConfigurationSetSendingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetSendingOptions", input)
	return &PutConfigurationSetSendingOptionsFuture{Future: future}
}

func (a *stub) PutConfigurationSetTrackingOptions(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error) {
	var output pinpointemail.PutConfigurationSetTrackingOptionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetTrackingOptions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutConfigurationSetTrackingOptionsAsync(ctx workflow.Context, input *pinpointemail.PutConfigurationSetTrackingOptionsInput) *PutConfigurationSetTrackingOptionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutConfigurationSetTrackingOptions", input)
	return &PutConfigurationSetTrackingOptionsFuture{Future: future}
}

func (a *stub) PutDedicatedIpInPool(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) (*pinpointemail.PutDedicatedIpInPoolOutput, error) {
	var output pinpointemail.PutDedicatedIpInPoolOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutDedicatedIpInPool", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutDedicatedIpInPoolAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpInPoolInput) *PutDedicatedIpInPoolFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutDedicatedIpInPool", input)
	return &PutDedicatedIpInPoolFuture{Future: future}
}

func (a *stub) PutDedicatedIpWarmupAttributes(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error) {
	var output pinpointemail.PutDedicatedIpWarmupAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutDedicatedIpWarmupAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutDedicatedIpWarmupAttributesAsync(ctx workflow.Context, input *pinpointemail.PutDedicatedIpWarmupAttributesInput) *PutDedicatedIpWarmupAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutDedicatedIpWarmupAttributes", input)
	return &PutDedicatedIpWarmupAttributesFuture{Future: future}
}

func (a *stub) PutDeliverabilityDashboardOption(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error) {
	var output pinpointemail.PutDeliverabilityDashboardOptionOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutDeliverabilityDashboardOption", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutDeliverabilityDashboardOptionAsync(ctx workflow.Context, input *pinpointemail.PutDeliverabilityDashboardOptionInput) *PutDeliverabilityDashboardOptionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutDeliverabilityDashboardOption", input)
	return &PutDeliverabilityDashboardOptionFuture{Future: future}
}

func (a *stub) PutEmailIdentityDkimAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityDkimAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutEmailIdentityDkimAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutEmailIdentityDkimAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityDkimAttributesInput) *PutEmailIdentityDkimAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutEmailIdentityDkimAttributes", input)
	return &PutEmailIdentityDkimAttributesFuture{Future: future}
}

func (a *stub) PutEmailIdentityFeedbackAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityFeedbackAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutEmailIdentityFeedbackAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutEmailIdentityFeedbackAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityFeedbackAttributesInput) *PutEmailIdentityFeedbackAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutEmailIdentityFeedbackAttributes", input)
	return &PutEmailIdentityFeedbackAttributesFuture{Future: future}
}

func (a *stub) PutEmailIdentityMailFromAttributes(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error) {
	var output pinpointemail.PutEmailIdentityMailFromAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutEmailIdentityMailFromAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutEmailIdentityMailFromAttributesAsync(ctx workflow.Context, input *pinpointemail.PutEmailIdentityMailFromAttributesInput) *PutEmailIdentityMailFromAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-PutEmailIdentityMailFromAttributes", input)
	return &PutEmailIdentityMailFromAttributesFuture{Future: future}
}

func (a *stub) SendEmail(ctx workflow.Context, input *pinpointemail.SendEmailInput) (*pinpointemail.SendEmailOutput, error) {
	var output pinpointemail.SendEmailOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-SendEmail", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) SendEmailAsync(ctx workflow.Context, input *pinpointemail.SendEmailInput) *SendEmailFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-SendEmail", input)
	return &SendEmailFuture{Future: future}
}

func (a *stub) TagResource(ctx workflow.Context, input *pinpointemail.TagResourceInput) (*pinpointemail.TagResourceOutput, error) {
	var output pinpointemail.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) TagResourceAsync(ctx workflow.Context, input *pinpointemail.TagResourceInput) *TagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-TagResource", input)
	return &TagResourceFuture{Future: future}
}

func (a *stub) UntagResource(ctx workflow.Context, input *pinpointemail.UntagResourceInput) (*pinpointemail.UntagResourceOutput, error) {
	var output pinpointemail.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UntagResourceAsync(ctx workflow.Context, input *pinpointemail.UntagResourceInput) *UntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-UntagResource", input)
	return &UntagResourceFuture{Future: future}
}

func (a *stub) UpdateConfigurationSetEventDestination(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error) {
	var output pinpointemail.UpdateConfigurationSetEventDestinationOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpointemail-UpdateConfigurationSetEventDestination", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateConfigurationSetEventDestinationAsync(ctx workflow.Context, input *pinpointemail.UpdateConfigurationSetEventDestinationInput) *UpdateConfigurationSetEventDestinationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpointemail-UpdateConfigurationSetEventDestination", input)
	return &UpdateConfigurationSetEventDestinationFuture{Future: future}
}
