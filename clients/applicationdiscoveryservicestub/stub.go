// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package applicationdiscoveryservicestub

import (
	"github.com/aws/aws-sdk-go/service/applicationdiscoveryservice"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type AssociateConfigurationItemsToApplicationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *AssociateConfigurationItemsToApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	var output applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type BatchDeleteImportDataFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *BatchDeleteImportDataFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	var output applicationdiscoveryservice.BatchDeleteImportDataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateApplicationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	var output applicationdiscoveryservice.CreateApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateTagsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateTagsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	var output applicationdiscoveryservice.CreateTagsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteApplicationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteApplicationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	var output applicationdiscoveryservice.DeleteApplicationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteTagsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteTagsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	var output applicationdiscoveryservice.DeleteTagsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeAgentsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeAgentsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	var output applicationdiscoveryservice.DescribeAgentsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeConfigurationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeContinuousExportsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeContinuousExportsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	var output applicationdiscoveryservice.DescribeContinuousExportsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeExportConfigurationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeExportConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeExportConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeExportTasksFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeExportTasksFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeExportTasksOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeImportTasksFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeImportTasksFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeImportTasksOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeTagsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeTagsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	var output applicationdiscoveryservice.DescribeTagsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisassociateConfigurationItemsFromApplicationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisassociateConfigurationItemsFromApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	var output applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ExportConfigurationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ExportConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ExportConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDiscoverySummaryFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDiscoverySummaryFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	var output applicationdiscoveryservice.GetDiscoverySummaryOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListConfigurationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListConfigurationsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ListConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListServerNeighborsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListServerNeighborsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	var output applicationdiscoveryservice.ListServerNeighborsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type StartContinuousExportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *StartContinuousExportFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StartContinuousExportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type StartDataCollectionByAgentIdsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *StartDataCollectionByAgentIdsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type StartExportTaskFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *StartExportTaskFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	var output applicationdiscoveryservice.StartExportTaskOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type StartImportTaskFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *StartImportTaskFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	var output applicationdiscoveryservice.StartImportTaskOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type StopContinuousExportFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *StopContinuousExportFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StopContinuousExportOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type StopDataCollectionByAgentIdsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *StopDataCollectionByAgentIdsFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateApplicationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateApplicationFuture) Get(ctx workflow.Context) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	var output applicationdiscoveryservice.UpdateApplicationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) AssociateConfigurationItemsToApplication(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {
	var output applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-AssociateConfigurationItemsToApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) AssociateConfigurationItemsToApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) *AssociateConfigurationItemsToApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-AssociateConfigurationItemsToApplication", input)
	return &AssociateConfigurationItemsToApplicationFuture{Future: future}
}

func (a *stub) BatchDeleteImportData(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {
	var output applicationdiscoveryservice.BatchDeleteImportDataOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-BatchDeleteImportData", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchDeleteImportDataAsync(ctx workflow.Context, input *applicationdiscoveryservice.BatchDeleteImportDataInput) *BatchDeleteImportDataFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-BatchDeleteImportData", input)
	return &BatchDeleteImportDataFuture{Future: future}
}

func (a *stub) CreateApplication(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) (*applicationdiscoveryservice.CreateApplicationOutput, error) {
	var output applicationdiscoveryservice.CreateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-CreateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateApplicationInput) *CreateApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-CreateApplication", input)
	return &CreateApplicationFuture{Future: future}
}

func (a *stub) CreateTags(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) (*applicationdiscoveryservice.CreateTagsOutput, error) {
	var output applicationdiscoveryservice.CreateTagsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-CreateTags", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.CreateTagsInput) *CreateTagsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-CreateTags", input)
	return &CreateTagsFuture{Future: future}
}

func (a *stub) DeleteApplications(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {
	var output applicationdiscoveryservice.DeleteApplicationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DeleteApplications", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteApplicationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteApplicationsInput) *DeleteApplicationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DeleteApplications", input)
	return &DeleteApplicationsFuture{Future: future}
}

func (a *stub) DeleteTags(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) (*applicationdiscoveryservice.DeleteTagsOutput, error) {
	var output applicationdiscoveryservice.DeleteTagsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DeleteTags", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DeleteTagsInput) *DeleteTagsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DeleteTags", input)
	return &DeleteTagsFuture{Future: future}
}

func (a *stub) DescribeAgents(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {
	var output applicationdiscoveryservice.DescribeAgentsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeAgents", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeAgentsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeAgentsInput) *DescribeAgentsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeAgents", input)
	return &DescribeAgentsFuture{Future: future}
}

func (a *stub) DescribeConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeConfigurationsInput) *DescribeConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeConfigurations", input)
	return &DescribeConfigurationsFuture{Future: future}
}

func (a *stub) DescribeContinuousExports(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {
	var output applicationdiscoveryservice.DescribeContinuousExportsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeContinuousExports", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeContinuousExportsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeContinuousExportsInput) *DescribeContinuousExportsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeContinuousExports", input)
	return &DescribeContinuousExportsFuture{Future: future}
}

func (a *stub) DescribeExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.DescribeExportConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeExportConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportConfigurationsInput) *DescribeExportConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeExportConfigurations", input)
	return &DescribeExportConfigurationsFuture{Future: future}
}

func (a *stub) DescribeExportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeExportTasksOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeExportTasks", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeExportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeExportTasksInput) *DescribeExportTasksFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeExportTasks", input)
	return &DescribeExportTasksFuture{Future: future}
}

func (a *stub) DescribeImportTasks(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {
	var output applicationdiscoveryservice.DescribeImportTasksOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeImportTasks", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeImportTasksAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeImportTasksInput) *DescribeImportTasksFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeImportTasks", input)
	return &DescribeImportTasksFuture{Future: future}
}

func (a *stub) DescribeTags(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) (*applicationdiscoveryservice.DescribeTagsOutput, error) {
	var output applicationdiscoveryservice.DescribeTagsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeTags", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeTagsAsync(ctx workflow.Context, input *applicationdiscoveryservice.DescribeTagsInput) *DescribeTagsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DescribeTags", input)
	return &DescribeTagsFuture{Future: future}
}

func (a *stub) DisassociateConfigurationItemsFromApplication(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {
	var output applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DisassociateConfigurationItemsFromApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisassociateConfigurationItemsFromApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) *DisassociateConfigurationItemsFromApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-DisassociateConfigurationItemsFromApplication", input)
	return &DisassociateConfigurationItemsFromApplicationFuture{Future: future}
}

func (a *stub) ExportConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ExportConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-ExportConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ExportConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ExportConfigurationsInput) *ExportConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-ExportConfigurations", input)
	return &ExportConfigurationsFuture{Future: future}
}

func (a *stub) GetDiscoverySummary(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {
	var output applicationdiscoveryservice.GetDiscoverySummaryOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-GetDiscoverySummary", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDiscoverySummaryAsync(ctx workflow.Context, input *applicationdiscoveryservice.GetDiscoverySummaryInput) *GetDiscoverySummaryFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-GetDiscoverySummary", input)
	return &GetDiscoverySummaryFuture{Future: future}
}

func (a *stub) ListConfigurations(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {
	var output applicationdiscoveryservice.ListConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-ListConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListConfigurationsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListConfigurationsInput) *ListConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-ListConfigurations", input)
	return &ListConfigurationsFuture{Future: future}
}

func (a *stub) ListServerNeighbors(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {
	var output applicationdiscoveryservice.ListServerNeighborsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-ListServerNeighbors", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListServerNeighborsAsync(ctx workflow.Context, input *applicationdiscoveryservice.ListServerNeighborsInput) *ListServerNeighborsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-ListServerNeighbors", input)
	return &ListServerNeighborsFuture{Future: future}
}

func (a *stub) StartContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StartContinuousExportOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartContinuousExport", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) StartContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartContinuousExportInput) *StartContinuousExportFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartContinuousExport", input)
	return &StartContinuousExportFuture{Future: future}
}

func (a *stub) StartDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartDataCollectionByAgentIds", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) StartDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) *StartDataCollectionByAgentIdsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartDataCollectionByAgentIds", input)
	return &StartDataCollectionByAgentIdsFuture{Future: future}
}

func (a *stub) StartExportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) (*applicationdiscoveryservice.StartExportTaskOutput, error) {
	var output applicationdiscoveryservice.StartExportTaskOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartExportTask", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) StartExportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartExportTaskInput) *StartExportTaskFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartExportTask", input)
	return &StartExportTaskFuture{Future: future}
}

func (a *stub) StartImportTask(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) (*applicationdiscoveryservice.StartImportTaskOutput, error) {
	var output applicationdiscoveryservice.StartImportTaskOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartImportTask", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) StartImportTaskAsync(ctx workflow.Context, input *applicationdiscoveryservice.StartImportTaskInput) *StartImportTaskFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StartImportTask", input)
	return &StartImportTaskFuture{Future: future}
}

func (a *stub) StopContinuousExport(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {
	var output applicationdiscoveryservice.StopContinuousExportOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StopContinuousExport", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) StopContinuousExportAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopContinuousExportInput) *StopContinuousExportFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StopContinuousExport", input)
	return &StopContinuousExportFuture{Future: future}
}

func (a *stub) StopDataCollectionByAgentIds(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {
	var output applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StopDataCollectionByAgentIds", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) StopDataCollectionByAgentIdsAsync(ctx workflow.Context, input *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) *StopDataCollectionByAgentIdsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-StopDataCollectionByAgentIds", input)
	return &StopDataCollectionByAgentIdsFuture{Future: future}
}

func (a *stub) UpdateApplication(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {
	var output applicationdiscoveryservice.UpdateApplicationOutput
	err := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-UpdateApplication", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateApplicationAsync(ctx workflow.Context, input *applicationdiscoveryservice.UpdateApplicationInput) *UpdateApplicationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-applicationdiscoveryservice-UpdateApplication", input)
	return &UpdateApplicationFuture{Future: future}
}
