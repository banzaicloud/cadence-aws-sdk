// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package pinpointstub

import (
	"github.com/aws/aws-sdk-go/service/pinpoint"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type CreateAppFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateAppFuture) Get(ctx workflow.Context) (*pinpoint.CreateAppOutput, error) {
	var output pinpoint.CreateAppOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateCampaignFuture) Get(ctx workflow.Context) (*pinpoint.CreateCampaignOutput, error) {
	var output pinpoint.CreateCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreateEmailTemplateOutput, error) {
	var output pinpoint.CreateEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateExportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateExportJobFuture) Get(ctx workflow.Context) (*pinpoint.CreateExportJobOutput, error) {
	var output pinpoint.CreateExportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateImportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateImportJobFuture) Get(ctx workflow.Context) (*pinpoint.CreateImportJobOutput, error) {
	var output pinpoint.CreateImportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateJourneyFuture) Get(ctx workflow.Context) (*pinpoint.CreateJourneyOutput, error) {
	var output pinpoint.CreateJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreatePushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreatePushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreatePushTemplateOutput, error) {
	var output pinpoint.CreatePushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.CreateRecommenderConfigurationOutput, error) {
	var output pinpoint.CreateRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateSegmentFuture) Get(ctx workflow.Context) (*pinpoint.CreateSegmentOutput, error) {
	var output pinpoint.CreateSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreateSmsTemplateOutput, error) {
	var output pinpoint.CreateSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.CreateVoiceTemplateOutput, error) {
	var output pinpoint.CreateVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteAdmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteAdmChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteAdmChannelOutput, error) {
	var output pinpoint.DeleteAdmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteApnsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteApnsChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsChannelOutput, error) {
	var output pinpoint.DeleteApnsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteApnsSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteApnsSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteApnsVoipChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteApnsVoipChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsVoipChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteApnsVoipSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteApnsVoipSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteAppFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteAppFuture) Get(ctx workflow.Context) (*pinpoint.DeleteAppOutput, error) {
	var output pinpoint.DeleteAppOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteBaiduChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteBaiduChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteBaiduChannelOutput, error) {
	var output pinpoint.DeleteBaiduChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteCampaignFuture) Get(ctx workflow.Context) (*pinpoint.DeleteCampaignOutput, error) {
	var output pinpoint.DeleteCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEmailChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEmailChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEmailChannelOutput, error) {
	var output pinpoint.DeleteEmailChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEmailTemplateOutput, error) {
	var output pinpoint.DeleteEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEndpointFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEndpointFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEndpointOutput, error) {
	var output pinpoint.DeleteEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEventStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEventStreamFuture) Get(ctx workflow.Context) (*pinpoint.DeleteEventStreamOutput, error) {
	var output pinpoint.DeleteEventStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteGcmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteGcmChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteGcmChannelOutput, error) {
	var output pinpoint.DeleteGcmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteJourneyFuture) Get(ctx workflow.Context) (*pinpoint.DeleteJourneyOutput, error) {
	var output pinpoint.DeleteJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeletePushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeletePushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeletePushTemplateOutput, error) {
	var output pinpoint.DeletePushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.DeleteRecommenderConfigurationOutput, error) {
	var output pinpoint.DeleteRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteSegmentFuture) Get(ctx workflow.Context) (*pinpoint.DeleteSegmentOutput, error) {
	var output pinpoint.DeleteSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteSmsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteSmsChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteSmsChannelOutput, error) {
	var output pinpoint.DeleteSmsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeleteSmsTemplateOutput, error) {
	var output pinpoint.DeleteSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteUserEndpointsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteUserEndpointsFuture) Get(ctx workflow.Context) (*pinpoint.DeleteUserEndpointsOutput, error) {
	var output pinpoint.DeleteUserEndpointsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteVoiceChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteVoiceChannelFuture) Get(ctx workflow.Context) (*pinpoint.DeleteVoiceChannelOutput, error) {
	var output pinpoint.DeleteVoiceChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.DeleteVoiceTemplateOutput, error) {
	var output pinpoint.DeleteVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetAdmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetAdmChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetAdmChannelOutput, error) {
	var output pinpoint.GetAdmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetApnsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetApnsChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsChannelOutput, error) {
	var output pinpoint.GetApnsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetApnsSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetApnsSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsSandboxChannelOutput, error) {
	var output pinpoint.GetApnsSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetApnsVoipChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetApnsVoipChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsVoipChannelOutput, error) {
	var output pinpoint.GetApnsVoipChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetApnsVoipSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetApnsVoipSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.GetApnsVoipSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetAppFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetAppFuture) Get(ctx workflow.Context) (*pinpoint.GetAppOutput, error) {
	var output pinpoint.GetAppOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetApplicationDateRangeKpiFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetApplicationDateRangeKpiFuture) Get(ctx workflow.Context) (*pinpoint.GetApplicationDateRangeKpiOutput, error) {
	var output pinpoint.GetApplicationDateRangeKpiOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetApplicationSettingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetApplicationSettingsFuture) Get(ctx workflow.Context) (*pinpoint.GetApplicationSettingsOutput, error) {
	var output pinpoint.GetApplicationSettingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetAppsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetAppsFuture) Get(ctx workflow.Context) (*pinpoint.GetAppsOutput, error) {
	var output pinpoint.GetAppsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetBaiduChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetBaiduChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetBaiduChannelOutput, error) {
	var output pinpoint.GetBaiduChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetCampaignFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignOutput, error) {
	var output pinpoint.GetCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetCampaignActivitiesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetCampaignActivitiesFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignActivitiesOutput, error) {
	var output pinpoint.GetCampaignActivitiesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetCampaignDateRangeKpiFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetCampaignDateRangeKpiFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignDateRangeKpiOutput, error) {
	var output pinpoint.GetCampaignDateRangeKpiOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetCampaignVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetCampaignVersionFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignVersionOutput, error) {
	var output pinpoint.GetCampaignVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetCampaignVersionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetCampaignVersionsFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignVersionsOutput, error) {
	var output pinpoint.GetCampaignVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetCampaignsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetCampaignsFuture) Get(ctx workflow.Context) (*pinpoint.GetCampaignsOutput, error) {
	var output pinpoint.GetCampaignsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetChannelsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetChannelsFuture) Get(ctx workflow.Context) (*pinpoint.GetChannelsOutput, error) {
	var output pinpoint.GetChannelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEmailChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEmailChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetEmailChannelOutput, error) {
	var output pinpoint.GetEmailChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetEmailTemplateOutput, error) {
	var output pinpoint.GetEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEndpointFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEndpointFuture) Get(ctx workflow.Context) (*pinpoint.GetEndpointOutput, error) {
	var output pinpoint.GetEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEventStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEventStreamFuture) Get(ctx workflow.Context) (*pinpoint.GetEventStreamOutput, error) {
	var output pinpoint.GetEventStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetExportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetExportJobFuture) Get(ctx workflow.Context) (*pinpoint.GetExportJobOutput, error) {
	var output pinpoint.GetExportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetExportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetExportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetExportJobsOutput, error) {
	var output pinpoint.GetExportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetGcmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetGcmChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetGcmChannelOutput, error) {
	var output pinpoint.GetGcmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetImportJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetImportJobFuture) Get(ctx workflow.Context) (*pinpoint.GetImportJobOutput, error) {
	var output pinpoint.GetImportJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetImportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetImportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetImportJobsOutput, error) {
	var output pinpoint.GetImportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetJourneyFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyOutput, error) {
	var output pinpoint.GetJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetJourneyDateRangeKpiFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetJourneyDateRangeKpiFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyDateRangeKpiOutput, error) {
	var output pinpoint.GetJourneyDateRangeKpiOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetJourneyExecutionActivityMetricsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetJourneyExecutionActivityMetricsFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyExecutionActivityMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionActivityMetricsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetJourneyExecutionMetricsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetJourneyExecutionMetricsFuture) Get(ctx workflow.Context) (*pinpoint.GetJourneyExecutionMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionMetricsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetPushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetPushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetPushTemplateOutput, error) {
	var output pinpoint.GetPushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.GetRecommenderConfigurationOutput, error) {
	var output pinpoint.GetRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetRecommenderConfigurationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetRecommenderConfigurationsFuture) Get(ctx workflow.Context) (*pinpoint.GetRecommenderConfigurationsOutput, error) {
	var output pinpoint.GetRecommenderConfigurationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSegmentFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentOutput, error) {
	var output pinpoint.GetSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSegmentExportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSegmentExportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentExportJobsOutput, error) {
	var output pinpoint.GetSegmentExportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSegmentImportJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSegmentImportJobsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentImportJobsOutput, error) {
	var output pinpoint.GetSegmentImportJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSegmentVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSegmentVersionFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentVersionOutput, error) {
	var output pinpoint.GetSegmentVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSegmentVersionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSegmentVersionsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentVersionsOutput, error) {
	var output pinpoint.GetSegmentVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSegmentsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSegmentsFuture) Get(ctx workflow.Context) (*pinpoint.GetSegmentsOutput, error) {
	var output pinpoint.GetSegmentsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSmsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSmsChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetSmsChannelOutput, error) {
	var output pinpoint.GetSmsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetSmsTemplateOutput, error) {
	var output pinpoint.GetSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetUserEndpointsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetUserEndpointsFuture) Get(ctx workflow.Context) (*pinpoint.GetUserEndpointsOutput, error) {
	var output pinpoint.GetUserEndpointsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetVoiceChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetVoiceChannelFuture) Get(ctx workflow.Context) (*pinpoint.GetVoiceChannelOutput, error) {
	var output pinpoint.GetVoiceChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.GetVoiceTemplateOutput, error) {
	var output pinpoint.GetVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListJourneysFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListJourneysFuture) Get(ctx workflow.Context) (*pinpoint.ListJourneysOutput, error) {
	var output pinpoint.ListJourneysOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTagsForResourceFuture) Get(ctx workflow.Context) (*pinpoint.ListTagsForResourceOutput, error) {
	var output pinpoint.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTemplateVersionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTemplateVersionsFuture) Get(ctx workflow.Context) (*pinpoint.ListTemplateVersionsOutput, error) {
	var output pinpoint.ListTemplateVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTemplatesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTemplatesFuture) Get(ctx workflow.Context) (*pinpoint.ListTemplatesOutput, error) {
	var output pinpoint.ListTemplatesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PhoneNumberValidateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PhoneNumberValidateFuture) Get(ctx workflow.Context) (*pinpoint.PhoneNumberValidateOutput, error) {
	var output pinpoint.PhoneNumberValidateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutEventStreamFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutEventStreamFuture) Get(ctx workflow.Context) (*pinpoint.PutEventStreamOutput, error) {
	var output pinpoint.PutEventStreamOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutEventsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutEventsFuture) Get(ctx workflow.Context) (*pinpoint.PutEventsOutput, error) {
	var output pinpoint.PutEventsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type RemoveAttributesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *RemoveAttributesFuture) Get(ctx workflow.Context) (*pinpoint.RemoveAttributesOutput, error) {
	var output pinpoint.RemoveAttributesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SendMessagesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *SendMessagesFuture) Get(ctx workflow.Context) (*pinpoint.SendMessagesOutput, error) {
	var output pinpoint.SendMessagesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SendUsersMessagesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *SendUsersMessagesFuture) Get(ctx workflow.Context) (*pinpoint.SendUsersMessagesOutput, error) {
	var output pinpoint.SendUsersMessagesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type TagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *TagResourceFuture) Get(ctx workflow.Context) (*pinpoint.TagResourceOutput, error) {
	var output pinpoint.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UntagResourceFuture) Get(ctx workflow.Context) (*pinpoint.UntagResourceOutput, error) {
	var output pinpoint.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateAdmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateAdmChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateAdmChannelOutput, error) {
	var output pinpoint.UpdateAdmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateApnsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateApnsChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsChannelOutput, error) {
	var output pinpoint.UpdateApnsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateApnsSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateApnsSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateApnsVoipChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateApnsVoipChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsVoipChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateApnsVoipSandboxChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateApnsVoipSandboxChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipSandboxChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateApplicationSettingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateApplicationSettingsFuture) Get(ctx workflow.Context) (*pinpoint.UpdateApplicationSettingsOutput, error) {
	var output pinpoint.UpdateApplicationSettingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateBaiduChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateBaiduChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateBaiduChannelOutput, error) {
	var output pinpoint.UpdateBaiduChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateCampaignFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateCampaignFuture) Get(ctx workflow.Context) (*pinpoint.UpdateCampaignOutput, error) {
	var output pinpoint.UpdateCampaignOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateEmailChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateEmailChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEmailChannelOutput, error) {
	var output pinpoint.UpdateEmailChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateEmailTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateEmailTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEmailTemplateOutput, error) {
	var output pinpoint.UpdateEmailTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateEndpointFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateEndpointFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEndpointOutput, error) {
	var output pinpoint.UpdateEndpointOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateEndpointsBatchFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateEndpointsBatchFuture) Get(ctx workflow.Context) (*pinpoint.UpdateEndpointsBatchOutput, error) {
	var output pinpoint.UpdateEndpointsBatchOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateGcmChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateGcmChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateGcmChannelOutput, error) {
	var output pinpoint.UpdateGcmChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateJourneyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateJourneyFuture) Get(ctx workflow.Context) (*pinpoint.UpdateJourneyOutput, error) {
	var output pinpoint.UpdateJourneyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateJourneyStateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateJourneyStateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateJourneyStateOutput, error) {
	var output pinpoint.UpdateJourneyStateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdatePushTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdatePushTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdatePushTemplateOutput, error) {
	var output pinpoint.UpdatePushTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateRecommenderConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateRecommenderConfigurationFuture) Get(ctx workflow.Context) (*pinpoint.UpdateRecommenderConfigurationOutput, error) {
	var output pinpoint.UpdateRecommenderConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateSegmentFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateSegmentFuture) Get(ctx workflow.Context) (*pinpoint.UpdateSegmentOutput, error) {
	var output pinpoint.UpdateSegmentOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateSmsChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateSmsChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateSmsChannelOutput, error) {
	var output pinpoint.UpdateSmsChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateSmsTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateSmsTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateSmsTemplateOutput, error) {
	var output pinpoint.UpdateSmsTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateTemplateActiveVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateTemplateActiveVersionFuture) Get(ctx workflow.Context) (*pinpoint.UpdateTemplateActiveVersionOutput, error) {
	var output pinpoint.UpdateTemplateActiveVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateVoiceChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateVoiceChannelFuture) Get(ctx workflow.Context) (*pinpoint.UpdateVoiceChannelOutput, error) {
	var output pinpoint.UpdateVoiceChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateVoiceTemplateFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateVoiceTemplateFuture) Get(ctx workflow.Context) (*pinpoint.UpdateVoiceTemplateOutput, error) {
	var output pinpoint.UpdateVoiceTemplateOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateApp(ctx workflow.Context, input *pinpoint.CreateAppInput) (*pinpoint.CreateAppOutput, error) {
	var output pinpoint.CreateAppOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateApp", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateAppAsync(ctx workflow.Context, input *pinpoint.CreateAppInput) *CreateAppFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateApp", input)
	return &CreateAppFuture{Future: future}
}

func (a *stub) CreateCampaign(ctx workflow.Context, input *pinpoint.CreateCampaignInput) (*pinpoint.CreateCampaignOutput, error) {
	var output pinpoint.CreateCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateCampaignAsync(ctx workflow.Context, input *pinpoint.CreateCampaignInput) *CreateCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateCampaign", input)
	return &CreateCampaignFuture{Future: future}
}

func (a *stub) CreateEmailTemplate(ctx workflow.Context, input *pinpoint.CreateEmailTemplateInput) (*pinpoint.CreateEmailTemplateOutput, error) {
	var output pinpoint.CreateEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateEmailTemplateAsync(ctx workflow.Context, input *pinpoint.CreateEmailTemplateInput) *CreateEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateEmailTemplate", input)
	return &CreateEmailTemplateFuture{Future: future}
}

func (a *stub) CreateExportJob(ctx workflow.Context, input *pinpoint.CreateExportJobInput) (*pinpoint.CreateExportJobOutput, error) {
	var output pinpoint.CreateExportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateExportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateExportJobAsync(ctx workflow.Context, input *pinpoint.CreateExportJobInput) *CreateExportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateExportJob", input)
	return &CreateExportJobFuture{Future: future}
}

func (a *stub) CreateImportJob(ctx workflow.Context, input *pinpoint.CreateImportJobInput) (*pinpoint.CreateImportJobOutput, error) {
	var output pinpoint.CreateImportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateImportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateImportJobAsync(ctx workflow.Context, input *pinpoint.CreateImportJobInput) *CreateImportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateImportJob", input)
	return &CreateImportJobFuture{Future: future}
}

func (a *stub) CreateJourney(ctx workflow.Context, input *pinpoint.CreateJourneyInput) (*pinpoint.CreateJourneyOutput, error) {
	var output pinpoint.CreateJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateJourneyAsync(ctx workflow.Context, input *pinpoint.CreateJourneyInput) *CreateJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateJourney", input)
	return &CreateJourneyFuture{Future: future}
}

func (a *stub) CreatePushTemplate(ctx workflow.Context, input *pinpoint.CreatePushTemplateInput) (*pinpoint.CreatePushTemplateOutput, error) {
	var output pinpoint.CreatePushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreatePushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreatePushTemplateAsync(ctx workflow.Context, input *pinpoint.CreatePushTemplateInput) *CreatePushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreatePushTemplate", input)
	return &CreatePushTemplateFuture{Future: future}
}

func (a *stub) CreateRecommenderConfiguration(ctx workflow.Context, input *pinpoint.CreateRecommenderConfigurationInput) (*pinpoint.CreateRecommenderConfigurationOutput, error) {
	var output pinpoint.CreateRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.CreateRecommenderConfigurationInput) *CreateRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateRecommenderConfiguration", input)
	return &CreateRecommenderConfigurationFuture{Future: future}
}

func (a *stub) CreateSegment(ctx workflow.Context, input *pinpoint.CreateSegmentInput) (*pinpoint.CreateSegmentOutput, error) {
	var output pinpoint.CreateSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateSegmentAsync(ctx workflow.Context, input *pinpoint.CreateSegmentInput) *CreateSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateSegment", input)
	return &CreateSegmentFuture{Future: future}
}

func (a *stub) CreateSmsTemplate(ctx workflow.Context, input *pinpoint.CreateSmsTemplateInput) (*pinpoint.CreateSmsTemplateOutput, error) {
	var output pinpoint.CreateSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateSmsTemplateAsync(ctx workflow.Context, input *pinpoint.CreateSmsTemplateInput) *CreateSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateSmsTemplate", input)
	return &CreateSmsTemplateFuture{Future: future}
}

func (a *stub) CreateVoiceTemplate(ctx workflow.Context, input *pinpoint.CreateVoiceTemplateInput) (*pinpoint.CreateVoiceTemplateOutput, error) {
	var output pinpoint.CreateVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.CreateVoiceTemplateInput) *CreateVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-CreateVoiceTemplate", input)
	return &CreateVoiceTemplateFuture{Future: future}
}

func (a *stub) DeleteAdmChannel(ctx workflow.Context, input *pinpoint.DeleteAdmChannelInput) (*pinpoint.DeleteAdmChannelOutput, error) {
	var output pinpoint.DeleteAdmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteAdmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteAdmChannelAsync(ctx workflow.Context, input *pinpoint.DeleteAdmChannelInput) *DeleteAdmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteAdmChannel", input)
	return &DeleteAdmChannelFuture{Future: future}
}

func (a *stub) DeleteApnsChannel(ctx workflow.Context, input *pinpoint.DeleteApnsChannelInput) (*pinpoint.DeleteApnsChannelOutput, error) {
	var output pinpoint.DeleteApnsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteApnsChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsChannelInput) *DeleteApnsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsChannel", input)
	return &DeleteApnsChannelFuture{Future: future}
}

func (a *stub) DeleteApnsSandboxChannel(ctx workflow.Context, input *pinpoint.DeleteApnsSandboxChannelInput) (*pinpoint.DeleteApnsSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsSandboxChannelInput) *DeleteApnsSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsSandboxChannel", input)
	return &DeleteApnsSandboxChannelFuture{Future: future}
}

func (a *stub) DeleteApnsVoipChannel(ctx workflow.Context, input *pinpoint.DeleteApnsVoipChannelInput) (*pinpoint.DeleteApnsVoipChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsVoipChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsVoipChannelInput) *DeleteApnsVoipChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsVoipChannel", input)
	return &DeleteApnsVoipChannelFuture{Future: future}
}

func (a *stub) DeleteApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.DeleteApnsVoipSandboxChannelInput) (*pinpoint.DeleteApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.DeleteApnsVoipSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsVoipSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.DeleteApnsVoipSandboxChannelInput) *DeleteApnsVoipSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApnsVoipSandboxChannel", input)
	return &DeleteApnsVoipSandboxChannelFuture{Future: future}
}

func (a *stub) DeleteApp(ctx workflow.Context, input *pinpoint.DeleteAppInput) (*pinpoint.DeleteAppOutput, error) {
	var output pinpoint.DeleteAppOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApp", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteAppAsync(ctx workflow.Context, input *pinpoint.DeleteAppInput) *DeleteAppFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteApp", input)
	return &DeleteAppFuture{Future: future}
}

func (a *stub) DeleteBaiduChannel(ctx workflow.Context, input *pinpoint.DeleteBaiduChannelInput) (*pinpoint.DeleteBaiduChannelOutput, error) {
	var output pinpoint.DeleteBaiduChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteBaiduChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteBaiduChannelAsync(ctx workflow.Context, input *pinpoint.DeleteBaiduChannelInput) *DeleteBaiduChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteBaiduChannel", input)
	return &DeleteBaiduChannelFuture{Future: future}
}

func (a *stub) DeleteCampaign(ctx workflow.Context, input *pinpoint.DeleteCampaignInput) (*pinpoint.DeleteCampaignOutput, error) {
	var output pinpoint.DeleteCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteCampaignAsync(ctx workflow.Context, input *pinpoint.DeleteCampaignInput) *DeleteCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteCampaign", input)
	return &DeleteCampaignFuture{Future: future}
}

func (a *stub) DeleteEmailChannel(ctx workflow.Context, input *pinpoint.DeleteEmailChannelInput) (*pinpoint.DeleteEmailChannelOutput, error) {
	var output pinpoint.DeleteEmailChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEmailChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEmailChannelAsync(ctx workflow.Context, input *pinpoint.DeleteEmailChannelInput) *DeleteEmailChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEmailChannel", input)
	return &DeleteEmailChannelFuture{Future: future}
}

func (a *stub) DeleteEmailTemplate(ctx workflow.Context, input *pinpoint.DeleteEmailTemplateInput) (*pinpoint.DeleteEmailTemplateOutput, error) {
	var output pinpoint.DeleteEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEmailTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteEmailTemplateInput) *DeleteEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEmailTemplate", input)
	return &DeleteEmailTemplateFuture{Future: future}
}

func (a *stub) DeleteEndpoint(ctx workflow.Context, input *pinpoint.DeleteEndpointInput) (*pinpoint.DeleteEndpointOutput, error) {
	var output pinpoint.DeleteEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEndpointAsync(ctx workflow.Context, input *pinpoint.DeleteEndpointInput) *DeleteEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEndpoint", input)
	return &DeleteEndpointFuture{Future: future}
}

func (a *stub) DeleteEventStream(ctx workflow.Context, input *pinpoint.DeleteEventStreamInput) (*pinpoint.DeleteEventStreamOutput, error) {
	var output pinpoint.DeleteEventStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEventStream", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEventStreamAsync(ctx workflow.Context, input *pinpoint.DeleteEventStreamInput) *DeleteEventStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteEventStream", input)
	return &DeleteEventStreamFuture{Future: future}
}

func (a *stub) DeleteGcmChannel(ctx workflow.Context, input *pinpoint.DeleteGcmChannelInput) (*pinpoint.DeleteGcmChannelOutput, error) {
	var output pinpoint.DeleteGcmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteGcmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteGcmChannelAsync(ctx workflow.Context, input *pinpoint.DeleteGcmChannelInput) *DeleteGcmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteGcmChannel", input)
	return &DeleteGcmChannelFuture{Future: future}
}

func (a *stub) DeleteJourney(ctx workflow.Context, input *pinpoint.DeleteJourneyInput) (*pinpoint.DeleteJourneyOutput, error) {
	var output pinpoint.DeleteJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteJourneyAsync(ctx workflow.Context, input *pinpoint.DeleteJourneyInput) *DeleteJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteJourney", input)
	return &DeleteJourneyFuture{Future: future}
}

func (a *stub) DeletePushTemplate(ctx workflow.Context, input *pinpoint.DeletePushTemplateInput) (*pinpoint.DeletePushTemplateOutput, error) {
	var output pinpoint.DeletePushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeletePushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeletePushTemplateAsync(ctx workflow.Context, input *pinpoint.DeletePushTemplateInput) *DeletePushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeletePushTemplate", input)
	return &DeletePushTemplateFuture{Future: future}
}

func (a *stub) DeleteRecommenderConfiguration(ctx workflow.Context, input *pinpoint.DeleteRecommenderConfigurationInput) (*pinpoint.DeleteRecommenderConfigurationOutput, error) {
	var output pinpoint.DeleteRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.DeleteRecommenderConfigurationInput) *DeleteRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteRecommenderConfiguration", input)
	return &DeleteRecommenderConfigurationFuture{Future: future}
}

func (a *stub) DeleteSegment(ctx workflow.Context, input *pinpoint.DeleteSegmentInput) (*pinpoint.DeleteSegmentOutput, error) {
	var output pinpoint.DeleteSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteSegmentAsync(ctx workflow.Context, input *pinpoint.DeleteSegmentInput) *DeleteSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteSegment", input)
	return &DeleteSegmentFuture{Future: future}
}

func (a *stub) DeleteSmsChannel(ctx workflow.Context, input *pinpoint.DeleteSmsChannelInput) (*pinpoint.DeleteSmsChannelOutput, error) {
	var output pinpoint.DeleteSmsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteSmsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteSmsChannelAsync(ctx workflow.Context, input *pinpoint.DeleteSmsChannelInput) *DeleteSmsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteSmsChannel", input)
	return &DeleteSmsChannelFuture{Future: future}
}

func (a *stub) DeleteSmsTemplate(ctx workflow.Context, input *pinpoint.DeleteSmsTemplateInput) (*pinpoint.DeleteSmsTemplateOutput, error) {
	var output pinpoint.DeleteSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteSmsTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteSmsTemplateInput) *DeleteSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteSmsTemplate", input)
	return &DeleteSmsTemplateFuture{Future: future}
}

func (a *stub) DeleteUserEndpoints(ctx workflow.Context, input *pinpoint.DeleteUserEndpointsInput) (*pinpoint.DeleteUserEndpointsOutput, error) {
	var output pinpoint.DeleteUserEndpointsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteUserEndpoints", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteUserEndpointsAsync(ctx workflow.Context, input *pinpoint.DeleteUserEndpointsInput) *DeleteUserEndpointsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteUserEndpoints", input)
	return &DeleteUserEndpointsFuture{Future: future}
}

func (a *stub) DeleteVoiceChannel(ctx workflow.Context, input *pinpoint.DeleteVoiceChannelInput) (*pinpoint.DeleteVoiceChannelOutput, error) {
	var output pinpoint.DeleteVoiceChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteVoiceChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteVoiceChannelAsync(ctx workflow.Context, input *pinpoint.DeleteVoiceChannelInput) *DeleteVoiceChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteVoiceChannel", input)
	return &DeleteVoiceChannelFuture{Future: future}
}

func (a *stub) DeleteVoiceTemplate(ctx workflow.Context, input *pinpoint.DeleteVoiceTemplateInput) (*pinpoint.DeleteVoiceTemplateOutput, error) {
	var output pinpoint.DeleteVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.DeleteVoiceTemplateInput) *DeleteVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-DeleteVoiceTemplate", input)
	return &DeleteVoiceTemplateFuture{Future: future}
}

func (a *stub) GetAdmChannel(ctx workflow.Context, input *pinpoint.GetAdmChannelInput) (*pinpoint.GetAdmChannelOutput, error) {
	var output pinpoint.GetAdmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetAdmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetAdmChannelAsync(ctx workflow.Context, input *pinpoint.GetAdmChannelInput) *GetAdmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetAdmChannel", input)
	return &GetAdmChannelFuture{Future: future}
}

func (a *stub) GetApnsChannel(ctx workflow.Context, input *pinpoint.GetApnsChannelInput) (*pinpoint.GetApnsChannelOutput, error) {
	var output pinpoint.GetApnsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetApnsChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsChannelInput) *GetApnsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsChannel", input)
	return &GetApnsChannelFuture{Future: future}
}

func (a *stub) GetApnsSandboxChannel(ctx workflow.Context, input *pinpoint.GetApnsSandboxChannelInput) (*pinpoint.GetApnsSandboxChannelOutput, error) {
	var output pinpoint.GetApnsSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsSandboxChannelInput) *GetApnsSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsSandboxChannel", input)
	return &GetApnsSandboxChannelFuture{Future: future}
}

func (a *stub) GetApnsVoipChannel(ctx workflow.Context, input *pinpoint.GetApnsVoipChannelInput) (*pinpoint.GetApnsVoipChannelOutput, error) {
	var output pinpoint.GetApnsVoipChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsVoipChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsVoipChannelInput) *GetApnsVoipChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsVoipChannel", input)
	return &GetApnsVoipChannelFuture{Future: future}
}

func (a *stub) GetApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.GetApnsVoipSandboxChannelInput) (*pinpoint.GetApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.GetApnsVoipSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsVoipSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.GetApnsVoipSandboxChannelInput) *GetApnsVoipSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApnsVoipSandboxChannel", input)
	return &GetApnsVoipSandboxChannelFuture{Future: future}
}

func (a *stub) GetApp(ctx workflow.Context, input *pinpoint.GetAppInput) (*pinpoint.GetAppOutput, error) {
	var output pinpoint.GetAppOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApp", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetAppAsync(ctx workflow.Context, input *pinpoint.GetAppInput) *GetAppFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApp", input)
	return &GetAppFuture{Future: future}
}

func (a *stub) GetApplicationDateRangeKpi(ctx workflow.Context, input *pinpoint.GetApplicationDateRangeKpiInput) (*pinpoint.GetApplicationDateRangeKpiOutput, error) {
	var output pinpoint.GetApplicationDateRangeKpiOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApplicationDateRangeKpi", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetApplicationDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetApplicationDateRangeKpiInput) *GetApplicationDateRangeKpiFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApplicationDateRangeKpi", input)
	return &GetApplicationDateRangeKpiFuture{Future: future}
}

func (a *stub) GetApplicationSettings(ctx workflow.Context, input *pinpoint.GetApplicationSettingsInput) (*pinpoint.GetApplicationSettingsOutput, error) {
	var output pinpoint.GetApplicationSettingsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApplicationSettings", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetApplicationSettingsAsync(ctx workflow.Context, input *pinpoint.GetApplicationSettingsInput) *GetApplicationSettingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApplicationSettings", input)
	return &GetApplicationSettingsFuture{Future: future}
}

func (a *stub) GetApps(ctx workflow.Context, input *pinpoint.GetAppsInput) (*pinpoint.GetAppsOutput, error) {
	var output pinpoint.GetAppsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApps", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetAppsAsync(ctx workflow.Context, input *pinpoint.GetAppsInput) *GetAppsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetApps", input)
	return &GetAppsFuture{Future: future}
}

func (a *stub) GetBaiduChannel(ctx workflow.Context, input *pinpoint.GetBaiduChannelInput) (*pinpoint.GetBaiduChannelOutput, error) {
	var output pinpoint.GetBaiduChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetBaiduChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetBaiduChannelAsync(ctx workflow.Context, input *pinpoint.GetBaiduChannelInput) *GetBaiduChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetBaiduChannel", input)
	return &GetBaiduChannelFuture{Future: future}
}

func (a *stub) GetCampaign(ctx workflow.Context, input *pinpoint.GetCampaignInput) (*pinpoint.GetCampaignOutput, error) {
	var output pinpoint.GetCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetCampaignAsync(ctx workflow.Context, input *pinpoint.GetCampaignInput) *GetCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaign", input)
	return &GetCampaignFuture{Future: future}
}

func (a *stub) GetCampaignActivities(ctx workflow.Context, input *pinpoint.GetCampaignActivitiesInput) (*pinpoint.GetCampaignActivitiesOutput, error) {
	var output pinpoint.GetCampaignActivitiesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignActivities", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetCampaignActivitiesAsync(ctx workflow.Context, input *pinpoint.GetCampaignActivitiesInput) *GetCampaignActivitiesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignActivities", input)
	return &GetCampaignActivitiesFuture{Future: future}
}

func (a *stub) GetCampaignDateRangeKpi(ctx workflow.Context, input *pinpoint.GetCampaignDateRangeKpiInput) (*pinpoint.GetCampaignDateRangeKpiOutput, error) {
	var output pinpoint.GetCampaignDateRangeKpiOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignDateRangeKpi", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetCampaignDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetCampaignDateRangeKpiInput) *GetCampaignDateRangeKpiFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignDateRangeKpi", input)
	return &GetCampaignDateRangeKpiFuture{Future: future}
}

func (a *stub) GetCampaignVersion(ctx workflow.Context, input *pinpoint.GetCampaignVersionInput) (*pinpoint.GetCampaignVersionOutput, error) {
	var output pinpoint.GetCampaignVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetCampaignVersionAsync(ctx workflow.Context, input *pinpoint.GetCampaignVersionInput) *GetCampaignVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignVersion", input)
	return &GetCampaignVersionFuture{Future: future}
}

func (a *stub) GetCampaignVersions(ctx workflow.Context, input *pinpoint.GetCampaignVersionsInput) (*pinpoint.GetCampaignVersionsOutput, error) {
	var output pinpoint.GetCampaignVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetCampaignVersionsAsync(ctx workflow.Context, input *pinpoint.GetCampaignVersionsInput) *GetCampaignVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaignVersions", input)
	return &GetCampaignVersionsFuture{Future: future}
}

func (a *stub) GetCampaigns(ctx workflow.Context, input *pinpoint.GetCampaignsInput) (*pinpoint.GetCampaignsOutput, error) {
	var output pinpoint.GetCampaignsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaigns", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetCampaignsAsync(ctx workflow.Context, input *pinpoint.GetCampaignsInput) *GetCampaignsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetCampaigns", input)
	return &GetCampaignsFuture{Future: future}
}

func (a *stub) GetChannels(ctx workflow.Context, input *pinpoint.GetChannelsInput) (*pinpoint.GetChannelsOutput, error) {
	var output pinpoint.GetChannelsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetChannels", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetChannelsAsync(ctx workflow.Context, input *pinpoint.GetChannelsInput) *GetChannelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetChannels", input)
	return &GetChannelsFuture{Future: future}
}

func (a *stub) GetEmailChannel(ctx workflow.Context, input *pinpoint.GetEmailChannelInput) (*pinpoint.GetEmailChannelOutput, error) {
	var output pinpoint.GetEmailChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEmailChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEmailChannelAsync(ctx workflow.Context, input *pinpoint.GetEmailChannelInput) *GetEmailChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEmailChannel", input)
	return &GetEmailChannelFuture{Future: future}
}

func (a *stub) GetEmailTemplate(ctx workflow.Context, input *pinpoint.GetEmailTemplateInput) (*pinpoint.GetEmailTemplateOutput, error) {
	var output pinpoint.GetEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEmailTemplateAsync(ctx workflow.Context, input *pinpoint.GetEmailTemplateInput) *GetEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEmailTemplate", input)
	return &GetEmailTemplateFuture{Future: future}
}

func (a *stub) GetEndpoint(ctx workflow.Context, input *pinpoint.GetEndpointInput) (*pinpoint.GetEndpointOutput, error) {
	var output pinpoint.GetEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEndpointAsync(ctx workflow.Context, input *pinpoint.GetEndpointInput) *GetEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEndpoint", input)
	return &GetEndpointFuture{Future: future}
}

func (a *stub) GetEventStream(ctx workflow.Context, input *pinpoint.GetEventStreamInput) (*pinpoint.GetEventStreamOutput, error) {
	var output pinpoint.GetEventStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEventStream", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEventStreamAsync(ctx workflow.Context, input *pinpoint.GetEventStreamInput) *GetEventStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetEventStream", input)
	return &GetEventStreamFuture{Future: future}
}

func (a *stub) GetExportJob(ctx workflow.Context, input *pinpoint.GetExportJobInput) (*pinpoint.GetExportJobOutput, error) {
	var output pinpoint.GetExportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetExportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetExportJobAsync(ctx workflow.Context, input *pinpoint.GetExportJobInput) *GetExportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetExportJob", input)
	return &GetExportJobFuture{Future: future}
}

func (a *stub) GetExportJobs(ctx workflow.Context, input *pinpoint.GetExportJobsInput) (*pinpoint.GetExportJobsOutput, error) {
	var output pinpoint.GetExportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetExportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetExportJobsAsync(ctx workflow.Context, input *pinpoint.GetExportJobsInput) *GetExportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetExportJobs", input)
	return &GetExportJobsFuture{Future: future}
}

func (a *stub) GetGcmChannel(ctx workflow.Context, input *pinpoint.GetGcmChannelInput) (*pinpoint.GetGcmChannelOutput, error) {
	var output pinpoint.GetGcmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetGcmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetGcmChannelAsync(ctx workflow.Context, input *pinpoint.GetGcmChannelInput) *GetGcmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetGcmChannel", input)
	return &GetGcmChannelFuture{Future: future}
}

func (a *stub) GetImportJob(ctx workflow.Context, input *pinpoint.GetImportJobInput) (*pinpoint.GetImportJobOutput, error) {
	var output pinpoint.GetImportJobOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetImportJob", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetImportJobAsync(ctx workflow.Context, input *pinpoint.GetImportJobInput) *GetImportJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetImportJob", input)
	return &GetImportJobFuture{Future: future}
}

func (a *stub) GetImportJobs(ctx workflow.Context, input *pinpoint.GetImportJobsInput) (*pinpoint.GetImportJobsOutput, error) {
	var output pinpoint.GetImportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetImportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetImportJobsAsync(ctx workflow.Context, input *pinpoint.GetImportJobsInput) *GetImportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetImportJobs", input)
	return &GetImportJobsFuture{Future: future}
}

func (a *stub) GetJourney(ctx workflow.Context, input *pinpoint.GetJourneyInput) (*pinpoint.GetJourneyOutput, error) {
	var output pinpoint.GetJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetJourneyAsync(ctx workflow.Context, input *pinpoint.GetJourneyInput) *GetJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourney", input)
	return &GetJourneyFuture{Future: future}
}

func (a *stub) GetJourneyDateRangeKpi(ctx workflow.Context, input *pinpoint.GetJourneyDateRangeKpiInput) (*pinpoint.GetJourneyDateRangeKpiOutput, error) {
	var output pinpoint.GetJourneyDateRangeKpiOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourneyDateRangeKpi", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetJourneyDateRangeKpiAsync(ctx workflow.Context, input *pinpoint.GetJourneyDateRangeKpiInput) *GetJourneyDateRangeKpiFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourneyDateRangeKpi", input)
	return &GetJourneyDateRangeKpiFuture{Future: future}
}

func (a *stub) GetJourneyExecutionActivityMetrics(ctx workflow.Context, input *pinpoint.GetJourneyExecutionActivityMetricsInput) (*pinpoint.GetJourneyExecutionActivityMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionActivityMetricsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourneyExecutionActivityMetrics", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetJourneyExecutionActivityMetricsAsync(ctx workflow.Context, input *pinpoint.GetJourneyExecutionActivityMetricsInput) *GetJourneyExecutionActivityMetricsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourneyExecutionActivityMetrics", input)
	return &GetJourneyExecutionActivityMetricsFuture{Future: future}
}

func (a *stub) GetJourneyExecutionMetrics(ctx workflow.Context, input *pinpoint.GetJourneyExecutionMetricsInput) (*pinpoint.GetJourneyExecutionMetricsOutput, error) {
	var output pinpoint.GetJourneyExecutionMetricsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourneyExecutionMetrics", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetJourneyExecutionMetricsAsync(ctx workflow.Context, input *pinpoint.GetJourneyExecutionMetricsInput) *GetJourneyExecutionMetricsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetJourneyExecutionMetrics", input)
	return &GetJourneyExecutionMetricsFuture{Future: future}
}

func (a *stub) GetPushTemplate(ctx workflow.Context, input *pinpoint.GetPushTemplateInput) (*pinpoint.GetPushTemplateOutput, error) {
	var output pinpoint.GetPushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetPushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetPushTemplateAsync(ctx workflow.Context, input *pinpoint.GetPushTemplateInput) *GetPushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetPushTemplate", input)
	return &GetPushTemplateFuture{Future: future}
}

func (a *stub) GetRecommenderConfiguration(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationInput) (*pinpoint.GetRecommenderConfigurationOutput, error) {
	var output pinpoint.GetRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationInput) *GetRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetRecommenderConfiguration", input)
	return &GetRecommenderConfigurationFuture{Future: future}
}

func (a *stub) GetRecommenderConfigurations(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationsInput) (*pinpoint.GetRecommenderConfigurationsOutput, error) {
	var output pinpoint.GetRecommenderConfigurationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetRecommenderConfigurations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetRecommenderConfigurationsAsync(ctx workflow.Context, input *pinpoint.GetRecommenderConfigurationsInput) *GetRecommenderConfigurationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetRecommenderConfigurations", input)
	return &GetRecommenderConfigurationsFuture{Future: future}
}

func (a *stub) GetSegment(ctx workflow.Context, input *pinpoint.GetSegmentInput) (*pinpoint.GetSegmentOutput, error) {
	var output pinpoint.GetSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSegmentAsync(ctx workflow.Context, input *pinpoint.GetSegmentInput) *GetSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegment", input)
	return &GetSegmentFuture{Future: future}
}

func (a *stub) GetSegmentExportJobs(ctx workflow.Context, input *pinpoint.GetSegmentExportJobsInput) (*pinpoint.GetSegmentExportJobsOutput, error) {
	var output pinpoint.GetSegmentExportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentExportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSegmentExportJobsAsync(ctx workflow.Context, input *pinpoint.GetSegmentExportJobsInput) *GetSegmentExportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentExportJobs", input)
	return &GetSegmentExportJobsFuture{Future: future}
}

func (a *stub) GetSegmentImportJobs(ctx workflow.Context, input *pinpoint.GetSegmentImportJobsInput) (*pinpoint.GetSegmentImportJobsOutput, error) {
	var output pinpoint.GetSegmentImportJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentImportJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSegmentImportJobsAsync(ctx workflow.Context, input *pinpoint.GetSegmentImportJobsInput) *GetSegmentImportJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentImportJobs", input)
	return &GetSegmentImportJobsFuture{Future: future}
}

func (a *stub) GetSegmentVersion(ctx workflow.Context, input *pinpoint.GetSegmentVersionInput) (*pinpoint.GetSegmentVersionOutput, error) {
	var output pinpoint.GetSegmentVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSegmentVersionAsync(ctx workflow.Context, input *pinpoint.GetSegmentVersionInput) *GetSegmentVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentVersion", input)
	return &GetSegmentVersionFuture{Future: future}
}

func (a *stub) GetSegmentVersions(ctx workflow.Context, input *pinpoint.GetSegmentVersionsInput) (*pinpoint.GetSegmentVersionsOutput, error) {
	var output pinpoint.GetSegmentVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSegmentVersionsAsync(ctx workflow.Context, input *pinpoint.GetSegmentVersionsInput) *GetSegmentVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegmentVersions", input)
	return &GetSegmentVersionsFuture{Future: future}
}

func (a *stub) GetSegments(ctx workflow.Context, input *pinpoint.GetSegmentsInput) (*pinpoint.GetSegmentsOutput, error) {
	var output pinpoint.GetSegmentsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegments", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSegmentsAsync(ctx workflow.Context, input *pinpoint.GetSegmentsInput) *GetSegmentsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSegments", input)
	return &GetSegmentsFuture{Future: future}
}

func (a *stub) GetSmsChannel(ctx workflow.Context, input *pinpoint.GetSmsChannelInput) (*pinpoint.GetSmsChannelOutput, error) {
	var output pinpoint.GetSmsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSmsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSmsChannelAsync(ctx workflow.Context, input *pinpoint.GetSmsChannelInput) *GetSmsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSmsChannel", input)
	return &GetSmsChannelFuture{Future: future}
}

func (a *stub) GetSmsTemplate(ctx workflow.Context, input *pinpoint.GetSmsTemplateInput) (*pinpoint.GetSmsTemplateOutput, error) {
	var output pinpoint.GetSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetSmsTemplateAsync(ctx workflow.Context, input *pinpoint.GetSmsTemplateInput) *GetSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetSmsTemplate", input)
	return &GetSmsTemplateFuture{Future: future}
}

func (a *stub) GetUserEndpoints(ctx workflow.Context, input *pinpoint.GetUserEndpointsInput) (*pinpoint.GetUserEndpointsOutput, error) {
	var output pinpoint.GetUserEndpointsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetUserEndpoints", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetUserEndpointsAsync(ctx workflow.Context, input *pinpoint.GetUserEndpointsInput) *GetUserEndpointsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetUserEndpoints", input)
	return &GetUserEndpointsFuture{Future: future}
}

func (a *stub) GetVoiceChannel(ctx workflow.Context, input *pinpoint.GetVoiceChannelInput) (*pinpoint.GetVoiceChannelOutput, error) {
	var output pinpoint.GetVoiceChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetVoiceChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetVoiceChannelAsync(ctx workflow.Context, input *pinpoint.GetVoiceChannelInput) *GetVoiceChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetVoiceChannel", input)
	return &GetVoiceChannelFuture{Future: future}
}

func (a *stub) GetVoiceTemplate(ctx workflow.Context, input *pinpoint.GetVoiceTemplateInput) (*pinpoint.GetVoiceTemplateOutput, error) {
	var output pinpoint.GetVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.GetVoiceTemplateInput) *GetVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-GetVoiceTemplate", input)
	return &GetVoiceTemplateFuture{Future: future}
}

func (a *stub) ListJourneys(ctx workflow.Context, input *pinpoint.ListJourneysInput) (*pinpoint.ListJourneysOutput, error) {
	var output pinpoint.ListJourneysOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListJourneys", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListJourneysAsync(ctx workflow.Context, input *pinpoint.ListJourneysInput) *ListJourneysFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListJourneys", input)
	return &ListJourneysFuture{Future: future}
}

func (a *stub) ListTagsForResource(ctx workflow.Context, input *pinpoint.ListTagsForResourceInput) (*pinpoint.ListTagsForResourceOutput, error) {
	var output pinpoint.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTagsForResourceAsync(ctx workflow.Context, input *pinpoint.ListTagsForResourceInput) *ListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListTagsForResource", input)
	return &ListTagsForResourceFuture{Future: future}
}

func (a *stub) ListTemplateVersions(ctx workflow.Context, input *pinpoint.ListTemplateVersionsInput) (*pinpoint.ListTemplateVersionsOutput, error) {
	var output pinpoint.ListTemplateVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListTemplateVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTemplateVersionsAsync(ctx workflow.Context, input *pinpoint.ListTemplateVersionsInput) *ListTemplateVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListTemplateVersions", input)
	return &ListTemplateVersionsFuture{Future: future}
}

func (a *stub) ListTemplates(ctx workflow.Context, input *pinpoint.ListTemplatesInput) (*pinpoint.ListTemplatesOutput, error) {
	var output pinpoint.ListTemplatesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListTemplates", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTemplatesAsync(ctx workflow.Context, input *pinpoint.ListTemplatesInput) *ListTemplatesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-ListTemplates", input)
	return &ListTemplatesFuture{Future: future}
}

func (a *stub) PhoneNumberValidate(ctx workflow.Context, input *pinpoint.PhoneNumberValidateInput) (*pinpoint.PhoneNumberValidateOutput, error) {
	var output pinpoint.PhoneNumberValidateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-PhoneNumberValidate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PhoneNumberValidateAsync(ctx workflow.Context, input *pinpoint.PhoneNumberValidateInput) *PhoneNumberValidateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-PhoneNumberValidate", input)
	return &PhoneNumberValidateFuture{Future: future}
}

func (a *stub) PutEventStream(ctx workflow.Context, input *pinpoint.PutEventStreamInput) (*pinpoint.PutEventStreamOutput, error) {
	var output pinpoint.PutEventStreamOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-PutEventStream", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutEventStreamAsync(ctx workflow.Context, input *pinpoint.PutEventStreamInput) *PutEventStreamFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-PutEventStream", input)
	return &PutEventStreamFuture{Future: future}
}

func (a *stub) PutEvents(ctx workflow.Context, input *pinpoint.PutEventsInput) (*pinpoint.PutEventsOutput, error) {
	var output pinpoint.PutEventsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-PutEvents", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutEventsAsync(ctx workflow.Context, input *pinpoint.PutEventsInput) *PutEventsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-PutEvents", input)
	return &PutEventsFuture{Future: future}
}

func (a *stub) RemoveAttributes(ctx workflow.Context, input *pinpoint.RemoveAttributesInput) (*pinpoint.RemoveAttributesOutput, error) {
	var output pinpoint.RemoveAttributesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-RemoveAttributes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) RemoveAttributesAsync(ctx workflow.Context, input *pinpoint.RemoveAttributesInput) *RemoveAttributesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-RemoveAttributes", input)
	return &RemoveAttributesFuture{Future: future}
}

func (a *stub) SendMessages(ctx workflow.Context, input *pinpoint.SendMessagesInput) (*pinpoint.SendMessagesOutput, error) {
	var output pinpoint.SendMessagesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-SendMessages", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) SendMessagesAsync(ctx workflow.Context, input *pinpoint.SendMessagesInput) *SendMessagesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-SendMessages", input)
	return &SendMessagesFuture{Future: future}
}

func (a *stub) SendUsersMessages(ctx workflow.Context, input *pinpoint.SendUsersMessagesInput) (*pinpoint.SendUsersMessagesOutput, error) {
	var output pinpoint.SendUsersMessagesOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-SendUsersMessages", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) SendUsersMessagesAsync(ctx workflow.Context, input *pinpoint.SendUsersMessagesInput) *SendUsersMessagesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-SendUsersMessages", input)
	return &SendUsersMessagesFuture{Future: future}
}

func (a *stub) TagResource(ctx workflow.Context, input *pinpoint.TagResourceInput) (*pinpoint.TagResourceOutput, error) {
	var output pinpoint.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) TagResourceAsync(ctx workflow.Context, input *pinpoint.TagResourceInput) *TagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-TagResource", input)
	return &TagResourceFuture{Future: future}
}

func (a *stub) UntagResource(ctx workflow.Context, input *pinpoint.UntagResourceInput) (*pinpoint.UntagResourceOutput, error) {
	var output pinpoint.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UntagResourceAsync(ctx workflow.Context, input *pinpoint.UntagResourceInput) *UntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UntagResource", input)
	return &UntagResourceFuture{Future: future}
}

func (a *stub) UpdateAdmChannel(ctx workflow.Context, input *pinpoint.UpdateAdmChannelInput) (*pinpoint.UpdateAdmChannelOutput, error) {
	var output pinpoint.UpdateAdmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateAdmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateAdmChannelAsync(ctx workflow.Context, input *pinpoint.UpdateAdmChannelInput) *UpdateAdmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateAdmChannel", input)
	return &UpdateAdmChannelFuture{Future: future}
}

func (a *stub) UpdateApnsChannel(ctx workflow.Context, input *pinpoint.UpdateApnsChannelInput) (*pinpoint.UpdateApnsChannelOutput, error) {
	var output pinpoint.UpdateApnsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateApnsChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsChannelInput) *UpdateApnsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsChannel", input)
	return &UpdateApnsChannelFuture{Future: future}
}

func (a *stub) UpdateApnsSandboxChannel(ctx workflow.Context, input *pinpoint.UpdateApnsSandboxChannelInput) (*pinpoint.UpdateApnsSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateApnsSandboxChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsSandboxChannelInput) *UpdateApnsSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsSandboxChannel", input)
	return &UpdateApnsSandboxChannelFuture{Future: future}
}

func (a *stub) UpdateApnsVoipChannel(ctx workflow.Context, input *pinpoint.UpdateApnsVoipChannelInput) (*pinpoint.UpdateApnsVoipChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsVoipChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateApnsVoipChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsVoipChannelInput) *UpdateApnsVoipChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsVoipChannel", input)
	return &UpdateApnsVoipChannelFuture{Future: future}
}

func (a *stub) UpdateApnsVoipSandboxChannel(ctx workflow.Context, input *pinpoint.UpdateApnsVoipSandboxChannelInput) (*pinpoint.UpdateApnsVoipSandboxChannelOutput, error) {
	var output pinpoint.UpdateApnsVoipSandboxChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsVoipSandboxChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateApnsVoipSandboxChannelAsync(ctx workflow.Context, input *pinpoint.UpdateApnsVoipSandboxChannelInput) *UpdateApnsVoipSandboxChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApnsVoipSandboxChannel", input)
	return &UpdateApnsVoipSandboxChannelFuture{Future: future}
}

func (a *stub) UpdateApplicationSettings(ctx workflow.Context, input *pinpoint.UpdateApplicationSettingsInput) (*pinpoint.UpdateApplicationSettingsOutput, error) {
	var output pinpoint.UpdateApplicationSettingsOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApplicationSettings", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateApplicationSettingsAsync(ctx workflow.Context, input *pinpoint.UpdateApplicationSettingsInput) *UpdateApplicationSettingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateApplicationSettings", input)
	return &UpdateApplicationSettingsFuture{Future: future}
}

func (a *stub) UpdateBaiduChannel(ctx workflow.Context, input *pinpoint.UpdateBaiduChannelInput) (*pinpoint.UpdateBaiduChannelOutput, error) {
	var output pinpoint.UpdateBaiduChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateBaiduChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateBaiduChannelAsync(ctx workflow.Context, input *pinpoint.UpdateBaiduChannelInput) *UpdateBaiduChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateBaiduChannel", input)
	return &UpdateBaiduChannelFuture{Future: future}
}

func (a *stub) UpdateCampaign(ctx workflow.Context, input *pinpoint.UpdateCampaignInput) (*pinpoint.UpdateCampaignOutput, error) {
	var output pinpoint.UpdateCampaignOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateCampaign", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateCampaignAsync(ctx workflow.Context, input *pinpoint.UpdateCampaignInput) *UpdateCampaignFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateCampaign", input)
	return &UpdateCampaignFuture{Future: future}
}

func (a *stub) UpdateEmailChannel(ctx workflow.Context, input *pinpoint.UpdateEmailChannelInput) (*pinpoint.UpdateEmailChannelOutput, error) {
	var output pinpoint.UpdateEmailChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEmailChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateEmailChannelAsync(ctx workflow.Context, input *pinpoint.UpdateEmailChannelInput) *UpdateEmailChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEmailChannel", input)
	return &UpdateEmailChannelFuture{Future: future}
}

func (a *stub) UpdateEmailTemplate(ctx workflow.Context, input *pinpoint.UpdateEmailTemplateInput) (*pinpoint.UpdateEmailTemplateOutput, error) {
	var output pinpoint.UpdateEmailTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEmailTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateEmailTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateEmailTemplateInput) *UpdateEmailTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEmailTemplate", input)
	return &UpdateEmailTemplateFuture{Future: future}
}

func (a *stub) UpdateEndpoint(ctx workflow.Context, input *pinpoint.UpdateEndpointInput) (*pinpoint.UpdateEndpointOutput, error) {
	var output pinpoint.UpdateEndpointOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEndpoint", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateEndpointAsync(ctx workflow.Context, input *pinpoint.UpdateEndpointInput) *UpdateEndpointFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEndpoint", input)
	return &UpdateEndpointFuture{Future: future}
}

func (a *stub) UpdateEndpointsBatch(ctx workflow.Context, input *pinpoint.UpdateEndpointsBatchInput) (*pinpoint.UpdateEndpointsBatchOutput, error) {
	var output pinpoint.UpdateEndpointsBatchOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEndpointsBatch", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateEndpointsBatchAsync(ctx workflow.Context, input *pinpoint.UpdateEndpointsBatchInput) *UpdateEndpointsBatchFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateEndpointsBatch", input)
	return &UpdateEndpointsBatchFuture{Future: future}
}

func (a *stub) UpdateGcmChannel(ctx workflow.Context, input *pinpoint.UpdateGcmChannelInput) (*pinpoint.UpdateGcmChannelOutput, error) {
	var output pinpoint.UpdateGcmChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateGcmChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateGcmChannelAsync(ctx workflow.Context, input *pinpoint.UpdateGcmChannelInput) *UpdateGcmChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateGcmChannel", input)
	return &UpdateGcmChannelFuture{Future: future}
}

func (a *stub) UpdateJourney(ctx workflow.Context, input *pinpoint.UpdateJourneyInput) (*pinpoint.UpdateJourneyOutput, error) {
	var output pinpoint.UpdateJourneyOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateJourney", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateJourneyAsync(ctx workflow.Context, input *pinpoint.UpdateJourneyInput) *UpdateJourneyFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateJourney", input)
	return &UpdateJourneyFuture{Future: future}
}

func (a *stub) UpdateJourneyState(ctx workflow.Context, input *pinpoint.UpdateJourneyStateInput) (*pinpoint.UpdateJourneyStateOutput, error) {
	var output pinpoint.UpdateJourneyStateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateJourneyState", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateJourneyStateAsync(ctx workflow.Context, input *pinpoint.UpdateJourneyStateInput) *UpdateJourneyStateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateJourneyState", input)
	return &UpdateJourneyStateFuture{Future: future}
}

func (a *stub) UpdatePushTemplate(ctx workflow.Context, input *pinpoint.UpdatePushTemplateInput) (*pinpoint.UpdatePushTemplateOutput, error) {
	var output pinpoint.UpdatePushTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdatePushTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdatePushTemplateAsync(ctx workflow.Context, input *pinpoint.UpdatePushTemplateInput) *UpdatePushTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdatePushTemplate", input)
	return &UpdatePushTemplateFuture{Future: future}
}

func (a *stub) UpdateRecommenderConfiguration(ctx workflow.Context, input *pinpoint.UpdateRecommenderConfigurationInput) (*pinpoint.UpdateRecommenderConfigurationOutput, error) {
	var output pinpoint.UpdateRecommenderConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateRecommenderConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateRecommenderConfigurationAsync(ctx workflow.Context, input *pinpoint.UpdateRecommenderConfigurationInput) *UpdateRecommenderConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateRecommenderConfiguration", input)
	return &UpdateRecommenderConfigurationFuture{Future: future}
}

func (a *stub) UpdateSegment(ctx workflow.Context, input *pinpoint.UpdateSegmentInput) (*pinpoint.UpdateSegmentOutput, error) {
	var output pinpoint.UpdateSegmentOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateSegment", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateSegmentAsync(ctx workflow.Context, input *pinpoint.UpdateSegmentInput) *UpdateSegmentFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateSegment", input)
	return &UpdateSegmentFuture{Future: future}
}

func (a *stub) UpdateSmsChannel(ctx workflow.Context, input *pinpoint.UpdateSmsChannelInput) (*pinpoint.UpdateSmsChannelOutput, error) {
	var output pinpoint.UpdateSmsChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateSmsChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateSmsChannelAsync(ctx workflow.Context, input *pinpoint.UpdateSmsChannelInput) *UpdateSmsChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateSmsChannel", input)
	return &UpdateSmsChannelFuture{Future: future}
}

func (a *stub) UpdateSmsTemplate(ctx workflow.Context, input *pinpoint.UpdateSmsTemplateInput) (*pinpoint.UpdateSmsTemplateOutput, error) {
	var output pinpoint.UpdateSmsTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateSmsTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateSmsTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateSmsTemplateInput) *UpdateSmsTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateSmsTemplate", input)
	return &UpdateSmsTemplateFuture{Future: future}
}

func (a *stub) UpdateTemplateActiveVersion(ctx workflow.Context, input *pinpoint.UpdateTemplateActiveVersionInput) (*pinpoint.UpdateTemplateActiveVersionOutput, error) {
	var output pinpoint.UpdateTemplateActiveVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateTemplateActiveVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateTemplateActiveVersionAsync(ctx workflow.Context, input *pinpoint.UpdateTemplateActiveVersionInput) *UpdateTemplateActiveVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateTemplateActiveVersion", input)
	return &UpdateTemplateActiveVersionFuture{Future: future}
}

func (a *stub) UpdateVoiceChannel(ctx workflow.Context, input *pinpoint.UpdateVoiceChannelInput) (*pinpoint.UpdateVoiceChannelOutput, error) {
	var output pinpoint.UpdateVoiceChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateVoiceChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateVoiceChannelAsync(ctx workflow.Context, input *pinpoint.UpdateVoiceChannelInput) *UpdateVoiceChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateVoiceChannel", input)
	return &UpdateVoiceChannelFuture{Future: future}
}

func (a *stub) UpdateVoiceTemplate(ctx workflow.Context, input *pinpoint.UpdateVoiceTemplateInput) (*pinpoint.UpdateVoiceTemplateOutput, error) {
	var output pinpoint.UpdateVoiceTemplateOutput
	err := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateVoiceTemplate", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateVoiceTemplateAsync(ctx workflow.Context, input *pinpoint.UpdateVoiceTemplateInput) *UpdateVoiceTemplateFuture {
	future := workflow.ExecuteActivity(ctx, "aws-pinpoint-UpdateVoiceTemplate", input)
	return &UpdateVoiceTemplateFuture{Future: future}
}
