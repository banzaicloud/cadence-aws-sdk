// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package signerstub

import (
	"github.com/aws/aws-sdk-go/service/signer"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	AddProfilePermission(ctx workflow.Context, input *signer.AddProfilePermissionInput) (*signer.AddProfilePermissionOutput, error)
	AddProfilePermissionAsync(ctx workflow.Context, input *signer.AddProfilePermissionInput) *AddProfilePermissionFuture

	CancelSigningProfile(ctx workflow.Context, input *signer.CancelSigningProfileInput) (*signer.CancelSigningProfileOutput, error)
	CancelSigningProfileAsync(ctx workflow.Context, input *signer.CancelSigningProfileInput) *CancelSigningProfileFuture

	DescribeSigningJob(ctx workflow.Context, input *signer.DescribeSigningJobInput) (*signer.DescribeSigningJobOutput, error)
	DescribeSigningJobAsync(ctx workflow.Context, input *signer.DescribeSigningJobInput) *DescribeSigningJobFuture

	GetSigningPlatform(ctx workflow.Context, input *signer.GetSigningPlatformInput) (*signer.GetSigningPlatformOutput, error)
	GetSigningPlatformAsync(ctx workflow.Context, input *signer.GetSigningPlatformInput) *GetSigningPlatformFuture

	GetSigningProfile(ctx workflow.Context, input *signer.GetSigningProfileInput) (*signer.GetSigningProfileOutput, error)
	GetSigningProfileAsync(ctx workflow.Context, input *signer.GetSigningProfileInput) *GetSigningProfileFuture

	ListProfilePermissions(ctx workflow.Context, input *signer.ListProfilePermissionsInput) (*signer.ListProfilePermissionsOutput, error)
	ListProfilePermissionsAsync(ctx workflow.Context, input *signer.ListProfilePermissionsInput) *ListProfilePermissionsFuture

	ListSigningJobs(ctx workflow.Context, input *signer.ListSigningJobsInput) (*signer.ListSigningJobsOutput, error)
	ListSigningJobsAsync(ctx workflow.Context, input *signer.ListSigningJobsInput) *ListSigningJobsFuture

	ListSigningPlatforms(ctx workflow.Context, input *signer.ListSigningPlatformsInput) (*signer.ListSigningPlatformsOutput, error)
	ListSigningPlatformsAsync(ctx workflow.Context, input *signer.ListSigningPlatformsInput) *ListSigningPlatformsFuture

	ListSigningProfiles(ctx workflow.Context, input *signer.ListSigningProfilesInput) (*signer.ListSigningProfilesOutput, error)
	ListSigningProfilesAsync(ctx workflow.Context, input *signer.ListSigningProfilesInput) *ListSigningProfilesFuture

	ListTagsForResource(ctx workflow.Context, input *signer.ListTagsForResourceInput) (*signer.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *signer.ListTagsForResourceInput) *ListTagsForResourceFuture

	PutSigningProfile(ctx workflow.Context, input *signer.PutSigningProfileInput) (*signer.PutSigningProfileOutput, error)
	PutSigningProfileAsync(ctx workflow.Context, input *signer.PutSigningProfileInput) *PutSigningProfileFuture

	RemoveProfilePermission(ctx workflow.Context, input *signer.RemoveProfilePermissionInput) (*signer.RemoveProfilePermissionOutput, error)
	RemoveProfilePermissionAsync(ctx workflow.Context, input *signer.RemoveProfilePermissionInput) *RemoveProfilePermissionFuture

	RevokeSignature(ctx workflow.Context, input *signer.RevokeSignatureInput) (*signer.RevokeSignatureOutput, error)
	RevokeSignatureAsync(ctx workflow.Context, input *signer.RevokeSignatureInput) *RevokeSignatureFuture

	RevokeSigningProfile(ctx workflow.Context, input *signer.RevokeSigningProfileInput) (*signer.RevokeSigningProfileOutput, error)
	RevokeSigningProfileAsync(ctx workflow.Context, input *signer.RevokeSigningProfileInput) *RevokeSigningProfileFuture

	StartSigningJob(ctx workflow.Context, input *signer.StartSigningJobInput) (*signer.StartSigningJobOutput, error)
	StartSigningJobAsync(ctx workflow.Context, input *signer.StartSigningJobInput) *StartSigningJobFuture

	TagResource(ctx workflow.Context, input *signer.TagResourceInput) (*signer.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *signer.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *signer.UntagResourceInput) (*signer.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *signer.UntagResourceInput) *UntagResourceFuture

	WaitUntilSuccessfulSigningJob(ctx workflow.Context, input *signer.DescribeSigningJobInput) error
	WaitUntilSuccessfulSigningJobAsync(ctx workflow.Context, input *signer.DescribeSigningJobInput) *clients.VoidFuture
}

func NewClient() Client {
	return &stub{}
}
