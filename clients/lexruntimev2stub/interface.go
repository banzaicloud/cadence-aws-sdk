// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package lexruntimev2stub

import (
	"github.com/aws/aws-sdk-go/service/lexruntimev2"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	DeleteSession(ctx workflow.Context, input *lexruntimev2.DeleteSessionInput) (*lexruntimev2.DeleteSessionOutput, error)
	DeleteSessionAsync(ctx workflow.Context, input *lexruntimev2.DeleteSessionInput) *DeleteSessionFuture

	GetSession(ctx workflow.Context, input *lexruntimev2.GetSessionInput) (*lexruntimev2.GetSessionOutput, error)
	GetSessionAsync(ctx workflow.Context, input *lexruntimev2.GetSessionInput) *GetSessionFuture

	PutSession(ctx workflow.Context, input *lexruntimev2.PutSessionInput) (*lexruntimev2.PutSessionOutput, error)
	PutSessionAsync(ctx workflow.Context, input *lexruntimev2.PutSessionInput) *PutSessionFuture

	RecognizeText(ctx workflow.Context, input *lexruntimev2.RecognizeTextInput) (*lexruntimev2.RecognizeTextOutput, error)
	RecognizeTextAsync(ctx workflow.Context, input *lexruntimev2.RecognizeTextInput) *RecognizeTextFuture

	RecognizeUtterance(ctx workflow.Context, input *lexruntimev2.RecognizeUtteranceInput) (*lexruntimev2.RecognizeUtteranceOutput, error)
	RecognizeUtteranceAsync(ctx workflow.Context, input *lexruntimev2.RecognizeUtteranceInput) *RecognizeUtteranceFuture

	StartConversation(ctx workflow.Context, input *lexruntimev2.StartConversationInput) (*lexruntimev2.StartConversationOutput, error)
	StartConversationAsync(ctx workflow.Context, input *lexruntimev2.StartConversationInput) *StartConversationFuture
}

func NewClient() Client {
	return &stub{}
}
