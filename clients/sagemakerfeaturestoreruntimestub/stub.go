// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package sagemakerfeaturestoreruntimestub

import (
	"github.com/aws/aws-sdk-go/service/sagemakerfeaturestoreruntime"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type DeleteRecordFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteRecordFuture) Get(ctx workflow.Context) (*sagemakerfeaturestoreruntime.DeleteRecordOutput, error) {
	var output sagemakerfeaturestoreruntime.DeleteRecordOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetRecordFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetRecordFuture) Get(ctx workflow.Context) (*sagemakerfeaturestoreruntime.GetRecordOutput, error) {
	var output sagemakerfeaturestoreruntime.GetRecordOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutRecordFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutRecordFuture) Get(ctx workflow.Context) (*sagemakerfeaturestoreruntime.PutRecordOutput, error) {
	var output sagemakerfeaturestoreruntime.PutRecordOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteRecord(ctx workflow.Context, input *sagemakerfeaturestoreruntime.DeleteRecordInput) (*sagemakerfeaturestoreruntime.DeleteRecordOutput, error) {
	var output sagemakerfeaturestoreruntime.DeleteRecordOutput
	err := workflow.ExecuteActivity(ctx, "aws-sagemakerfeaturestoreruntime-DeleteRecord", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteRecordAsync(ctx workflow.Context, input *sagemakerfeaturestoreruntime.DeleteRecordInput) *DeleteRecordFuture {
	future := workflow.ExecuteActivity(ctx, "aws-sagemakerfeaturestoreruntime-DeleteRecord", input)
	return &DeleteRecordFuture{Future: future}
}

func (a *stub) GetRecord(ctx workflow.Context, input *sagemakerfeaturestoreruntime.GetRecordInput) (*sagemakerfeaturestoreruntime.GetRecordOutput, error) {
	var output sagemakerfeaturestoreruntime.GetRecordOutput
	err := workflow.ExecuteActivity(ctx, "aws-sagemakerfeaturestoreruntime-GetRecord", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetRecordAsync(ctx workflow.Context, input *sagemakerfeaturestoreruntime.GetRecordInput) *GetRecordFuture {
	future := workflow.ExecuteActivity(ctx, "aws-sagemakerfeaturestoreruntime-GetRecord", input)
	return &GetRecordFuture{Future: future}
}

func (a *stub) PutRecord(ctx workflow.Context, input *sagemakerfeaturestoreruntime.PutRecordInput) (*sagemakerfeaturestoreruntime.PutRecordOutput, error) {
	var output sagemakerfeaturestoreruntime.PutRecordOutput
	err := workflow.ExecuteActivity(ctx, "aws-sagemakerfeaturestoreruntime-PutRecord", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutRecordAsync(ctx workflow.Context, input *sagemakerfeaturestoreruntime.PutRecordInput) *PutRecordFuture {
	future := workflow.ExecuteActivity(ctx, "aws-sagemakerfeaturestoreruntime-PutRecord", input)
	return &PutRecordFuture{Future: future}
}
