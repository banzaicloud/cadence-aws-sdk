// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package devopsgurustub

import (
	"github.com/aws/aws-sdk-go/service/devopsguru"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type AddNotificationChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *AddNotificationChannelFuture) Get(ctx workflow.Context) (*devopsguru.AddNotificationChannelOutput, error) {
	var output devopsguru.AddNotificationChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeAccountHealthFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeAccountHealthFuture) Get(ctx workflow.Context) (*devopsguru.DescribeAccountHealthOutput, error) {
	var output devopsguru.DescribeAccountHealthOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeAccountOverviewFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeAccountOverviewFuture) Get(ctx workflow.Context) (*devopsguru.DescribeAccountOverviewOutput, error) {
	var output devopsguru.DescribeAccountOverviewOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeAnomalyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeAnomalyFuture) Get(ctx workflow.Context) (*devopsguru.DescribeAnomalyOutput, error) {
	var output devopsguru.DescribeAnomalyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeInsightFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeInsightFuture) Get(ctx workflow.Context) (*devopsguru.DescribeInsightOutput, error) {
	var output devopsguru.DescribeInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeResourceCollectionHealthFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeResourceCollectionHealthFuture) Get(ctx workflow.Context) (*devopsguru.DescribeResourceCollectionHealthOutput, error) {
	var output devopsguru.DescribeResourceCollectionHealthOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeServiceIntegrationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeServiceIntegrationFuture) Get(ctx workflow.Context) (*devopsguru.DescribeServiceIntegrationOutput, error) {
	var output devopsguru.DescribeServiceIntegrationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetResourceCollectionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetResourceCollectionFuture) Get(ctx workflow.Context) (*devopsguru.GetResourceCollectionOutput, error) {
	var output devopsguru.GetResourceCollectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListAnomaliesForInsightFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListAnomaliesForInsightFuture) Get(ctx workflow.Context) (*devopsguru.ListAnomaliesForInsightOutput, error) {
	var output devopsguru.ListAnomaliesForInsightOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListEventsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListEventsFuture) Get(ctx workflow.Context) (*devopsguru.ListEventsOutput, error) {
	var output devopsguru.ListEventsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListInsightsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListInsightsFuture) Get(ctx workflow.Context) (*devopsguru.ListInsightsOutput, error) {
	var output devopsguru.ListInsightsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListNotificationChannelsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListNotificationChannelsFuture) Get(ctx workflow.Context) (*devopsguru.ListNotificationChannelsOutput, error) {
	var output devopsguru.ListNotificationChannelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListRecommendationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListRecommendationsFuture) Get(ctx workflow.Context) (*devopsguru.ListRecommendationsOutput, error) {
	var output devopsguru.ListRecommendationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutFeedbackFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutFeedbackFuture) Get(ctx workflow.Context) (*devopsguru.PutFeedbackOutput, error) {
	var output devopsguru.PutFeedbackOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type RemoveNotificationChannelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *RemoveNotificationChannelFuture) Get(ctx workflow.Context) (*devopsguru.RemoveNotificationChannelOutput, error) {
	var output devopsguru.RemoveNotificationChannelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type SearchInsightsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *SearchInsightsFuture) Get(ctx workflow.Context) (*devopsguru.SearchInsightsOutput, error) {
	var output devopsguru.SearchInsightsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateResourceCollectionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateResourceCollectionFuture) Get(ctx workflow.Context) (*devopsguru.UpdateResourceCollectionOutput, error) {
	var output devopsguru.UpdateResourceCollectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateServiceIntegrationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateServiceIntegrationFuture) Get(ctx workflow.Context) (*devopsguru.UpdateServiceIntegrationOutput, error) {
	var output devopsguru.UpdateServiceIntegrationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) AddNotificationChannel(ctx workflow.Context, input *devopsguru.AddNotificationChannelInput) (*devopsguru.AddNotificationChannelOutput, error) {
	var output devopsguru.AddNotificationChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-AddNotificationChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) AddNotificationChannelAsync(ctx workflow.Context, input *devopsguru.AddNotificationChannelInput) *AddNotificationChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-AddNotificationChannel", input)
	return &AddNotificationChannelFuture{Future: future}
}

func (a *stub) DescribeAccountHealth(ctx workflow.Context, input *devopsguru.DescribeAccountHealthInput) (*devopsguru.DescribeAccountHealthOutput, error) {
	var output devopsguru.DescribeAccountHealthOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeAccountHealth", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeAccountHealthAsync(ctx workflow.Context, input *devopsguru.DescribeAccountHealthInput) *DescribeAccountHealthFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeAccountHealth", input)
	return &DescribeAccountHealthFuture{Future: future}
}

func (a *stub) DescribeAccountOverview(ctx workflow.Context, input *devopsguru.DescribeAccountOverviewInput) (*devopsguru.DescribeAccountOverviewOutput, error) {
	var output devopsguru.DescribeAccountOverviewOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeAccountOverview", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeAccountOverviewAsync(ctx workflow.Context, input *devopsguru.DescribeAccountOverviewInput) *DescribeAccountOverviewFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeAccountOverview", input)
	return &DescribeAccountOverviewFuture{Future: future}
}

func (a *stub) DescribeAnomaly(ctx workflow.Context, input *devopsguru.DescribeAnomalyInput) (*devopsguru.DescribeAnomalyOutput, error) {
	var output devopsguru.DescribeAnomalyOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeAnomaly", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeAnomalyAsync(ctx workflow.Context, input *devopsguru.DescribeAnomalyInput) *DescribeAnomalyFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeAnomaly", input)
	return &DescribeAnomalyFuture{Future: future}
}

func (a *stub) DescribeInsight(ctx workflow.Context, input *devopsguru.DescribeInsightInput) (*devopsguru.DescribeInsightOutput, error) {
	var output devopsguru.DescribeInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeInsightAsync(ctx workflow.Context, input *devopsguru.DescribeInsightInput) *DescribeInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeInsight", input)
	return &DescribeInsightFuture{Future: future}
}

func (a *stub) DescribeResourceCollectionHealth(ctx workflow.Context, input *devopsguru.DescribeResourceCollectionHealthInput) (*devopsguru.DescribeResourceCollectionHealthOutput, error) {
	var output devopsguru.DescribeResourceCollectionHealthOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeResourceCollectionHealth", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeResourceCollectionHealthAsync(ctx workflow.Context, input *devopsguru.DescribeResourceCollectionHealthInput) *DescribeResourceCollectionHealthFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeResourceCollectionHealth", input)
	return &DescribeResourceCollectionHealthFuture{Future: future}
}

func (a *stub) DescribeServiceIntegration(ctx workflow.Context, input *devopsguru.DescribeServiceIntegrationInput) (*devopsguru.DescribeServiceIntegrationOutput, error) {
	var output devopsguru.DescribeServiceIntegrationOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeServiceIntegration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeServiceIntegrationAsync(ctx workflow.Context, input *devopsguru.DescribeServiceIntegrationInput) *DescribeServiceIntegrationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-DescribeServiceIntegration", input)
	return &DescribeServiceIntegrationFuture{Future: future}
}

func (a *stub) GetResourceCollection(ctx workflow.Context, input *devopsguru.GetResourceCollectionInput) (*devopsguru.GetResourceCollectionOutput, error) {
	var output devopsguru.GetResourceCollectionOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-GetResourceCollection", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetResourceCollectionAsync(ctx workflow.Context, input *devopsguru.GetResourceCollectionInput) *GetResourceCollectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-GetResourceCollection", input)
	return &GetResourceCollectionFuture{Future: future}
}

func (a *stub) ListAnomaliesForInsight(ctx workflow.Context, input *devopsguru.ListAnomaliesForInsightInput) (*devopsguru.ListAnomaliesForInsightOutput, error) {
	var output devopsguru.ListAnomaliesForInsightOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListAnomaliesForInsight", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListAnomaliesForInsightAsync(ctx workflow.Context, input *devopsguru.ListAnomaliesForInsightInput) *ListAnomaliesForInsightFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListAnomaliesForInsight", input)
	return &ListAnomaliesForInsightFuture{Future: future}
}

func (a *stub) ListEvents(ctx workflow.Context, input *devopsguru.ListEventsInput) (*devopsguru.ListEventsOutput, error) {
	var output devopsguru.ListEventsOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListEvents", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListEventsAsync(ctx workflow.Context, input *devopsguru.ListEventsInput) *ListEventsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListEvents", input)
	return &ListEventsFuture{Future: future}
}

func (a *stub) ListInsights(ctx workflow.Context, input *devopsguru.ListInsightsInput) (*devopsguru.ListInsightsOutput, error) {
	var output devopsguru.ListInsightsOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListInsights", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListInsightsAsync(ctx workflow.Context, input *devopsguru.ListInsightsInput) *ListInsightsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListInsights", input)
	return &ListInsightsFuture{Future: future}
}

func (a *stub) ListNotificationChannels(ctx workflow.Context, input *devopsguru.ListNotificationChannelsInput) (*devopsguru.ListNotificationChannelsOutput, error) {
	var output devopsguru.ListNotificationChannelsOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListNotificationChannels", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListNotificationChannelsAsync(ctx workflow.Context, input *devopsguru.ListNotificationChannelsInput) *ListNotificationChannelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListNotificationChannels", input)
	return &ListNotificationChannelsFuture{Future: future}
}

func (a *stub) ListRecommendations(ctx workflow.Context, input *devopsguru.ListRecommendationsInput) (*devopsguru.ListRecommendationsOutput, error) {
	var output devopsguru.ListRecommendationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListRecommendations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListRecommendationsAsync(ctx workflow.Context, input *devopsguru.ListRecommendationsInput) *ListRecommendationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-ListRecommendations", input)
	return &ListRecommendationsFuture{Future: future}
}

func (a *stub) PutFeedback(ctx workflow.Context, input *devopsguru.PutFeedbackInput) (*devopsguru.PutFeedbackOutput, error) {
	var output devopsguru.PutFeedbackOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-PutFeedback", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutFeedbackAsync(ctx workflow.Context, input *devopsguru.PutFeedbackInput) *PutFeedbackFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-PutFeedback", input)
	return &PutFeedbackFuture{Future: future}
}

func (a *stub) RemoveNotificationChannel(ctx workflow.Context, input *devopsguru.RemoveNotificationChannelInput) (*devopsguru.RemoveNotificationChannelOutput, error) {
	var output devopsguru.RemoveNotificationChannelOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-RemoveNotificationChannel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) RemoveNotificationChannelAsync(ctx workflow.Context, input *devopsguru.RemoveNotificationChannelInput) *RemoveNotificationChannelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-RemoveNotificationChannel", input)
	return &RemoveNotificationChannelFuture{Future: future}
}

func (a *stub) SearchInsights(ctx workflow.Context, input *devopsguru.SearchInsightsInput) (*devopsguru.SearchInsightsOutput, error) {
	var output devopsguru.SearchInsightsOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-SearchInsights", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) SearchInsightsAsync(ctx workflow.Context, input *devopsguru.SearchInsightsInput) *SearchInsightsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-SearchInsights", input)
	return &SearchInsightsFuture{Future: future}
}

func (a *stub) UpdateResourceCollection(ctx workflow.Context, input *devopsguru.UpdateResourceCollectionInput) (*devopsguru.UpdateResourceCollectionOutput, error) {
	var output devopsguru.UpdateResourceCollectionOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-UpdateResourceCollection", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateResourceCollectionAsync(ctx workflow.Context, input *devopsguru.UpdateResourceCollectionInput) *UpdateResourceCollectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-UpdateResourceCollection", input)
	return &UpdateResourceCollectionFuture{Future: future}
}

func (a *stub) UpdateServiceIntegration(ctx workflow.Context, input *devopsguru.UpdateServiceIntegrationInput) (*devopsguru.UpdateServiceIntegrationOutput, error) {
	var output devopsguru.UpdateServiceIntegrationOutput
	err := workflow.ExecuteActivity(ctx, "aws-devopsguru-UpdateServiceIntegration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateServiceIntegrationAsync(ctx workflow.Context, input *devopsguru.UpdateServiceIntegrationInput) *UpdateServiceIntegrationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-devopsguru-UpdateServiceIntegration", input)
	return &UpdateServiceIntegrationFuture{Future: future}
}
