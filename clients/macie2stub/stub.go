// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package macie2stub

import (
	"github.com/aws/aws-sdk-go/service/macie2"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type AcceptInvitationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *AcceptInvitationFuture) Get(ctx workflow.Context) (*macie2.AcceptInvitationOutput, error) {
	var output macie2.AcceptInvitationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type BatchGetCustomDataIdentifiersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *BatchGetCustomDataIdentifiersFuture) Get(ctx workflow.Context) (*macie2.BatchGetCustomDataIdentifiersOutput, error) {
	var output macie2.BatchGetCustomDataIdentifiersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateClassificationJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateClassificationJobFuture) Get(ctx workflow.Context) (*macie2.CreateClassificationJobOutput, error) {
	var output macie2.CreateClassificationJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateCustomDataIdentifierFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateCustomDataIdentifierFuture) Get(ctx workflow.Context) (*macie2.CreateCustomDataIdentifierOutput, error) {
	var output macie2.CreateCustomDataIdentifierOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateFindingsFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateFindingsFilterFuture) Get(ctx workflow.Context) (*macie2.CreateFindingsFilterOutput, error) {
	var output macie2.CreateFindingsFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateInvitationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateInvitationsFuture) Get(ctx workflow.Context) (*macie2.CreateInvitationsOutput, error) {
	var output macie2.CreateInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateMemberFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateMemberFuture) Get(ctx workflow.Context) (*macie2.CreateMemberOutput, error) {
	var output macie2.CreateMemberOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateSampleFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateSampleFindingsFuture) Get(ctx workflow.Context) (*macie2.CreateSampleFindingsOutput, error) {
	var output macie2.CreateSampleFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeclineInvitationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeclineInvitationsFuture) Get(ctx workflow.Context) (*macie2.DeclineInvitationsOutput, error) {
	var output macie2.DeclineInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteCustomDataIdentifierFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteCustomDataIdentifierFuture) Get(ctx workflow.Context) (*macie2.DeleteCustomDataIdentifierOutput, error) {
	var output macie2.DeleteCustomDataIdentifierOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteFindingsFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteFindingsFilterFuture) Get(ctx workflow.Context) (*macie2.DeleteFindingsFilterOutput, error) {
	var output macie2.DeleteFindingsFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteInvitationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteInvitationsFuture) Get(ctx workflow.Context) (*macie2.DeleteInvitationsOutput, error) {
	var output macie2.DeleteInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteMemberFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteMemberFuture) Get(ctx workflow.Context) (*macie2.DeleteMemberOutput, error) {
	var output macie2.DeleteMemberOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeBucketsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeBucketsFuture) Get(ctx workflow.Context) (*macie2.DescribeBucketsOutput, error) {
	var output macie2.DescribeBucketsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeClassificationJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeClassificationJobFuture) Get(ctx workflow.Context) (*macie2.DescribeClassificationJobOutput, error) {
	var output macie2.DescribeClassificationJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeOrganizationConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeOrganizationConfigurationFuture) Get(ctx workflow.Context) (*macie2.DescribeOrganizationConfigurationOutput, error) {
	var output macie2.DescribeOrganizationConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisableMacieFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisableMacieFuture) Get(ctx workflow.Context) (*macie2.DisableMacieOutput, error) {
	var output macie2.DisableMacieOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisableOrganizationAdminAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisableOrganizationAdminAccountFuture) Get(ctx workflow.Context) (*macie2.DisableOrganizationAdminAccountOutput, error) {
	var output macie2.DisableOrganizationAdminAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisassociateFromMasterAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisassociateFromMasterAccountFuture) Get(ctx workflow.Context) (*macie2.DisassociateFromMasterAccountOutput, error) {
	var output macie2.DisassociateFromMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DisassociateMemberFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DisassociateMemberFuture) Get(ctx workflow.Context) (*macie2.DisassociateMemberOutput, error) {
	var output macie2.DisassociateMemberOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type EnableMacieFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *EnableMacieFuture) Get(ctx workflow.Context) (*macie2.EnableMacieOutput, error) {
	var output macie2.EnableMacieOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type EnableOrganizationAdminAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *EnableOrganizationAdminAccountFuture) Get(ctx workflow.Context) (*macie2.EnableOrganizationAdminAccountOutput, error) {
	var output macie2.EnableOrganizationAdminAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetBucketStatisticsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetBucketStatisticsFuture) Get(ctx workflow.Context) (*macie2.GetBucketStatisticsOutput, error) {
	var output macie2.GetBucketStatisticsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetClassificationExportConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetClassificationExportConfigurationFuture) Get(ctx workflow.Context) (*macie2.GetClassificationExportConfigurationOutput, error) {
	var output macie2.GetClassificationExportConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetCustomDataIdentifierFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetCustomDataIdentifierFuture) Get(ctx workflow.Context) (*macie2.GetCustomDataIdentifierOutput, error) {
	var output macie2.GetCustomDataIdentifierOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetFindingStatisticsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetFindingStatisticsFuture) Get(ctx workflow.Context) (*macie2.GetFindingStatisticsOutput, error) {
	var output macie2.GetFindingStatisticsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetFindingsFuture) Get(ctx workflow.Context) (*macie2.GetFindingsOutput, error) {
	var output macie2.GetFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetFindingsFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetFindingsFilterFuture) Get(ctx workflow.Context) (*macie2.GetFindingsFilterOutput, error) {
	var output macie2.GetFindingsFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetInvitationsCountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetInvitationsCountFuture) Get(ctx workflow.Context) (*macie2.GetInvitationsCountOutput, error) {
	var output macie2.GetInvitationsCountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetMacieSessionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetMacieSessionFuture) Get(ctx workflow.Context) (*macie2.GetMacieSessionOutput, error) {
	var output macie2.GetMacieSessionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetMasterAccountFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetMasterAccountFuture) Get(ctx workflow.Context) (*macie2.GetMasterAccountOutput, error) {
	var output macie2.GetMasterAccountOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetMemberFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetMemberFuture) Get(ctx workflow.Context) (*macie2.GetMemberOutput, error) {
	var output macie2.GetMemberOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetUsageStatisticsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetUsageStatisticsFuture) Get(ctx workflow.Context) (*macie2.GetUsageStatisticsOutput, error) {
	var output macie2.GetUsageStatisticsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetUsageTotalsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetUsageTotalsFuture) Get(ctx workflow.Context) (*macie2.GetUsageTotalsOutput, error) {
	var output macie2.GetUsageTotalsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListClassificationJobsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListClassificationJobsFuture) Get(ctx workflow.Context) (*macie2.ListClassificationJobsOutput, error) {
	var output macie2.ListClassificationJobsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListCustomDataIdentifiersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListCustomDataIdentifiersFuture) Get(ctx workflow.Context) (*macie2.ListCustomDataIdentifiersOutput, error) {
	var output macie2.ListCustomDataIdentifiersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListFindingsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListFindingsFuture) Get(ctx workflow.Context) (*macie2.ListFindingsOutput, error) {
	var output macie2.ListFindingsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListFindingsFiltersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListFindingsFiltersFuture) Get(ctx workflow.Context) (*macie2.ListFindingsFiltersOutput, error) {
	var output macie2.ListFindingsFiltersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListInvitationsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListInvitationsFuture) Get(ctx workflow.Context) (*macie2.ListInvitationsOutput, error) {
	var output macie2.ListInvitationsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListMembersFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListMembersFuture) Get(ctx workflow.Context) (*macie2.ListMembersOutput, error) {
	var output macie2.ListMembersOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListOrganizationAdminAccountsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListOrganizationAdminAccountsFuture) Get(ctx workflow.Context) (*macie2.ListOrganizationAdminAccountsOutput, error) {
	var output macie2.ListOrganizationAdminAccountsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTagsForResourceFuture) Get(ctx workflow.Context) (*macie2.ListTagsForResourceOutput, error) {
	var output macie2.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutClassificationExportConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutClassificationExportConfigurationFuture) Get(ctx workflow.Context) (*macie2.PutClassificationExportConfigurationOutput, error) {
	var output macie2.PutClassificationExportConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type TagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *TagResourceFuture) Get(ctx workflow.Context) (*macie2.TagResourceOutput, error) {
	var output macie2.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type TestCustomDataIdentifierFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *TestCustomDataIdentifierFuture) Get(ctx workflow.Context) (*macie2.TestCustomDataIdentifierOutput, error) {
	var output macie2.TestCustomDataIdentifierOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UntagResourceFuture) Get(ctx workflow.Context) (*macie2.UntagResourceOutput, error) {
	var output macie2.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateClassificationJobFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateClassificationJobFuture) Get(ctx workflow.Context) (*macie2.UpdateClassificationJobOutput, error) {
	var output macie2.UpdateClassificationJobOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateFindingsFilterFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateFindingsFilterFuture) Get(ctx workflow.Context) (*macie2.UpdateFindingsFilterOutput, error) {
	var output macie2.UpdateFindingsFilterOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateMacieSessionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateMacieSessionFuture) Get(ctx workflow.Context) (*macie2.UpdateMacieSessionOutput, error) {
	var output macie2.UpdateMacieSessionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateMemberSessionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateMemberSessionFuture) Get(ctx workflow.Context) (*macie2.UpdateMemberSessionOutput, error) {
	var output macie2.UpdateMemberSessionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateOrganizationConfigurationFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateOrganizationConfigurationFuture) Get(ctx workflow.Context) (*macie2.UpdateOrganizationConfigurationOutput, error) {
	var output macie2.UpdateOrganizationConfigurationOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) AcceptInvitation(ctx workflow.Context, input *macie2.AcceptInvitationInput) (*macie2.AcceptInvitationOutput, error) {
	var output macie2.AcceptInvitationOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-AcceptInvitation", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) AcceptInvitationAsync(ctx workflow.Context, input *macie2.AcceptInvitationInput) *AcceptInvitationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-AcceptInvitation", input)
	return &AcceptInvitationFuture{Future: future}
}

func (a *stub) BatchGetCustomDataIdentifiers(ctx workflow.Context, input *macie2.BatchGetCustomDataIdentifiersInput) (*macie2.BatchGetCustomDataIdentifiersOutput, error) {
	var output macie2.BatchGetCustomDataIdentifiersOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-BatchGetCustomDataIdentifiers", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchGetCustomDataIdentifiersAsync(ctx workflow.Context, input *macie2.BatchGetCustomDataIdentifiersInput) *BatchGetCustomDataIdentifiersFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-BatchGetCustomDataIdentifiers", input)
	return &BatchGetCustomDataIdentifiersFuture{Future: future}
}

func (a *stub) CreateClassificationJob(ctx workflow.Context, input *macie2.CreateClassificationJobInput) (*macie2.CreateClassificationJobOutput, error) {
	var output macie2.CreateClassificationJobOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-CreateClassificationJob", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateClassificationJobAsync(ctx workflow.Context, input *macie2.CreateClassificationJobInput) *CreateClassificationJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-CreateClassificationJob", input)
	return &CreateClassificationJobFuture{Future: future}
}

func (a *stub) CreateCustomDataIdentifier(ctx workflow.Context, input *macie2.CreateCustomDataIdentifierInput) (*macie2.CreateCustomDataIdentifierOutput, error) {
	var output macie2.CreateCustomDataIdentifierOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-CreateCustomDataIdentifier", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateCustomDataIdentifierAsync(ctx workflow.Context, input *macie2.CreateCustomDataIdentifierInput) *CreateCustomDataIdentifierFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-CreateCustomDataIdentifier", input)
	return &CreateCustomDataIdentifierFuture{Future: future}
}

func (a *stub) CreateFindingsFilter(ctx workflow.Context, input *macie2.CreateFindingsFilterInput) (*macie2.CreateFindingsFilterOutput, error) {
	var output macie2.CreateFindingsFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-CreateFindingsFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateFindingsFilterAsync(ctx workflow.Context, input *macie2.CreateFindingsFilterInput) *CreateFindingsFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-CreateFindingsFilter", input)
	return &CreateFindingsFilterFuture{Future: future}
}

func (a *stub) CreateInvitations(ctx workflow.Context, input *macie2.CreateInvitationsInput) (*macie2.CreateInvitationsOutput, error) {
	var output macie2.CreateInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-CreateInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateInvitationsAsync(ctx workflow.Context, input *macie2.CreateInvitationsInput) *CreateInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-CreateInvitations", input)
	return &CreateInvitationsFuture{Future: future}
}

func (a *stub) CreateMember(ctx workflow.Context, input *macie2.CreateMemberInput) (*macie2.CreateMemberOutput, error) {
	var output macie2.CreateMemberOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-CreateMember", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateMemberAsync(ctx workflow.Context, input *macie2.CreateMemberInput) *CreateMemberFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-CreateMember", input)
	return &CreateMemberFuture{Future: future}
}

func (a *stub) CreateSampleFindings(ctx workflow.Context, input *macie2.CreateSampleFindingsInput) (*macie2.CreateSampleFindingsOutput, error) {
	var output macie2.CreateSampleFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-CreateSampleFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateSampleFindingsAsync(ctx workflow.Context, input *macie2.CreateSampleFindingsInput) *CreateSampleFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-CreateSampleFindings", input)
	return &CreateSampleFindingsFuture{Future: future}
}

func (a *stub) DeclineInvitations(ctx workflow.Context, input *macie2.DeclineInvitationsInput) (*macie2.DeclineInvitationsOutput, error) {
	var output macie2.DeclineInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DeclineInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeclineInvitationsAsync(ctx workflow.Context, input *macie2.DeclineInvitationsInput) *DeclineInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DeclineInvitations", input)
	return &DeclineInvitationsFuture{Future: future}
}

func (a *stub) DeleteCustomDataIdentifier(ctx workflow.Context, input *macie2.DeleteCustomDataIdentifierInput) (*macie2.DeleteCustomDataIdentifierOutput, error) {
	var output macie2.DeleteCustomDataIdentifierOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteCustomDataIdentifier", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteCustomDataIdentifierAsync(ctx workflow.Context, input *macie2.DeleteCustomDataIdentifierInput) *DeleteCustomDataIdentifierFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteCustomDataIdentifier", input)
	return &DeleteCustomDataIdentifierFuture{Future: future}
}

func (a *stub) DeleteFindingsFilter(ctx workflow.Context, input *macie2.DeleteFindingsFilterInput) (*macie2.DeleteFindingsFilterOutput, error) {
	var output macie2.DeleteFindingsFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteFindingsFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteFindingsFilterAsync(ctx workflow.Context, input *macie2.DeleteFindingsFilterInput) *DeleteFindingsFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteFindingsFilter", input)
	return &DeleteFindingsFilterFuture{Future: future}
}

func (a *stub) DeleteInvitations(ctx workflow.Context, input *macie2.DeleteInvitationsInput) (*macie2.DeleteInvitationsOutput, error) {
	var output macie2.DeleteInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteInvitationsAsync(ctx workflow.Context, input *macie2.DeleteInvitationsInput) *DeleteInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteInvitations", input)
	return &DeleteInvitationsFuture{Future: future}
}

func (a *stub) DeleteMember(ctx workflow.Context, input *macie2.DeleteMemberInput) (*macie2.DeleteMemberOutput, error) {
	var output macie2.DeleteMemberOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteMember", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteMemberAsync(ctx workflow.Context, input *macie2.DeleteMemberInput) *DeleteMemberFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DeleteMember", input)
	return &DeleteMemberFuture{Future: future}
}

func (a *stub) DescribeBuckets(ctx workflow.Context, input *macie2.DescribeBucketsInput) (*macie2.DescribeBucketsOutput, error) {
	var output macie2.DescribeBucketsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DescribeBuckets", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeBucketsAsync(ctx workflow.Context, input *macie2.DescribeBucketsInput) *DescribeBucketsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DescribeBuckets", input)
	return &DescribeBucketsFuture{Future: future}
}

func (a *stub) DescribeClassificationJob(ctx workflow.Context, input *macie2.DescribeClassificationJobInput) (*macie2.DescribeClassificationJobOutput, error) {
	var output macie2.DescribeClassificationJobOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DescribeClassificationJob", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeClassificationJobAsync(ctx workflow.Context, input *macie2.DescribeClassificationJobInput) *DescribeClassificationJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DescribeClassificationJob", input)
	return &DescribeClassificationJobFuture{Future: future}
}

func (a *stub) DescribeOrganizationConfiguration(ctx workflow.Context, input *macie2.DescribeOrganizationConfigurationInput) (*macie2.DescribeOrganizationConfigurationOutput, error) {
	var output macie2.DescribeOrganizationConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DescribeOrganizationConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeOrganizationConfigurationAsync(ctx workflow.Context, input *macie2.DescribeOrganizationConfigurationInput) *DescribeOrganizationConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DescribeOrganizationConfiguration", input)
	return &DescribeOrganizationConfigurationFuture{Future: future}
}

func (a *stub) DisableMacie(ctx workflow.Context, input *macie2.DisableMacieInput) (*macie2.DisableMacieOutput, error) {
	var output macie2.DisableMacieOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DisableMacie", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisableMacieAsync(ctx workflow.Context, input *macie2.DisableMacieInput) *DisableMacieFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DisableMacie", input)
	return &DisableMacieFuture{Future: future}
}

func (a *stub) DisableOrganizationAdminAccount(ctx workflow.Context, input *macie2.DisableOrganizationAdminAccountInput) (*macie2.DisableOrganizationAdminAccountOutput, error) {
	var output macie2.DisableOrganizationAdminAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DisableOrganizationAdminAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisableOrganizationAdminAccountAsync(ctx workflow.Context, input *macie2.DisableOrganizationAdminAccountInput) *DisableOrganizationAdminAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DisableOrganizationAdminAccount", input)
	return &DisableOrganizationAdminAccountFuture{Future: future}
}

func (a *stub) DisassociateFromMasterAccount(ctx workflow.Context, input *macie2.DisassociateFromMasterAccountInput) (*macie2.DisassociateFromMasterAccountOutput, error) {
	var output macie2.DisassociateFromMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DisassociateFromMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisassociateFromMasterAccountAsync(ctx workflow.Context, input *macie2.DisassociateFromMasterAccountInput) *DisassociateFromMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DisassociateFromMasterAccount", input)
	return &DisassociateFromMasterAccountFuture{Future: future}
}

func (a *stub) DisassociateMember(ctx workflow.Context, input *macie2.DisassociateMemberInput) (*macie2.DisassociateMemberOutput, error) {
	var output macie2.DisassociateMemberOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-DisassociateMember", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DisassociateMemberAsync(ctx workflow.Context, input *macie2.DisassociateMemberInput) *DisassociateMemberFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-DisassociateMember", input)
	return &DisassociateMemberFuture{Future: future}
}

func (a *stub) EnableMacie(ctx workflow.Context, input *macie2.EnableMacieInput) (*macie2.EnableMacieOutput, error) {
	var output macie2.EnableMacieOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-EnableMacie", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) EnableMacieAsync(ctx workflow.Context, input *macie2.EnableMacieInput) *EnableMacieFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-EnableMacie", input)
	return &EnableMacieFuture{Future: future}
}

func (a *stub) EnableOrganizationAdminAccount(ctx workflow.Context, input *macie2.EnableOrganizationAdminAccountInput) (*macie2.EnableOrganizationAdminAccountOutput, error) {
	var output macie2.EnableOrganizationAdminAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-EnableOrganizationAdminAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) EnableOrganizationAdminAccountAsync(ctx workflow.Context, input *macie2.EnableOrganizationAdminAccountInput) *EnableOrganizationAdminAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-EnableOrganizationAdminAccount", input)
	return &EnableOrganizationAdminAccountFuture{Future: future}
}

func (a *stub) GetBucketStatistics(ctx workflow.Context, input *macie2.GetBucketStatisticsInput) (*macie2.GetBucketStatisticsOutput, error) {
	var output macie2.GetBucketStatisticsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetBucketStatistics", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetBucketStatisticsAsync(ctx workflow.Context, input *macie2.GetBucketStatisticsInput) *GetBucketStatisticsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetBucketStatistics", input)
	return &GetBucketStatisticsFuture{Future: future}
}

func (a *stub) GetClassificationExportConfiguration(ctx workflow.Context, input *macie2.GetClassificationExportConfigurationInput) (*macie2.GetClassificationExportConfigurationOutput, error) {
	var output macie2.GetClassificationExportConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetClassificationExportConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetClassificationExportConfigurationAsync(ctx workflow.Context, input *macie2.GetClassificationExportConfigurationInput) *GetClassificationExportConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetClassificationExportConfiguration", input)
	return &GetClassificationExportConfigurationFuture{Future: future}
}

func (a *stub) GetCustomDataIdentifier(ctx workflow.Context, input *macie2.GetCustomDataIdentifierInput) (*macie2.GetCustomDataIdentifierOutput, error) {
	var output macie2.GetCustomDataIdentifierOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetCustomDataIdentifier", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetCustomDataIdentifierAsync(ctx workflow.Context, input *macie2.GetCustomDataIdentifierInput) *GetCustomDataIdentifierFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetCustomDataIdentifier", input)
	return &GetCustomDataIdentifierFuture{Future: future}
}

func (a *stub) GetFindingStatistics(ctx workflow.Context, input *macie2.GetFindingStatisticsInput) (*macie2.GetFindingStatisticsOutput, error) {
	var output macie2.GetFindingStatisticsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetFindingStatistics", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetFindingStatisticsAsync(ctx workflow.Context, input *macie2.GetFindingStatisticsInput) *GetFindingStatisticsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetFindingStatistics", input)
	return &GetFindingStatisticsFuture{Future: future}
}

func (a *stub) GetFindings(ctx workflow.Context, input *macie2.GetFindingsInput) (*macie2.GetFindingsOutput, error) {
	var output macie2.GetFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetFindingsAsync(ctx workflow.Context, input *macie2.GetFindingsInput) *GetFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetFindings", input)
	return &GetFindingsFuture{Future: future}
}

func (a *stub) GetFindingsFilter(ctx workflow.Context, input *macie2.GetFindingsFilterInput) (*macie2.GetFindingsFilterOutput, error) {
	var output macie2.GetFindingsFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetFindingsFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetFindingsFilterAsync(ctx workflow.Context, input *macie2.GetFindingsFilterInput) *GetFindingsFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetFindingsFilter", input)
	return &GetFindingsFilterFuture{Future: future}
}

func (a *stub) GetInvitationsCount(ctx workflow.Context, input *macie2.GetInvitationsCountInput) (*macie2.GetInvitationsCountOutput, error) {
	var output macie2.GetInvitationsCountOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetInvitationsCount", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetInvitationsCountAsync(ctx workflow.Context, input *macie2.GetInvitationsCountInput) *GetInvitationsCountFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetInvitationsCount", input)
	return &GetInvitationsCountFuture{Future: future}
}

func (a *stub) GetMacieSession(ctx workflow.Context, input *macie2.GetMacieSessionInput) (*macie2.GetMacieSessionOutput, error) {
	var output macie2.GetMacieSessionOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetMacieSession", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetMacieSessionAsync(ctx workflow.Context, input *macie2.GetMacieSessionInput) *GetMacieSessionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetMacieSession", input)
	return &GetMacieSessionFuture{Future: future}
}

func (a *stub) GetMasterAccount(ctx workflow.Context, input *macie2.GetMasterAccountInput) (*macie2.GetMasterAccountOutput, error) {
	var output macie2.GetMasterAccountOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetMasterAccount", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetMasterAccountAsync(ctx workflow.Context, input *macie2.GetMasterAccountInput) *GetMasterAccountFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetMasterAccount", input)
	return &GetMasterAccountFuture{Future: future}
}

func (a *stub) GetMember(ctx workflow.Context, input *macie2.GetMemberInput) (*macie2.GetMemberOutput, error) {
	var output macie2.GetMemberOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetMember", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetMemberAsync(ctx workflow.Context, input *macie2.GetMemberInput) *GetMemberFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetMember", input)
	return &GetMemberFuture{Future: future}
}

func (a *stub) GetUsageStatistics(ctx workflow.Context, input *macie2.GetUsageStatisticsInput) (*macie2.GetUsageStatisticsOutput, error) {
	var output macie2.GetUsageStatisticsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetUsageStatistics", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetUsageStatisticsAsync(ctx workflow.Context, input *macie2.GetUsageStatisticsInput) *GetUsageStatisticsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetUsageStatistics", input)
	return &GetUsageStatisticsFuture{Future: future}
}

func (a *stub) GetUsageTotals(ctx workflow.Context, input *macie2.GetUsageTotalsInput) (*macie2.GetUsageTotalsOutput, error) {
	var output macie2.GetUsageTotalsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-GetUsageTotals", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetUsageTotalsAsync(ctx workflow.Context, input *macie2.GetUsageTotalsInput) *GetUsageTotalsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-GetUsageTotals", input)
	return &GetUsageTotalsFuture{Future: future}
}

func (a *stub) ListClassificationJobs(ctx workflow.Context, input *macie2.ListClassificationJobsInput) (*macie2.ListClassificationJobsOutput, error) {
	var output macie2.ListClassificationJobsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListClassificationJobs", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListClassificationJobsAsync(ctx workflow.Context, input *macie2.ListClassificationJobsInput) *ListClassificationJobsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListClassificationJobs", input)
	return &ListClassificationJobsFuture{Future: future}
}

func (a *stub) ListCustomDataIdentifiers(ctx workflow.Context, input *macie2.ListCustomDataIdentifiersInput) (*macie2.ListCustomDataIdentifiersOutput, error) {
	var output macie2.ListCustomDataIdentifiersOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListCustomDataIdentifiers", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListCustomDataIdentifiersAsync(ctx workflow.Context, input *macie2.ListCustomDataIdentifiersInput) *ListCustomDataIdentifiersFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListCustomDataIdentifiers", input)
	return &ListCustomDataIdentifiersFuture{Future: future}
}

func (a *stub) ListFindings(ctx workflow.Context, input *macie2.ListFindingsInput) (*macie2.ListFindingsOutput, error) {
	var output macie2.ListFindingsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListFindings", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListFindingsAsync(ctx workflow.Context, input *macie2.ListFindingsInput) *ListFindingsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListFindings", input)
	return &ListFindingsFuture{Future: future}
}

func (a *stub) ListFindingsFilters(ctx workflow.Context, input *macie2.ListFindingsFiltersInput) (*macie2.ListFindingsFiltersOutput, error) {
	var output macie2.ListFindingsFiltersOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListFindingsFilters", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListFindingsFiltersAsync(ctx workflow.Context, input *macie2.ListFindingsFiltersInput) *ListFindingsFiltersFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListFindingsFilters", input)
	return &ListFindingsFiltersFuture{Future: future}
}

func (a *stub) ListInvitations(ctx workflow.Context, input *macie2.ListInvitationsInput) (*macie2.ListInvitationsOutput, error) {
	var output macie2.ListInvitationsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListInvitations", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListInvitationsAsync(ctx workflow.Context, input *macie2.ListInvitationsInput) *ListInvitationsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListInvitations", input)
	return &ListInvitationsFuture{Future: future}
}

func (a *stub) ListMembers(ctx workflow.Context, input *macie2.ListMembersInput) (*macie2.ListMembersOutput, error) {
	var output macie2.ListMembersOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListMembers", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListMembersAsync(ctx workflow.Context, input *macie2.ListMembersInput) *ListMembersFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListMembers", input)
	return &ListMembersFuture{Future: future}
}

func (a *stub) ListOrganizationAdminAccounts(ctx workflow.Context, input *macie2.ListOrganizationAdminAccountsInput) (*macie2.ListOrganizationAdminAccountsOutput, error) {
	var output macie2.ListOrganizationAdminAccountsOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListOrganizationAdminAccounts", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListOrganizationAdminAccountsAsync(ctx workflow.Context, input *macie2.ListOrganizationAdminAccountsInput) *ListOrganizationAdminAccountsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListOrganizationAdminAccounts", input)
	return &ListOrganizationAdminAccountsFuture{Future: future}
}

func (a *stub) ListTagsForResource(ctx workflow.Context, input *macie2.ListTagsForResourceInput) (*macie2.ListTagsForResourceOutput, error) {
	var output macie2.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTagsForResourceAsync(ctx workflow.Context, input *macie2.ListTagsForResourceInput) *ListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-ListTagsForResource", input)
	return &ListTagsForResourceFuture{Future: future}
}

func (a *stub) PutClassificationExportConfiguration(ctx workflow.Context, input *macie2.PutClassificationExportConfigurationInput) (*macie2.PutClassificationExportConfigurationOutput, error) {
	var output macie2.PutClassificationExportConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-PutClassificationExportConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutClassificationExportConfigurationAsync(ctx workflow.Context, input *macie2.PutClassificationExportConfigurationInput) *PutClassificationExportConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-PutClassificationExportConfiguration", input)
	return &PutClassificationExportConfigurationFuture{Future: future}
}

func (a *stub) TagResource(ctx workflow.Context, input *macie2.TagResourceInput) (*macie2.TagResourceOutput, error) {
	var output macie2.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) TagResourceAsync(ctx workflow.Context, input *macie2.TagResourceInput) *TagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-TagResource", input)
	return &TagResourceFuture{Future: future}
}

func (a *stub) TestCustomDataIdentifier(ctx workflow.Context, input *macie2.TestCustomDataIdentifierInput) (*macie2.TestCustomDataIdentifierOutput, error) {
	var output macie2.TestCustomDataIdentifierOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-TestCustomDataIdentifier", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) TestCustomDataIdentifierAsync(ctx workflow.Context, input *macie2.TestCustomDataIdentifierInput) *TestCustomDataIdentifierFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-TestCustomDataIdentifier", input)
	return &TestCustomDataIdentifierFuture{Future: future}
}

func (a *stub) UntagResource(ctx workflow.Context, input *macie2.UntagResourceInput) (*macie2.UntagResourceOutput, error) {
	var output macie2.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UntagResourceAsync(ctx workflow.Context, input *macie2.UntagResourceInput) *UntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-UntagResource", input)
	return &UntagResourceFuture{Future: future}
}

func (a *stub) UpdateClassificationJob(ctx workflow.Context, input *macie2.UpdateClassificationJobInput) (*macie2.UpdateClassificationJobOutput, error) {
	var output macie2.UpdateClassificationJobOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateClassificationJob", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateClassificationJobAsync(ctx workflow.Context, input *macie2.UpdateClassificationJobInput) *UpdateClassificationJobFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateClassificationJob", input)
	return &UpdateClassificationJobFuture{Future: future}
}

func (a *stub) UpdateFindingsFilter(ctx workflow.Context, input *macie2.UpdateFindingsFilterInput) (*macie2.UpdateFindingsFilterOutput, error) {
	var output macie2.UpdateFindingsFilterOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateFindingsFilter", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateFindingsFilterAsync(ctx workflow.Context, input *macie2.UpdateFindingsFilterInput) *UpdateFindingsFilterFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateFindingsFilter", input)
	return &UpdateFindingsFilterFuture{Future: future}
}

func (a *stub) UpdateMacieSession(ctx workflow.Context, input *macie2.UpdateMacieSessionInput) (*macie2.UpdateMacieSessionOutput, error) {
	var output macie2.UpdateMacieSessionOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateMacieSession", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateMacieSessionAsync(ctx workflow.Context, input *macie2.UpdateMacieSessionInput) *UpdateMacieSessionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateMacieSession", input)
	return &UpdateMacieSessionFuture{Future: future}
}

func (a *stub) UpdateMemberSession(ctx workflow.Context, input *macie2.UpdateMemberSessionInput) (*macie2.UpdateMemberSessionOutput, error) {
	var output macie2.UpdateMemberSessionOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateMemberSession", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateMemberSessionAsync(ctx workflow.Context, input *macie2.UpdateMemberSessionInput) *UpdateMemberSessionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateMemberSession", input)
	return &UpdateMemberSessionFuture{Future: future}
}

func (a *stub) UpdateOrganizationConfiguration(ctx workflow.Context, input *macie2.UpdateOrganizationConfigurationInput) (*macie2.UpdateOrganizationConfigurationOutput, error) {
	var output macie2.UpdateOrganizationConfigurationOutput
	err := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateOrganizationConfiguration", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateOrganizationConfigurationAsync(ctx workflow.Context, input *macie2.UpdateOrganizationConfigurationInput) *UpdateOrganizationConfigurationFuture {
	future := workflow.ExecuteActivity(ctx, "aws-macie2-UpdateOrganizationConfiguration", input)
	return &UpdateOrganizationConfigurationFuture{Future: future}
}
