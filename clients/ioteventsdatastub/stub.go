// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package ioteventsdatastub

import (
	"github.com/aws/aws-sdk-go/service/ioteventsdata"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type BatchPutMessageFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *BatchPutMessageFuture) Get(ctx workflow.Context) (*ioteventsdata.BatchPutMessageOutput, error) {
	var output ioteventsdata.BatchPutMessageOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type BatchUpdateDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *BatchUpdateDetectorFuture) Get(ctx workflow.Context) (*ioteventsdata.BatchUpdateDetectorOutput, error) {
	var output ioteventsdata.BatchUpdateDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeDetectorFuture) Get(ctx workflow.Context) (*ioteventsdata.DescribeDetectorOutput, error) {
	var output ioteventsdata.DescribeDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListDetectorsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListDetectorsFuture) Get(ctx workflow.Context) (*ioteventsdata.ListDetectorsOutput, error) {
	var output ioteventsdata.ListDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchPutMessage(ctx workflow.Context, input *ioteventsdata.BatchPutMessageInput) (*ioteventsdata.BatchPutMessageOutput, error) {
	var output ioteventsdata.BatchPutMessageOutput
	err := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-BatchPutMessage", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchPutMessageAsync(ctx workflow.Context, input *ioteventsdata.BatchPutMessageInput) *BatchPutMessageFuture {
	future := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-BatchPutMessage", input)
	return &BatchPutMessageFuture{Future: future}
}

func (a *stub) BatchUpdateDetector(ctx workflow.Context, input *ioteventsdata.BatchUpdateDetectorInput) (*ioteventsdata.BatchUpdateDetectorOutput, error) {
	var output ioteventsdata.BatchUpdateDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-BatchUpdateDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchUpdateDetectorAsync(ctx workflow.Context, input *ioteventsdata.BatchUpdateDetectorInput) *BatchUpdateDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-BatchUpdateDetector", input)
	return &BatchUpdateDetectorFuture{Future: future}
}

func (a *stub) DescribeDetector(ctx workflow.Context, input *ioteventsdata.DescribeDetectorInput) (*ioteventsdata.DescribeDetectorOutput, error) {
	var output ioteventsdata.DescribeDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-DescribeDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeDetectorAsync(ctx workflow.Context, input *ioteventsdata.DescribeDetectorInput) *DescribeDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-DescribeDetector", input)
	return &DescribeDetectorFuture{Future: future}
}

func (a *stub) ListDetectors(ctx workflow.Context, input *ioteventsdata.ListDetectorsInput) (*ioteventsdata.ListDetectorsOutput, error) {
	var output ioteventsdata.ListDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-ListDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListDetectorsAsync(ctx workflow.Context, input *ioteventsdata.ListDetectorsInput) *ListDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-ioteventsdata-ListDetectors", input)
	return &ListDetectorsFuture{Future: future}
}
