// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package codestarconnectionsstub

import (
	"github.com/aws/aws-sdk-go/service/codestarconnections"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type CreateConnectionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.CreateConnectionOutput, error) {
	var output codestarconnections.CreateConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateHostFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateHostFuture) Get(ctx workflow.Context) (*codestarconnections.CreateHostOutput, error) {
	var output codestarconnections.CreateHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteConnectionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.DeleteConnectionOutput, error) {
	var output codestarconnections.DeleteConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteHostFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteHostFuture) Get(ctx workflow.Context) (*codestarconnections.DeleteHostOutput, error) {
	var output codestarconnections.DeleteHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetConnectionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetConnectionFuture) Get(ctx workflow.Context) (*codestarconnections.GetConnectionOutput, error) {
	var output codestarconnections.GetConnectionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetHostFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetHostFuture) Get(ctx workflow.Context) (*codestarconnections.GetHostOutput, error) {
	var output codestarconnections.GetHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListConnectionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListConnectionsFuture) Get(ctx workflow.Context) (*codestarconnections.ListConnectionsOutput, error) {
	var output codestarconnections.ListConnectionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListHostsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListHostsFuture) Get(ctx workflow.Context) (*codestarconnections.ListHostsOutput, error) {
	var output codestarconnections.ListHostsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTagsForResourceFuture) Get(ctx workflow.Context) (*codestarconnections.ListTagsForResourceOutput, error) {
	var output codestarconnections.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type TagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *TagResourceFuture) Get(ctx workflow.Context) (*codestarconnections.TagResourceOutput, error) {
	var output codestarconnections.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UntagResourceFuture) Get(ctx workflow.Context) (*codestarconnections.UntagResourceOutput, error) {
	var output codestarconnections.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateHostFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateHostFuture) Get(ctx workflow.Context) (*codestarconnections.UpdateHostOutput, error) {
	var output codestarconnections.UpdateHostOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateConnection(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) (*codestarconnections.CreateConnectionOutput, error) {
	var output codestarconnections.CreateConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-CreateConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateConnectionAsync(ctx workflow.Context, input *codestarconnections.CreateConnectionInput) *CreateConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-CreateConnection", input)
	return &CreateConnectionFuture{Future: future}
}

func (a *stub) CreateHost(ctx workflow.Context, input *codestarconnections.CreateHostInput) (*codestarconnections.CreateHostOutput, error) {
	var output codestarconnections.CreateHostOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-CreateHost", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateHostAsync(ctx workflow.Context, input *codestarconnections.CreateHostInput) *CreateHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-CreateHost", input)
	return &CreateHostFuture{Future: future}
}

func (a *stub) DeleteConnection(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) (*codestarconnections.DeleteConnectionOutput, error) {
	var output codestarconnections.DeleteConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-DeleteConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteConnectionAsync(ctx workflow.Context, input *codestarconnections.DeleteConnectionInput) *DeleteConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-DeleteConnection", input)
	return &DeleteConnectionFuture{Future: future}
}

func (a *stub) DeleteHost(ctx workflow.Context, input *codestarconnections.DeleteHostInput) (*codestarconnections.DeleteHostOutput, error) {
	var output codestarconnections.DeleteHostOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-DeleteHost", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteHostAsync(ctx workflow.Context, input *codestarconnections.DeleteHostInput) *DeleteHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-DeleteHost", input)
	return &DeleteHostFuture{Future: future}
}

func (a *stub) GetConnection(ctx workflow.Context, input *codestarconnections.GetConnectionInput) (*codestarconnections.GetConnectionOutput, error) {
	var output codestarconnections.GetConnectionOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-GetConnection", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetConnectionAsync(ctx workflow.Context, input *codestarconnections.GetConnectionInput) *GetConnectionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-GetConnection", input)
	return &GetConnectionFuture{Future: future}
}

func (a *stub) GetHost(ctx workflow.Context, input *codestarconnections.GetHostInput) (*codestarconnections.GetHostOutput, error) {
	var output codestarconnections.GetHostOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-GetHost", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetHostAsync(ctx workflow.Context, input *codestarconnections.GetHostInput) *GetHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-GetHost", input)
	return &GetHostFuture{Future: future}
}

func (a *stub) ListConnections(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) (*codestarconnections.ListConnectionsOutput, error) {
	var output codestarconnections.ListConnectionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-ListConnections", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListConnectionsAsync(ctx workflow.Context, input *codestarconnections.ListConnectionsInput) *ListConnectionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-ListConnections", input)
	return &ListConnectionsFuture{Future: future}
}

func (a *stub) ListHosts(ctx workflow.Context, input *codestarconnections.ListHostsInput) (*codestarconnections.ListHostsOutput, error) {
	var output codestarconnections.ListHostsOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-ListHosts", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListHostsAsync(ctx workflow.Context, input *codestarconnections.ListHostsInput) *ListHostsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-ListHosts", input)
	return &ListHostsFuture{Future: future}
}

func (a *stub) ListTagsForResource(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) (*codestarconnections.ListTagsForResourceOutput, error) {
	var output codestarconnections.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTagsForResourceAsync(ctx workflow.Context, input *codestarconnections.ListTagsForResourceInput) *ListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-ListTagsForResource", input)
	return &ListTagsForResourceFuture{Future: future}
}

func (a *stub) TagResource(ctx workflow.Context, input *codestarconnections.TagResourceInput) (*codestarconnections.TagResourceOutput, error) {
	var output codestarconnections.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) TagResourceAsync(ctx workflow.Context, input *codestarconnections.TagResourceInput) *TagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-TagResource", input)
	return &TagResourceFuture{Future: future}
}

func (a *stub) UntagResource(ctx workflow.Context, input *codestarconnections.UntagResourceInput) (*codestarconnections.UntagResourceOutput, error) {
	var output codestarconnections.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UntagResourceAsync(ctx workflow.Context, input *codestarconnections.UntagResourceInput) *UntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-UntagResource", input)
	return &UntagResourceFuture{Future: future}
}

func (a *stub) UpdateHost(ctx workflow.Context, input *codestarconnections.UpdateHostInput) (*codestarconnections.UpdateHostOutput, error) {
	var output codestarconnections.UpdateHostOutput
	err := workflow.ExecuteActivity(ctx, "aws-codestarconnections-UpdateHost", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateHostAsync(ctx workflow.Context, input *codestarconnections.UpdateHostInput) *UpdateHostFuture {
	future := workflow.ExecuteActivity(ctx, "aws-codestarconnections-UpdateHost", input)
	return &UpdateHostFuture{Future: future}
}
