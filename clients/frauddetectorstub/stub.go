// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package frauddetectorstub

import (
	"github.com/aws/aws-sdk-go/service/frauddetector"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type stub struct{}

type BatchCreateVariableFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *BatchCreateVariableFuture) Get(ctx workflow.Context) (*frauddetector.BatchCreateVariableOutput, error) {
	var output frauddetector.BatchCreateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type BatchGetVariableFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *BatchGetVariableFuture) Get(ctx workflow.Context) (*frauddetector.BatchGetVariableOutput, error) {
	var output frauddetector.BatchGetVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateDetectorVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.CreateDetectorVersionOutput, error) {
	var output frauddetector.CreateDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateModelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateModelFuture) Get(ctx workflow.Context) (*frauddetector.CreateModelOutput, error) {
	var output frauddetector.CreateModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateModelVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.CreateModelVersionOutput, error) {
	var output frauddetector.CreateModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateRuleFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateRuleFuture) Get(ctx workflow.Context) (*frauddetector.CreateRuleOutput, error) {
	var output frauddetector.CreateRuleOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type CreateVariableFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *CreateVariableFuture) Get(ctx workflow.Context) (*frauddetector.CreateVariableOutput, error) {
	var output frauddetector.CreateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteDetectorFuture) Get(ctx workflow.Context) (*frauddetector.DeleteDetectorOutput, error) {
	var output frauddetector.DeleteDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteDetectorVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.DeleteDetectorVersionOutput, error) {
	var output frauddetector.DeleteDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEntityTypeFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEntityTypeFuture) Get(ctx workflow.Context) (*frauddetector.DeleteEntityTypeOutput, error) {
	var output frauddetector.DeleteEntityTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEventFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEventFuture) Get(ctx workflow.Context) (*frauddetector.DeleteEventOutput, error) {
	var output frauddetector.DeleteEventOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteEventTypeFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteEventTypeFuture) Get(ctx workflow.Context) (*frauddetector.DeleteEventTypeOutput, error) {
	var output frauddetector.DeleteEventTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteExternalModelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteExternalModelFuture) Get(ctx workflow.Context) (*frauddetector.DeleteExternalModelOutput, error) {
	var output frauddetector.DeleteExternalModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteLabelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteLabelFuture) Get(ctx workflow.Context) (*frauddetector.DeleteLabelOutput, error) {
	var output frauddetector.DeleteLabelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteModelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteModelFuture) Get(ctx workflow.Context) (*frauddetector.DeleteModelOutput, error) {
	var output frauddetector.DeleteModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteModelVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.DeleteModelVersionOutput, error) {
	var output frauddetector.DeleteModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteOutcomeFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteOutcomeFuture) Get(ctx workflow.Context) (*frauddetector.DeleteOutcomeOutput, error) {
	var output frauddetector.DeleteOutcomeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteRuleFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteRuleFuture) Get(ctx workflow.Context) (*frauddetector.DeleteRuleOutput, error) {
	var output frauddetector.DeleteRuleOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DeleteVariableFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DeleteVariableFuture) Get(ctx workflow.Context) (*frauddetector.DeleteVariableOutput, error) {
	var output frauddetector.DeleteVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeDetectorFuture) Get(ctx workflow.Context) (*frauddetector.DescribeDetectorOutput, error) {
	var output frauddetector.DescribeDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type DescribeModelVersionsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *DescribeModelVersionsFuture) Get(ctx workflow.Context) (*frauddetector.DescribeModelVersionsOutput, error) {
	var output frauddetector.DescribeModelVersionsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDetectorVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.GetDetectorVersionOutput, error) {
	var output frauddetector.GetDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetDetectorsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetDetectorsFuture) Get(ctx workflow.Context) (*frauddetector.GetDetectorsOutput, error) {
	var output frauddetector.GetDetectorsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEntityTypesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEntityTypesFuture) Get(ctx workflow.Context) (*frauddetector.GetEntityTypesOutput, error) {
	var output frauddetector.GetEntityTypesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEventPredictionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEventPredictionFuture) Get(ctx workflow.Context) (*frauddetector.GetEventPredictionOutput, error) {
	var output frauddetector.GetEventPredictionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetEventTypesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetEventTypesFuture) Get(ctx workflow.Context) (*frauddetector.GetEventTypesOutput, error) {
	var output frauddetector.GetEventTypesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetExternalModelsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetExternalModelsFuture) Get(ctx workflow.Context) (*frauddetector.GetExternalModelsOutput, error) {
	var output frauddetector.GetExternalModelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetKMSEncryptionKeyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetKMSEncryptionKeyFuture) Get(ctx workflow.Context) (*frauddetector.GetKMSEncryptionKeyOutput, error) {
	var output frauddetector.GetKMSEncryptionKeyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetLabelsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetLabelsFuture) Get(ctx workflow.Context) (*frauddetector.GetLabelsOutput, error) {
	var output frauddetector.GetLabelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetModelVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.GetModelVersionOutput, error) {
	var output frauddetector.GetModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetModelsFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetModelsFuture) Get(ctx workflow.Context) (*frauddetector.GetModelsOutput, error) {
	var output frauddetector.GetModelsOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetOutcomesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetOutcomesFuture) Get(ctx workflow.Context) (*frauddetector.GetOutcomesOutput, error) {
	var output frauddetector.GetOutcomesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetRulesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetRulesFuture) Get(ctx workflow.Context) (*frauddetector.GetRulesOutput, error) {
	var output frauddetector.GetRulesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type GetVariablesFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *GetVariablesFuture) Get(ctx workflow.Context) (*frauddetector.GetVariablesOutput, error) {
	var output frauddetector.GetVariablesOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type ListTagsForResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *ListTagsForResourceFuture) Get(ctx workflow.Context) (*frauddetector.ListTagsForResourceOutput, error) {
	var output frauddetector.ListTagsForResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutDetectorFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutDetectorFuture) Get(ctx workflow.Context) (*frauddetector.PutDetectorOutput, error) {
	var output frauddetector.PutDetectorOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutEntityTypeFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutEntityTypeFuture) Get(ctx workflow.Context) (*frauddetector.PutEntityTypeOutput, error) {
	var output frauddetector.PutEntityTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutEventTypeFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutEventTypeFuture) Get(ctx workflow.Context) (*frauddetector.PutEventTypeOutput, error) {
	var output frauddetector.PutEventTypeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutExternalModelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutExternalModelFuture) Get(ctx workflow.Context) (*frauddetector.PutExternalModelOutput, error) {
	var output frauddetector.PutExternalModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutKMSEncryptionKeyFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutKMSEncryptionKeyFuture) Get(ctx workflow.Context) (*frauddetector.PutKMSEncryptionKeyOutput, error) {
	var output frauddetector.PutKMSEncryptionKeyOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutLabelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutLabelFuture) Get(ctx workflow.Context) (*frauddetector.PutLabelOutput, error) {
	var output frauddetector.PutLabelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type PutOutcomeFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *PutOutcomeFuture) Get(ctx workflow.Context) (*frauddetector.PutOutcomeOutput, error) {
	var output frauddetector.PutOutcomeOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type TagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *TagResourceFuture) Get(ctx workflow.Context) (*frauddetector.TagResourceOutput, error) {
	var output frauddetector.TagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UntagResourceFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UntagResourceFuture) Get(ctx workflow.Context) (*frauddetector.UntagResourceOutput, error) {
	var output frauddetector.UntagResourceOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateDetectorVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateDetectorVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionOutput, error) {
	var output frauddetector.UpdateDetectorVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateDetectorVersionMetadataFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateDetectorVersionMetadataFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionMetadataOutput, error) {
	var output frauddetector.UpdateDetectorVersionMetadataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateDetectorVersionStatusFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateDetectorVersionStatusFuture) Get(ctx workflow.Context) (*frauddetector.UpdateDetectorVersionStatusOutput, error) {
	var output frauddetector.UpdateDetectorVersionStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateModelFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateModelFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelOutput, error) {
	var output frauddetector.UpdateModelOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateModelVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateModelVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelVersionOutput, error) {
	var output frauddetector.UpdateModelVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateModelVersionStatusFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateModelVersionStatusFuture) Get(ctx workflow.Context) (*frauddetector.UpdateModelVersionStatusOutput, error) {
	var output frauddetector.UpdateModelVersionStatusOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateRuleMetadataFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateRuleMetadataFuture) Get(ctx workflow.Context) (*frauddetector.UpdateRuleMetadataOutput, error) {
	var output frauddetector.UpdateRuleMetadataOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateRuleVersionFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateRuleVersionFuture) Get(ctx workflow.Context) (*frauddetector.UpdateRuleVersionOutput, error) {
	var output frauddetector.UpdateRuleVersionOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

type UpdateVariableFuture struct {
	// public to support Selector.addFuture
	Future workflow.Future
}

func (r *UpdateVariableFuture) Get(ctx workflow.Context) (*frauddetector.UpdateVariableOutput, error) {
	var output frauddetector.UpdateVariableOutput
	err := r.Future.Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchCreateVariable(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) (*frauddetector.BatchCreateVariableOutput, error) {
	var output frauddetector.BatchCreateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-BatchCreateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchCreateVariableAsync(ctx workflow.Context, input *frauddetector.BatchCreateVariableInput) *BatchCreateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-BatchCreateVariable", input)
	return &BatchCreateVariableFuture{Future: future}
}

func (a *stub) BatchGetVariable(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) (*frauddetector.BatchGetVariableOutput, error) {
	var output frauddetector.BatchGetVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-BatchGetVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) BatchGetVariableAsync(ctx workflow.Context, input *frauddetector.BatchGetVariableInput) *BatchGetVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-BatchGetVariable", input)
	return &BatchGetVariableFuture{Future: future}
}

func (a *stub) CreateDetectorVersion(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) (*frauddetector.CreateDetectorVersionOutput, error) {
	var output frauddetector.CreateDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.CreateDetectorVersionInput) *CreateDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateDetectorVersion", input)
	return &CreateDetectorVersionFuture{Future: future}
}

func (a *stub) CreateModel(ctx workflow.Context, input *frauddetector.CreateModelInput) (*frauddetector.CreateModelOutput, error) {
	var output frauddetector.CreateModelOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateModel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateModelAsync(ctx workflow.Context, input *frauddetector.CreateModelInput) *CreateModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateModel", input)
	return &CreateModelFuture{Future: future}
}

func (a *stub) CreateModelVersion(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) (*frauddetector.CreateModelVersionOutput, error) {
	var output frauddetector.CreateModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateModelVersionAsync(ctx workflow.Context, input *frauddetector.CreateModelVersionInput) *CreateModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateModelVersion", input)
	return &CreateModelVersionFuture{Future: future}
}

func (a *stub) CreateRule(ctx workflow.Context, input *frauddetector.CreateRuleInput) (*frauddetector.CreateRuleOutput, error) {
	var output frauddetector.CreateRuleOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateRule", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateRuleAsync(ctx workflow.Context, input *frauddetector.CreateRuleInput) *CreateRuleFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateRule", input)
	return &CreateRuleFuture{Future: future}
}

func (a *stub) CreateVariable(ctx workflow.Context, input *frauddetector.CreateVariableInput) (*frauddetector.CreateVariableOutput, error) {
	var output frauddetector.CreateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) CreateVariableAsync(ctx workflow.Context, input *frauddetector.CreateVariableInput) *CreateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-CreateVariable", input)
	return &CreateVariableFuture{Future: future}
}

func (a *stub) DeleteDetector(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) (*frauddetector.DeleteDetectorOutput, error) {
	var output frauddetector.DeleteDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteDetectorAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorInput) *DeleteDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteDetector", input)
	return &DeleteDetectorFuture{Future: future}
}

func (a *stub) DeleteDetectorVersion(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) (*frauddetector.DeleteDetectorVersionOutput, error) {
	var output frauddetector.DeleteDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteDetectorVersionAsync(ctx workflow.Context, input *frauddetector.DeleteDetectorVersionInput) *DeleteDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteDetectorVersion", input)
	return &DeleteDetectorVersionFuture{Future: future}
}

func (a *stub) DeleteEntityType(ctx workflow.Context, input *frauddetector.DeleteEntityTypeInput) (*frauddetector.DeleteEntityTypeOutput, error) {
	var output frauddetector.DeleteEntityTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteEntityType", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEntityTypeAsync(ctx workflow.Context, input *frauddetector.DeleteEntityTypeInput) *DeleteEntityTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteEntityType", input)
	return &DeleteEntityTypeFuture{Future: future}
}

func (a *stub) DeleteEvent(ctx workflow.Context, input *frauddetector.DeleteEventInput) (*frauddetector.DeleteEventOutput, error) {
	var output frauddetector.DeleteEventOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteEvent", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEventAsync(ctx workflow.Context, input *frauddetector.DeleteEventInput) *DeleteEventFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteEvent", input)
	return &DeleteEventFuture{Future: future}
}

func (a *stub) DeleteEventType(ctx workflow.Context, input *frauddetector.DeleteEventTypeInput) (*frauddetector.DeleteEventTypeOutput, error) {
	var output frauddetector.DeleteEventTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteEventType", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteEventTypeAsync(ctx workflow.Context, input *frauddetector.DeleteEventTypeInput) *DeleteEventTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteEventType", input)
	return &DeleteEventTypeFuture{Future: future}
}

func (a *stub) DeleteExternalModel(ctx workflow.Context, input *frauddetector.DeleteExternalModelInput) (*frauddetector.DeleteExternalModelOutput, error) {
	var output frauddetector.DeleteExternalModelOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteExternalModel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteExternalModelAsync(ctx workflow.Context, input *frauddetector.DeleteExternalModelInput) *DeleteExternalModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteExternalModel", input)
	return &DeleteExternalModelFuture{Future: future}
}

func (a *stub) DeleteLabel(ctx workflow.Context, input *frauddetector.DeleteLabelInput) (*frauddetector.DeleteLabelOutput, error) {
	var output frauddetector.DeleteLabelOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteLabel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteLabelAsync(ctx workflow.Context, input *frauddetector.DeleteLabelInput) *DeleteLabelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteLabel", input)
	return &DeleteLabelFuture{Future: future}
}

func (a *stub) DeleteModel(ctx workflow.Context, input *frauddetector.DeleteModelInput) (*frauddetector.DeleteModelOutput, error) {
	var output frauddetector.DeleteModelOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteModel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteModelAsync(ctx workflow.Context, input *frauddetector.DeleteModelInput) *DeleteModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteModel", input)
	return &DeleteModelFuture{Future: future}
}

func (a *stub) DeleteModelVersion(ctx workflow.Context, input *frauddetector.DeleteModelVersionInput) (*frauddetector.DeleteModelVersionOutput, error) {
	var output frauddetector.DeleteModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteModelVersionAsync(ctx workflow.Context, input *frauddetector.DeleteModelVersionInput) *DeleteModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteModelVersion", input)
	return &DeleteModelVersionFuture{Future: future}
}

func (a *stub) DeleteOutcome(ctx workflow.Context, input *frauddetector.DeleteOutcomeInput) (*frauddetector.DeleteOutcomeOutput, error) {
	var output frauddetector.DeleteOutcomeOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteOutcome", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteOutcomeAsync(ctx workflow.Context, input *frauddetector.DeleteOutcomeInput) *DeleteOutcomeFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteOutcome", input)
	return &DeleteOutcomeFuture{Future: future}
}

func (a *stub) DeleteRule(ctx workflow.Context, input *frauddetector.DeleteRuleInput) (*frauddetector.DeleteRuleOutput, error) {
	var output frauddetector.DeleteRuleOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteRule", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteRuleAsync(ctx workflow.Context, input *frauddetector.DeleteRuleInput) *DeleteRuleFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteRule", input)
	return &DeleteRuleFuture{Future: future}
}

func (a *stub) DeleteVariable(ctx workflow.Context, input *frauddetector.DeleteVariableInput) (*frauddetector.DeleteVariableOutput, error) {
	var output frauddetector.DeleteVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DeleteVariableAsync(ctx workflow.Context, input *frauddetector.DeleteVariableInput) *DeleteVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DeleteVariable", input)
	return &DeleteVariableFuture{Future: future}
}

func (a *stub) DescribeDetector(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) (*frauddetector.DescribeDetectorOutput, error) {
	var output frauddetector.DescribeDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DescribeDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeDetectorAsync(ctx workflow.Context, input *frauddetector.DescribeDetectorInput) *DescribeDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DescribeDetector", input)
	return &DescribeDetectorFuture{Future: future}
}

func (a *stub) DescribeModelVersions(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) (*frauddetector.DescribeModelVersionsOutput, error) {
	var output frauddetector.DescribeModelVersionsOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-DescribeModelVersions", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) DescribeModelVersionsAsync(ctx workflow.Context, input *frauddetector.DescribeModelVersionsInput) *DescribeModelVersionsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-DescribeModelVersions", input)
	return &DescribeModelVersionsFuture{Future: future}
}

func (a *stub) GetDetectorVersion(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) (*frauddetector.GetDetectorVersionOutput, error) {
	var output frauddetector.GetDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDetectorVersionAsync(ctx workflow.Context, input *frauddetector.GetDetectorVersionInput) *GetDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetDetectorVersion", input)
	return &GetDetectorVersionFuture{Future: future}
}

func (a *stub) GetDetectors(ctx workflow.Context, input *frauddetector.GetDetectorsInput) (*frauddetector.GetDetectorsOutput, error) {
	var output frauddetector.GetDetectorsOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetDetectors", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetDetectorsAsync(ctx workflow.Context, input *frauddetector.GetDetectorsInput) *GetDetectorsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetDetectors", input)
	return &GetDetectorsFuture{Future: future}
}

func (a *stub) GetEntityTypes(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) (*frauddetector.GetEntityTypesOutput, error) {
	var output frauddetector.GetEntityTypesOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetEntityTypes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEntityTypesAsync(ctx workflow.Context, input *frauddetector.GetEntityTypesInput) *GetEntityTypesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetEntityTypes", input)
	return &GetEntityTypesFuture{Future: future}
}

func (a *stub) GetEventPrediction(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) (*frauddetector.GetEventPredictionOutput, error) {
	var output frauddetector.GetEventPredictionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetEventPrediction", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEventPredictionAsync(ctx workflow.Context, input *frauddetector.GetEventPredictionInput) *GetEventPredictionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetEventPrediction", input)
	return &GetEventPredictionFuture{Future: future}
}

func (a *stub) GetEventTypes(ctx workflow.Context, input *frauddetector.GetEventTypesInput) (*frauddetector.GetEventTypesOutput, error) {
	var output frauddetector.GetEventTypesOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetEventTypes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetEventTypesAsync(ctx workflow.Context, input *frauddetector.GetEventTypesInput) *GetEventTypesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetEventTypes", input)
	return &GetEventTypesFuture{Future: future}
}

func (a *stub) GetExternalModels(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) (*frauddetector.GetExternalModelsOutput, error) {
	var output frauddetector.GetExternalModelsOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetExternalModels", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetExternalModelsAsync(ctx workflow.Context, input *frauddetector.GetExternalModelsInput) *GetExternalModelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetExternalModels", input)
	return &GetExternalModelsFuture{Future: future}
}

func (a *stub) GetKMSEncryptionKey(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) (*frauddetector.GetKMSEncryptionKeyOutput, error) {
	var output frauddetector.GetKMSEncryptionKeyOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetKMSEncryptionKey", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.GetKMSEncryptionKeyInput) *GetKMSEncryptionKeyFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetKMSEncryptionKey", input)
	return &GetKMSEncryptionKeyFuture{Future: future}
}

func (a *stub) GetLabels(ctx workflow.Context, input *frauddetector.GetLabelsInput) (*frauddetector.GetLabelsOutput, error) {
	var output frauddetector.GetLabelsOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetLabels", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetLabelsAsync(ctx workflow.Context, input *frauddetector.GetLabelsInput) *GetLabelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetLabels", input)
	return &GetLabelsFuture{Future: future}
}

func (a *stub) GetModelVersion(ctx workflow.Context, input *frauddetector.GetModelVersionInput) (*frauddetector.GetModelVersionOutput, error) {
	var output frauddetector.GetModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetModelVersionAsync(ctx workflow.Context, input *frauddetector.GetModelVersionInput) *GetModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetModelVersion", input)
	return &GetModelVersionFuture{Future: future}
}

func (a *stub) GetModels(ctx workflow.Context, input *frauddetector.GetModelsInput) (*frauddetector.GetModelsOutput, error) {
	var output frauddetector.GetModelsOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetModels", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetModelsAsync(ctx workflow.Context, input *frauddetector.GetModelsInput) *GetModelsFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetModels", input)
	return &GetModelsFuture{Future: future}
}

func (a *stub) GetOutcomes(ctx workflow.Context, input *frauddetector.GetOutcomesInput) (*frauddetector.GetOutcomesOutput, error) {
	var output frauddetector.GetOutcomesOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetOutcomes", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetOutcomesAsync(ctx workflow.Context, input *frauddetector.GetOutcomesInput) *GetOutcomesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetOutcomes", input)
	return &GetOutcomesFuture{Future: future}
}

func (a *stub) GetRules(ctx workflow.Context, input *frauddetector.GetRulesInput) (*frauddetector.GetRulesOutput, error) {
	var output frauddetector.GetRulesOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetRules", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetRulesAsync(ctx workflow.Context, input *frauddetector.GetRulesInput) *GetRulesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetRules", input)
	return &GetRulesFuture{Future: future}
}

func (a *stub) GetVariables(ctx workflow.Context, input *frauddetector.GetVariablesInput) (*frauddetector.GetVariablesOutput, error) {
	var output frauddetector.GetVariablesOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetVariables", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) GetVariablesAsync(ctx workflow.Context, input *frauddetector.GetVariablesInput) *GetVariablesFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-GetVariables", input)
	return &GetVariablesFuture{Future: future}
}

func (a *stub) ListTagsForResource(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) (*frauddetector.ListTagsForResourceOutput, error) {
	var output frauddetector.ListTagsForResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-ListTagsForResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) ListTagsForResourceAsync(ctx workflow.Context, input *frauddetector.ListTagsForResourceInput) *ListTagsForResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-ListTagsForResource", input)
	return &ListTagsForResourceFuture{Future: future}
}

func (a *stub) PutDetector(ctx workflow.Context, input *frauddetector.PutDetectorInput) (*frauddetector.PutDetectorOutput, error) {
	var output frauddetector.PutDetectorOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutDetector", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutDetectorAsync(ctx workflow.Context, input *frauddetector.PutDetectorInput) *PutDetectorFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutDetector", input)
	return &PutDetectorFuture{Future: future}
}

func (a *stub) PutEntityType(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) (*frauddetector.PutEntityTypeOutput, error) {
	var output frauddetector.PutEntityTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutEntityType", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutEntityTypeAsync(ctx workflow.Context, input *frauddetector.PutEntityTypeInput) *PutEntityTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutEntityType", input)
	return &PutEntityTypeFuture{Future: future}
}

func (a *stub) PutEventType(ctx workflow.Context, input *frauddetector.PutEventTypeInput) (*frauddetector.PutEventTypeOutput, error) {
	var output frauddetector.PutEventTypeOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutEventType", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutEventTypeAsync(ctx workflow.Context, input *frauddetector.PutEventTypeInput) *PutEventTypeFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutEventType", input)
	return &PutEventTypeFuture{Future: future}
}

func (a *stub) PutExternalModel(ctx workflow.Context, input *frauddetector.PutExternalModelInput) (*frauddetector.PutExternalModelOutput, error) {
	var output frauddetector.PutExternalModelOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutExternalModel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutExternalModelAsync(ctx workflow.Context, input *frauddetector.PutExternalModelInput) *PutExternalModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutExternalModel", input)
	return &PutExternalModelFuture{Future: future}
}

func (a *stub) PutKMSEncryptionKey(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) (*frauddetector.PutKMSEncryptionKeyOutput, error) {
	var output frauddetector.PutKMSEncryptionKeyOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutKMSEncryptionKey", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutKMSEncryptionKeyAsync(ctx workflow.Context, input *frauddetector.PutKMSEncryptionKeyInput) *PutKMSEncryptionKeyFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutKMSEncryptionKey", input)
	return &PutKMSEncryptionKeyFuture{Future: future}
}

func (a *stub) PutLabel(ctx workflow.Context, input *frauddetector.PutLabelInput) (*frauddetector.PutLabelOutput, error) {
	var output frauddetector.PutLabelOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutLabel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutLabelAsync(ctx workflow.Context, input *frauddetector.PutLabelInput) *PutLabelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutLabel", input)
	return &PutLabelFuture{Future: future}
}

func (a *stub) PutOutcome(ctx workflow.Context, input *frauddetector.PutOutcomeInput) (*frauddetector.PutOutcomeOutput, error) {
	var output frauddetector.PutOutcomeOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutOutcome", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) PutOutcomeAsync(ctx workflow.Context, input *frauddetector.PutOutcomeInput) *PutOutcomeFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-PutOutcome", input)
	return &PutOutcomeFuture{Future: future}
}

func (a *stub) TagResource(ctx workflow.Context, input *frauddetector.TagResourceInput) (*frauddetector.TagResourceOutput, error) {
	var output frauddetector.TagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-TagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) TagResourceAsync(ctx workflow.Context, input *frauddetector.TagResourceInput) *TagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-TagResource", input)
	return &TagResourceFuture{Future: future}
}

func (a *stub) UntagResource(ctx workflow.Context, input *frauddetector.UntagResourceInput) (*frauddetector.UntagResourceOutput, error) {
	var output frauddetector.UntagResourceOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UntagResource", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UntagResourceAsync(ctx workflow.Context, input *frauddetector.UntagResourceInput) *UntagResourceFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UntagResource", input)
	return &UntagResourceFuture{Future: future}
}

func (a *stub) UpdateDetectorVersion(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) (*frauddetector.UpdateDetectorVersionOutput, error) {
	var output frauddetector.UpdateDetectorVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateDetectorVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateDetectorVersionAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionInput) *UpdateDetectorVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateDetectorVersion", input)
	return &UpdateDetectorVersionFuture{Future: future}
}

func (a *stub) UpdateDetectorVersionMetadata(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) (*frauddetector.UpdateDetectorVersionMetadataOutput, error) {
	var output frauddetector.UpdateDetectorVersionMetadataOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateDetectorVersionMetadata", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateDetectorVersionMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionMetadataInput) *UpdateDetectorVersionMetadataFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateDetectorVersionMetadata", input)
	return &UpdateDetectorVersionMetadataFuture{Future: future}
}

func (a *stub) UpdateDetectorVersionStatus(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) (*frauddetector.UpdateDetectorVersionStatusOutput, error) {
	var output frauddetector.UpdateDetectorVersionStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateDetectorVersionStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateDetectorVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateDetectorVersionStatusInput) *UpdateDetectorVersionStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateDetectorVersionStatus", input)
	return &UpdateDetectorVersionStatusFuture{Future: future}
}

func (a *stub) UpdateModel(ctx workflow.Context, input *frauddetector.UpdateModelInput) (*frauddetector.UpdateModelOutput, error) {
	var output frauddetector.UpdateModelOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateModel", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateModelAsync(ctx workflow.Context, input *frauddetector.UpdateModelInput) *UpdateModelFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateModel", input)
	return &UpdateModelFuture{Future: future}
}

func (a *stub) UpdateModelVersion(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) (*frauddetector.UpdateModelVersionOutput, error) {
	var output frauddetector.UpdateModelVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateModelVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateModelVersionAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionInput) *UpdateModelVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateModelVersion", input)
	return &UpdateModelVersionFuture{Future: future}
}

func (a *stub) UpdateModelVersionStatus(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) (*frauddetector.UpdateModelVersionStatusOutput, error) {
	var output frauddetector.UpdateModelVersionStatusOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateModelVersionStatus", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateModelVersionStatusAsync(ctx workflow.Context, input *frauddetector.UpdateModelVersionStatusInput) *UpdateModelVersionStatusFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateModelVersionStatus", input)
	return &UpdateModelVersionStatusFuture{Future: future}
}

func (a *stub) UpdateRuleMetadata(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) (*frauddetector.UpdateRuleMetadataOutput, error) {
	var output frauddetector.UpdateRuleMetadataOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateRuleMetadata", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateRuleMetadataAsync(ctx workflow.Context, input *frauddetector.UpdateRuleMetadataInput) *UpdateRuleMetadataFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateRuleMetadata", input)
	return &UpdateRuleMetadataFuture{Future: future}
}

func (a *stub) UpdateRuleVersion(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) (*frauddetector.UpdateRuleVersionOutput, error) {
	var output frauddetector.UpdateRuleVersionOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateRuleVersion", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateRuleVersionAsync(ctx workflow.Context, input *frauddetector.UpdateRuleVersionInput) *UpdateRuleVersionFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateRuleVersion", input)
	return &UpdateRuleVersionFuture{Future: future}
}

func (a *stub) UpdateVariable(ctx workflow.Context, input *frauddetector.UpdateVariableInput) (*frauddetector.UpdateVariableOutput, error) {
	var output frauddetector.UpdateVariableOutput
	err := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateVariable", input).Get(ctx, &output)
	return &output, err
}

func (a *stub) UpdateVariableAsync(ctx workflow.Context, input *frauddetector.UpdateVariableInput) *UpdateVariableFuture {
	future := workflow.ExecuteActivity(ctx, "aws-frauddetector-UpdateVariable", input)
	return &UpdateVariableFuture{Future: future}
}
