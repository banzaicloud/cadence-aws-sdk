// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package mwaastub

import (
	"github.com/aws/aws-sdk-go/service/mwaa"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	CreateCliToken(ctx workflow.Context, input *mwaa.CreateCliTokenInput) (*mwaa.CreateCliTokenOutput, error)
	CreateCliTokenAsync(ctx workflow.Context, input *mwaa.CreateCliTokenInput) *CreateCliTokenFuture

	CreateEnvironment(ctx workflow.Context, input *mwaa.CreateEnvironmentInput) (*mwaa.CreateEnvironmentOutput, error)
	CreateEnvironmentAsync(ctx workflow.Context, input *mwaa.CreateEnvironmentInput) *CreateEnvironmentFuture

	CreateWebLoginToken(ctx workflow.Context, input *mwaa.CreateWebLoginTokenInput) (*mwaa.CreateWebLoginTokenOutput, error)
	CreateWebLoginTokenAsync(ctx workflow.Context, input *mwaa.CreateWebLoginTokenInput) *CreateWebLoginTokenFuture

	DeleteEnvironment(ctx workflow.Context, input *mwaa.DeleteEnvironmentInput) (*mwaa.DeleteEnvironmentOutput, error)
	DeleteEnvironmentAsync(ctx workflow.Context, input *mwaa.DeleteEnvironmentInput) *DeleteEnvironmentFuture

	GetEnvironment(ctx workflow.Context, input *mwaa.GetEnvironmentInput) (*mwaa.GetEnvironmentOutput, error)
	GetEnvironmentAsync(ctx workflow.Context, input *mwaa.GetEnvironmentInput) *GetEnvironmentFuture

	ListEnvironments(ctx workflow.Context, input *mwaa.ListEnvironmentsInput) (*mwaa.ListEnvironmentsOutput, error)
	ListEnvironmentsAsync(ctx workflow.Context, input *mwaa.ListEnvironmentsInput) *ListEnvironmentsFuture

	ListTagsForResource(ctx workflow.Context, input *mwaa.ListTagsForResourceInput) (*mwaa.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *mwaa.ListTagsForResourceInput) *ListTagsForResourceFuture

	PublishMetrics(ctx workflow.Context, input *mwaa.PublishMetricsInput) (*mwaa.PublishMetricsOutput, error)
	PublishMetricsAsync(ctx workflow.Context, input *mwaa.PublishMetricsInput) *PublishMetricsFuture

	TagResource(ctx workflow.Context, input *mwaa.TagResourceInput) (*mwaa.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *mwaa.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *mwaa.UntagResourceInput) (*mwaa.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *mwaa.UntagResourceInput) *UntagResourceFuture

	UpdateEnvironment(ctx workflow.Context, input *mwaa.UpdateEnvironmentInput) (*mwaa.UpdateEnvironmentOutput, error)
	UpdateEnvironmentAsync(ctx workflow.Context, input *mwaa.UpdateEnvironmentInput) *UpdateEnvironmentFuture
}

func NewClient() Client {
	return &stub{}
}
