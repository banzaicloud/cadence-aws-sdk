// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7

package auditmanagerstub

import (
	"github.com/aws/aws-sdk-go/service/auditmanager"
	"go.uber.org/cadence/workflow"

	"github.com/banzaicloud/cadence-aws-sdk/clients"
)

// ensure that imports are valid even if not used by the generated code
var _ clients.VoidFuture

type Client interface {
	AssociateAssessmentReportEvidenceFolder(ctx workflow.Context, input *auditmanager.AssociateAssessmentReportEvidenceFolderInput) (*auditmanager.AssociateAssessmentReportEvidenceFolderOutput, error)
	AssociateAssessmentReportEvidenceFolderAsync(ctx workflow.Context, input *auditmanager.AssociateAssessmentReportEvidenceFolderInput) *AssociateAssessmentReportEvidenceFolderFuture

	BatchAssociateAssessmentReportEvidence(ctx workflow.Context, input *auditmanager.BatchAssociateAssessmentReportEvidenceInput) (*auditmanager.BatchAssociateAssessmentReportEvidenceOutput, error)
	BatchAssociateAssessmentReportEvidenceAsync(ctx workflow.Context, input *auditmanager.BatchAssociateAssessmentReportEvidenceInput) *BatchAssociateAssessmentReportEvidenceFuture

	BatchCreateDelegationByAssessment(ctx workflow.Context, input *auditmanager.BatchCreateDelegationByAssessmentInput) (*auditmanager.BatchCreateDelegationByAssessmentOutput, error)
	BatchCreateDelegationByAssessmentAsync(ctx workflow.Context, input *auditmanager.BatchCreateDelegationByAssessmentInput) *BatchCreateDelegationByAssessmentFuture

	BatchDeleteDelegationByAssessment(ctx workflow.Context, input *auditmanager.BatchDeleteDelegationByAssessmentInput) (*auditmanager.BatchDeleteDelegationByAssessmentOutput, error)
	BatchDeleteDelegationByAssessmentAsync(ctx workflow.Context, input *auditmanager.BatchDeleteDelegationByAssessmentInput) *BatchDeleteDelegationByAssessmentFuture

	BatchDisassociateAssessmentReportEvidence(ctx workflow.Context, input *auditmanager.BatchDisassociateAssessmentReportEvidenceInput) (*auditmanager.BatchDisassociateAssessmentReportEvidenceOutput, error)
	BatchDisassociateAssessmentReportEvidenceAsync(ctx workflow.Context, input *auditmanager.BatchDisassociateAssessmentReportEvidenceInput) *BatchDisassociateAssessmentReportEvidenceFuture

	BatchImportEvidenceToAssessmentControl(ctx workflow.Context, input *auditmanager.BatchImportEvidenceToAssessmentControlInput) (*auditmanager.BatchImportEvidenceToAssessmentControlOutput, error)
	BatchImportEvidenceToAssessmentControlAsync(ctx workflow.Context, input *auditmanager.BatchImportEvidenceToAssessmentControlInput) *BatchImportEvidenceToAssessmentControlFuture

	CreateAssessment(ctx workflow.Context, input *auditmanager.CreateAssessmentInput) (*auditmanager.CreateAssessmentOutput, error)
	CreateAssessmentAsync(ctx workflow.Context, input *auditmanager.CreateAssessmentInput) *CreateAssessmentFuture

	CreateAssessmentFramework(ctx workflow.Context, input *auditmanager.CreateAssessmentFrameworkInput) (*auditmanager.CreateAssessmentFrameworkOutput, error)
	CreateAssessmentFrameworkAsync(ctx workflow.Context, input *auditmanager.CreateAssessmentFrameworkInput) *CreateAssessmentFrameworkFuture

	CreateAssessmentReport(ctx workflow.Context, input *auditmanager.CreateAssessmentReportInput) (*auditmanager.CreateAssessmentReportOutput, error)
	CreateAssessmentReportAsync(ctx workflow.Context, input *auditmanager.CreateAssessmentReportInput) *CreateAssessmentReportFuture

	CreateControl(ctx workflow.Context, input *auditmanager.CreateControlInput) (*auditmanager.CreateControlOutput, error)
	CreateControlAsync(ctx workflow.Context, input *auditmanager.CreateControlInput) *CreateControlFuture

	DeleteAssessment(ctx workflow.Context, input *auditmanager.DeleteAssessmentInput) (*auditmanager.DeleteAssessmentOutput, error)
	DeleteAssessmentAsync(ctx workflow.Context, input *auditmanager.DeleteAssessmentInput) *DeleteAssessmentFuture

	DeleteAssessmentFramework(ctx workflow.Context, input *auditmanager.DeleteAssessmentFrameworkInput) (*auditmanager.DeleteAssessmentFrameworkOutput, error)
	DeleteAssessmentFrameworkAsync(ctx workflow.Context, input *auditmanager.DeleteAssessmentFrameworkInput) *DeleteAssessmentFrameworkFuture

	DeleteAssessmentReport(ctx workflow.Context, input *auditmanager.DeleteAssessmentReportInput) (*auditmanager.DeleteAssessmentReportOutput, error)
	DeleteAssessmentReportAsync(ctx workflow.Context, input *auditmanager.DeleteAssessmentReportInput) *DeleteAssessmentReportFuture

	DeleteControl(ctx workflow.Context, input *auditmanager.DeleteControlInput) (*auditmanager.DeleteControlOutput, error)
	DeleteControlAsync(ctx workflow.Context, input *auditmanager.DeleteControlInput) *DeleteControlFuture

	DeregisterAccount(ctx workflow.Context, input *auditmanager.DeregisterAccountInput) (*auditmanager.DeregisterAccountOutput, error)
	DeregisterAccountAsync(ctx workflow.Context, input *auditmanager.DeregisterAccountInput) *DeregisterAccountFuture

	DeregisterOrganizationAdminAccount(ctx workflow.Context, input *auditmanager.DeregisterOrganizationAdminAccountInput) (*auditmanager.DeregisterOrganizationAdminAccountOutput, error)
	DeregisterOrganizationAdminAccountAsync(ctx workflow.Context, input *auditmanager.DeregisterOrganizationAdminAccountInput) *DeregisterOrganizationAdminAccountFuture

	DisassociateAssessmentReportEvidenceFolder(ctx workflow.Context, input *auditmanager.DisassociateAssessmentReportEvidenceFolderInput) (*auditmanager.DisassociateAssessmentReportEvidenceFolderOutput, error)
	DisassociateAssessmentReportEvidenceFolderAsync(ctx workflow.Context, input *auditmanager.DisassociateAssessmentReportEvidenceFolderInput) *DisassociateAssessmentReportEvidenceFolderFuture

	GetAccountStatus(ctx workflow.Context, input *auditmanager.GetAccountStatusInput) (*auditmanager.GetAccountStatusOutput, error)
	GetAccountStatusAsync(ctx workflow.Context, input *auditmanager.GetAccountStatusInput) *GetAccountStatusFuture

	GetAssessment(ctx workflow.Context, input *auditmanager.GetAssessmentInput) (*auditmanager.GetAssessmentOutput, error)
	GetAssessmentAsync(ctx workflow.Context, input *auditmanager.GetAssessmentInput) *GetAssessmentFuture

	GetAssessmentFramework(ctx workflow.Context, input *auditmanager.GetAssessmentFrameworkInput) (*auditmanager.GetAssessmentFrameworkOutput, error)
	GetAssessmentFrameworkAsync(ctx workflow.Context, input *auditmanager.GetAssessmentFrameworkInput) *GetAssessmentFrameworkFuture

	GetAssessmentReportUrl(ctx workflow.Context, input *auditmanager.GetAssessmentReportUrlInput) (*auditmanager.GetAssessmentReportUrlOutput, error)
	GetAssessmentReportUrlAsync(ctx workflow.Context, input *auditmanager.GetAssessmentReportUrlInput) *GetAssessmentReportUrlFuture

	GetChangeLogs(ctx workflow.Context, input *auditmanager.GetChangeLogsInput) (*auditmanager.GetChangeLogsOutput, error)
	GetChangeLogsAsync(ctx workflow.Context, input *auditmanager.GetChangeLogsInput) *GetChangeLogsFuture

	GetControl(ctx workflow.Context, input *auditmanager.GetControlInput) (*auditmanager.GetControlOutput, error)
	GetControlAsync(ctx workflow.Context, input *auditmanager.GetControlInput) *GetControlFuture

	GetDelegations(ctx workflow.Context, input *auditmanager.GetDelegationsInput) (*auditmanager.GetDelegationsOutput, error)
	GetDelegationsAsync(ctx workflow.Context, input *auditmanager.GetDelegationsInput) *GetDelegationsFuture

	GetEvidence(ctx workflow.Context, input *auditmanager.GetEvidenceInput) (*auditmanager.GetEvidenceOutput, error)
	GetEvidenceAsync(ctx workflow.Context, input *auditmanager.GetEvidenceInput) *GetEvidenceFuture

	GetEvidenceByEvidenceFolder(ctx workflow.Context, input *auditmanager.GetEvidenceByEvidenceFolderInput) (*auditmanager.GetEvidenceByEvidenceFolderOutput, error)
	GetEvidenceByEvidenceFolderAsync(ctx workflow.Context, input *auditmanager.GetEvidenceByEvidenceFolderInput) *GetEvidenceByEvidenceFolderFuture

	GetEvidenceFolder(ctx workflow.Context, input *auditmanager.GetEvidenceFolderInput) (*auditmanager.GetEvidenceFolderOutput, error)
	GetEvidenceFolderAsync(ctx workflow.Context, input *auditmanager.GetEvidenceFolderInput) *GetEvidenceFolderFuture

	GetEvidenceFoldersByAssessment(ctx workflow.Context, input *auditmanager.GetEvidenceFoldersByAssessmentInput) (*auditmanager.GetEvidenceFoldersByAssessmentOutput, error)
	GetEvidenceFoldersByAssessmentAsync(ctx workflow.Context, input *auditmanager.GetEvidenceFoldersByAssessmentInput) *GetEvidenceFoldersByAssessmentFuture

	GetEvidenceFoldersByAssessmentControl(ctx workflow.Context, input *auditmanager.GetEvidenceFoldersByAssessmentControlInput) (*auditmanager.GetEvidenceFoldersByAssessmentControlOutput, error)
	GetEvidenceFoldersByAssessmentControlAsync(ctx workflow.Context, input *auditmanager.GetEvidenceFoldersByAssessmentControlInput) *GetEvidenceFoldersByAssessmentControlFuture

	GetOrganizationAdminAccount(ctx workflow.Context, input *auditmanager.GetOrganizationAdminAccountInput) (*auditmanager.GetOrganizationAdminAccountOutput, error)
	GetOrganizationAdminAccountAsync(ctx workflow.Context, input *auditmanager.GetOrganizationAdminAccountInput) *GetOrganizationAdminAccountFuture

	GetServicesInScope(ctx workflow.Context, input *auditmanager.GetServicesInScopeInput) (*auditmanager.GetServicesInScopeOutput, error)
	GetServicesInScopeAsync(ctx workflow.Context, input *auditmanager.GetServicesInScopeInput) *GetServicesInScopeFuture

	GetSettings(ctx workflow.Context, input *auditmanager.GetSettingsInput) (*auditmanager.GetSettingsOutput, error)
	GetSettingsAsync(ctx workflow.Context, input *auditmanager.GetSettingsInput) *GetSettingsFuture

	ListAssessmentFrameworks(ctx workflow.Context, input *auditmanager.ListAssessmentFrameworksInput) (*auditmanager.ListAssessmentFrameworksOutput, error)
	ListAssessmentFrameworksAsync(ctx workflow.Context, input *auditmanager.ListAssessmentFrameworksInput) *ListAssessmentFrameworksFuture

	ListAssessmentReports(ctx workflow.Context, input *auditmanager.ListAssessmentReportsInput) (*auditmanager.ListAssessmentReportsOutput, error)
	ListAssessmentReportsAsync(ctx workflow.Context, input *auditmanager.ListAssessmentReportsInput) *ListAssessmentReportsFuture

	ListAssessments(ctx workflow.Context, input *auditmanager.ListAssessmentsInput) (*auditmanager.ListAssessmentsOutput, error)
	ListAssessmentsAsync(ctx workflow.Context, input *auditmanager.ListAssessmentsInput) *ListAssessmentsFuture

	ListControls(ctx workflow.Context, input *auditmanager.ListControlsInput) (*auditmanager.ListControlsOutput, error)
	ListControlsAsync(ctx workflow.Context, input *auditmanager.ListControlsInput) *ListControlsFuture

	ListKeywordsForDataSource(ctx workflow.Context, input *auditmanager.ListKeywordsForDataSourceInput) (*auditmanager.ListKeywordsForDataSourceOutput, error)
	ListKeywordsForDataSourceAsync(ctx workflow.Context, input *auditmanager.ListKeywordsForDataSourceInput) *ListKeywordsForDataSourceFuture

	ListNotifications(ctx workflow.Context, input *auditmanager.ListNotificationsInput) (*auditmanager.ListNotificationsOutput, error)
	ListNotificationsAsync(ctx workflow.Context, input *auditmanager.ListNotificationsInput) *ListNotificationsFuture

	ListTagsForResource(ctx workflow.Context, input *auditmanager.ListTagsForResourceInput) (*auditmanager.ListTagsForResourceOutput, error)
	ListTagsForResourceAsync(ctx workflow.Context, input *auditmanager.ListTagsForResourceInput) *ListTagsForResourceFuture

	RegisterAccount(ctx workflow.Context, input *auditmanager.RegisterAccountInput) (*auditmanager.RegisterAccountOutput, error)
	RegisterAccountAsync(ctx workflow.Context, input *auditmanager.RegisterAccountInput) *RegisterAccountFuture

	RegisterOrganizationAdminAccount(ctx workflow.Context, input *auditmanager.RegisterOrganizationAdminAccountInput) (*auditmanager.RegisterOrganizationAdminAccountOutput, error)
	RegisterOrganizationAdminAccountAsync(ctx workflow.Context, input *auditmanager.RegisterOrganizationAdminAccountInput) *RegisterOrganizationAdminAccountFuture

	TagResource(ctx workflow.Context, input *auditmanager.TagResourceInput) (*auditmanager.TagResourceOutput, error)
	TagResourceAsync(ctx workflow.Context, input *auditmanager.TagResourceInput) *TagResourceFuture

	UntagResource(ctx workflow.Context, input *auditmanager.UntagResourceInput) (*auditmanager.UntagResourceOutput, error)
	UntagResourceAsync(ctx workflow.Context, input *auditmanager.UntagResourceInput) *UntagResourceFuture

	UpdateAssessment(ctx workflow.Context, input *auditmanager.UpdateAssessmentInput) (*auditmanager.UpdateAssessmentOutput, error)
	UpdateAssessmentAsync(ctx workflow.Context, input *auditmanager.UpdateAssessmentInput) *UpdateAssessmentFuture

	UpdateAssessmentControl(ctx workflow.Context, input *auditmanager.UpdateAssessmentControlInput) (*auditmanager.UpdateAssessmentControlOutput, error)
	UpdateAssessmentControlAsync(ctx workflow.Context, input *auditmanager.UpdateAssessmentControlInput) *UpdateAssessmentControlFuture

	UpdateAssessmentControlSetStatus(ctx workflow.Context, input *auditmanager.UpdateAssessmentControlSetStatusInput) (*auditmanager.UpdateAssessmentControlSetStatusOutput, error)
	UpdateAssessmentControlSetStatusAsync(ctx workflow.Context, input *auditmanager.UpdateAssessmentControlSetStatusInput) *UpdateAssessmentControlSetStatusFuture

	UpdateAssessmentFramework(ctx workflow.Context, input *auditmanager.UpdateAssessmentFrameworkInput) (*auditmanager.UpdateAssessmentFrameworkOutput, error)
	UpdateAssessmentFrameworkAsync(ctx workflow.Context, input *auditmanager.UpdateAssessmentFrameworkInput) *UpdateAssessmentFrameworkFuture

	UpdateAssessmentStatus(ctx workflow.Context, input *auditmanager.UpdateAssessmentStatusInput) (*auditmanager.UpdateAssessmentStatusOutput, error)
	UpdateAssessmentStatusAsync(ctx workflow.Context, input *auditmanager.UpdateAssessmentStatusInput) *UpdateAssessmentStatusFuture

	UpdateControl(ctx workflow.Context, input *auditmanager.UpdateControlInput) (*auditmanager.UpdateControlOutput, error)
	UpdateControlAsync(ctx workflow.Context, input *auditmanager.UpdateControlInput) *UpdateControlFuture

	UpdateSettings(ctx workflow.Context, input *auditmanager.UpdateSettingsInput) (*auditmanager.UpdateSettingsOutput, error)
	UpdateSettingsAsync(ctx workflow.Context, input *auditmanager.UpdateSettingsInput) *UpdateSettingsFuture

	ValidateAssessmentReportIntegrity(ctx workflow.Context, input *auditmanager.ValidateAssessmentReportIntegrityInput) (*auditmanager.ValidateAssessmentReportIntegrityOutput, error)
	ValidateAssessmentReportIntegrityAsync(ctx workflow.Context, input *auditmanager.ValidateAssessmentReportIntegrityInput) *ValidateAssessmentReportIntegrityFuture
}

func NewClient() Client {
	return &stub{}
}
